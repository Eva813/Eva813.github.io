<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>部署至 Vercel 遇到「Unexpected token &#39;&lt;&#39;」錯誤：原因與解法</title>
      <link href="/2025/10/04/vercel-deploy/"/>
      <url>/2025/10/04/vercel-deploy/</url>
      
        <content type="html"><![CDATA[<p>最近在部署專案到 Vercel 時，遇到了一個讓我困擾的錯誤訊息：「Unexpected token ‘&lt;’」。這個錯誤通常表示我們預期收到的是 JSON 格式的資料，但實際上卻收到了 HTML 頁面。本文將分享我遇到這個問題的背景、原因，以及兩種解決方案，幫助大家在使用 Vercel 部署時能夠順利取得 API 資料。</p><h1 id="部署至-Vercel-遇到「Unexpected-token-‘-lt-’」錯誤：原因與解法"><a href="#部署至-Vercel-遇到「Unexpected-token-‘-lt-’」錯誤：原因與解法" class="headerlink" title="部署至 Vercel 遇到「Unexpected token ‘&lt;’」錯誤：原因與解法"></a>部署至 Vercel 遇到「Unexpected token ‘&lt;’」錯誤：原因與解法</h1><p>在將專案部署到 <strong>Vercel</strong> 時，當我透過瀏覽器或 extension background fetch 呼叫 API，卻出現以下錯誤：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">取得資料夾失敗: Unexpected token &#x27;&lt;&#x27;, &quot;&lt;!doctype &quot;... is not valid JSON</span><br></pre></td></tr></table></figure><p>那代表請求並沒有真正拿到 JSON，而是得到了 HTML 頁面。本文將說明這個問題的原因、背後的背景，以及兩種完整的解法。</p><h2 id="問題說明"><a href="#問題說明" class="headerlink" title="問題說明"></a>問題說明</h2><p>這次在 <strong>Arc 瀏覽器</strong> 的開發過程中，我嘗試從部署於 Vercel 的 API 端點取得資料，但 Console 顯示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.iife_dev.js:24922 取得資料夾失敗: Unexpected token &#x27;&lt;&#x27;, &quot;&lt;!doctype &quot;... is not valid JSON</span><br></pre></td></tr></table></figure><p>進一步到 <strong>Arc 的 Service-Worker DevTools</strong>（<code>arc://inspect/#service-workers</code>）中，打開 background worker 的 Console，可以看到請求的回應實際上是一份 HTML 登入頁面，而非 JSON 資料。</p><hr><h2 id="背景補充：Vercel-的-Deployment-Protection"><a href="#背景補充：Vercel-的-Deployment-Protection" class="headerlink" title="背景補充：Vercel 的 Deployment Protection"></a>背景補充：Vercel 的 Deployment Protection</h2><p>這個錯誤並非來自 <strong>CORS</strong>，而是因為 Vercel 的 <strong>Deployment Protection</strong> 機制。<br>當專案開啟「Vercel Authentication」後，所有 <strong>Preview Deployments</strong> 都需要登入才能訪問。</p><p>因此，extension background 在發出請求時，被導向至登入頁面（HTML），導致解析 JSON 時出現：</p><blockquote><p><code>Unexpected token &#39;&lt;&#39;</code></p></blockquote><span id="more"></span><hr><h2 id="解決方案"><a href="#解決方案" class="headerlink" title="解決方案"></a>解決方案</h2><p>Vercel 提供了兩種方式可以處理這個情況：</p><h3 id="一、（建議）關閉-Preview-部署的-Vercel-Authentication"><a href="#一、（建議）關閉-Preview-部署的-Vercel-Authentication" class="headerlink" title="一、（建議）關閉 Preview 部署的 Vercel Authentication"></a>一、（建議）關閉 Preview 部署的 Vercel Authentication</h3><p>這是最簡單、直接的方式，適合開發階段測試使用。</p><ol><li>進入你的 <strong>Vercel 專案 Dashboard</strong>。</li><li>打開 <strong>Settings → Deployment Protection</strong>。</li><li>在 <strong>Vercel Authentication</strong> 區塊中，將 <strong>Preview Deployments</strong> 的開關關閉。</li><li>等待 Vercel 自動重新部署完成。</li></ol><p>完成後，你的 Preview 連結就不再需要登入。<br>此時從 extension background 發出的 fetch 請求，會直接拿到正確的 <code>200 + JSON</code> 回應。</p><blockquote><p>🔗 參考文件：<a href="https://vercel.com/docs/deployment-protection">Vercel Authentication 介紹 – Vercel</a></p></blockquote><hr><h3 id="二、維持保護但使用「Protection-Bypass-for-Automation」"><a href="#二、維持保護但使用「Protection-Bypass-for-Automation」" class="headerlink" title="二、維持保護但使用「Protection Bypass for Automation」"></a>二、維持保護但使用「Protection Bypass for Automation」</h3><p>如果你希望保留預覽保護機制，同時又讓自動化流程（例如 extension background）能夠訪問 API，可以使用 <strong>Protection Bypass for Automation</strong>。</p><p>設定步驟如下：</p><ol><li><p>前往 <strong>Deployment Protection</strong> 頁面，啟用 <strong>Protection Bypass for Automation</strong>。</p></li><li><p>系統會產生一組密鑰：<code>VERCEL_AUTOMATION_BYPASS_SECRET</code>。</p></li><li><p>在程式中呼叫 API 時，加上以下 Header：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="variable constant_">API_BASE</span> + <span class="string">&#x27;/api/v1/folders&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;x-vercel-protection-bypass&#x27;</span>: <span class="string">&#x27;&lt;YOUR_BYPASS_SECRET&gt;&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>再次執行 fetch，即可拿到正確的 JSON 回應，不需關掉保護。</p></li></ol><blockquote><p>🔗 參考文件：<a href="https://vercel.com/docs/deployment-protection/methods-to-bypass-deployment-protection">Methods to bypass Deployment Protection – Vercel</a></p></blockquote><hr><h2 id="驗證流程"><a href="#驗證流程" class="headerlink" title="驗證流程"></a>驗證流程</h2><p>設定完成後，可依以下步驟驗證是否成功：</p><ol><li><p>在 <strong>Arc 的 Service-Worker DevTools → Network</strong> 面板中觸發一次 fetch。</p></li><li><p>確認 <strong>Status Code</strong> 為 <code>200</code>，且 <strong>Response Body</strong> 為有效的 JSON。</p></li><li><p>在 Response Headers 中應該包含：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: *</span><br><span class="line">x-vercel-protection-bypass: true（若使用 bypass header）</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><table><thead><tr><th>方式</th><th>適用情境</th><th>說明</th></tr></thead><tbody><tr><td>關閉 Preview Authentication</td><td>開發階段</td><td>直接取消保護，方便測試</td></tr><tr><td>使用 Protection Bypass</td><td>正式開發、自動化流程</td><td>維持安全機制，同時允許 API 自動訪問</td></tr></tbody></table><p>我最終選擇了第二種方案——<strong>維持保護但使用「Protection Bypass for Automation」</strong>，這樣既能保持部署安全，又能讓 extension 的 background 正常取得資料。</p><hr><p><strong>延伸閱讀：</strong></p><ul><li><a href="https://vercel.com/docs/deployment-protection/methods-to-bypass-deployment-protection">Vercel: Methods to bypass Deployment Protection</a></li><li><a href="https://vercel.com/eva813s-projects/linxly-nextjs/settings/deployment-protection">專案設定頁 – Deployment Protection</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> side-project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> side-project </tag>
            
            <tag> Next.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷題練習 - Merge-Two-Sorted-Lists</title>
      <link href="/2025/10/04/Merge-Two-Sorted-Lists/"/>
      <url>/2025/10/04/Merge-Two-Sorted-Lists/</url>
      
        <content type="html"><![CDATA[<h2 id="題目描述"><a href="#題目描述" class="headerlink" title="題目描述"></a>題目描述</h2><p>You are given the heads of two sorted linked lists list1 and list2.</p><p>Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.</p><p>Return the head of the merged linked list.</p><p>給定兩個已排序鏈結串列的頭節點 list1 和 list2。<br>將兩個串列合併為一個已排序的串列。該串列應透過拼接前兩個串列的節點來建立。<br>回傳合併後鏈結串列的頭節點。</p><p>Example 1:<br>Input: list1 = [1,2,4], list2 = [1,3,4]<br>Output: [1,1,2,3,4,4]</p><p>Example 2:<br>Input: list1 = [], list2 = []<br>Output: []</p><p>Example 3:<br>Input: list1 = [], list2 = [0]<br>Output: [0]</p><h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>我一開始想法，會需要 2 迴圈去比較，然後組出一個新的 list node，最後再將新的 list node 回傳。<br>但是這樣的話，時間複雜度會是 O(n^2)，因為每次都要從頭開始比較。<br>後來想說，因為兩個 list 都是已排序好的，所以可以用雙指標的方式，一次比較兩個 list 的頭節點，將較小的節點加入新的 list node，然後將該指標往後移動一位，這樣時間複雜度就會是 O(n)，因為每個節點只會被比較一次。</p><h2 id="範例程式碼"><a href="#範例程式碼" class="headerlink" title="範例程式碼"></a>範例程式碼</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val, next) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.next = (next===undefined ? null : next)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">list1</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">list2</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">ListNode</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> mergeTwoLists = <span class="keyword">function</span>(<span class="params">list1, list2</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> head = <span class="literal">null</span></span><br><span class="line">        <span class="keyword">let</span> nowNode = <span class="literal">null</span> </span><br><span class="line">        <span class="keyword">let</span> list1pointer = list1;</span><br><span class="line">        <span class="keyword">let</span> list2pointer = list2;</span><br><span class="line"><span class="comment">// 兩兩比較</span></span><br><span class="line">        <span class="keyword">if</span>(list1 === <span class="literal">null</span> &amp;&amp; list2 === <span class="literal">null</span>) <span class="keyword">return</span> head</span><br><span class="line">        <span class="keyword">if</span>(list1 === <span class="literal">null</span> &amp;&amp; list2 !== <span class="literal">null</span>) <span class="keyword">return</span> list2</span><br><span class="line">        <span class="keyword">if</span>(list1 !== <span class="literal">null</span> &amp;&amp; list2 === <span class="literal">null</span>) <span class="keyword">return</span> list1</span><br><span class="line">        </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// 決定 head</span></span><br><span class="line">        <span class="comment">// 因為當你選擇了 list1pointer 作為頭節點後，你應該：</span></span><br><span class="line">            <span class="comment">// 移動 list1pointer 指針：list1pointer = list1pointer.next</span></span><br><span class="line">            <span class="comment">// 設定 nowNode 為當前的尾節點：nowNode = head</span></span><br><span class="line">        <span class="keyword">if</span>(list1pointer.<span class="property">val</span> &lt;= list2pointer.<span class="property">val</span> )&#123;</span><br><span class="line">            head = list1pointer</span><br><span class="line">            list1pointer = list1pointer.<span class="property">next</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             head = list2pointer</span><br><span class="line">             list2pointer = list2pointer.<span class="property">next</span></span><br><span class="line">        &#125;</span><br><span class="line">        nowNode = head</span><br><span class="line"></span><br><span class="line">        <span class="comment">//進入迴圈檢查</span></span><br><span class="line">        <span class="keyword">while</span>(list1pointer !== <span class="literal">null</span> &amp;&amp; list2pointer !== <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(list1pointer.<span class="property">val</span> &lt;= list2pointer.<span class="property">val</span>)&#123;</span><br><span class="line">                nowNode.<span class="property">next</span> =  list1pointer</span><br><span class="line">                list1pointer = list1pointer.<span class="property">next</span></span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                nowNode.<span class="property">next</span> =  list2pointer</span><br><span class="line">                <span class="comment">// 移動指針</span></span><br><span class="line">                list2pointer = list2pointer.<span class="property">next</span></span><br><span class="line">            &#125;</span><br><span class="line">            nowNode = nowNode.<span class="property">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 最後要再檢查。其中一不為 null </span></span><br><span class="line">        <span class="keyword">if</span>(list1pointer !== <span class="literal">null</span>)&#123;</span><br><span class="line">            nowNode.<span class="property">next</span> = list1pointer</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            nowNode.<span class="property">next</span> = list2pointer</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> head</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h2><ol><li><p>在「<strong>先決定 head</strong>」這段:</p><ol><li><p>透過判斷大小 選擇 <code>list1</code> 的當前節點作為合併鏈表的起始點</p></li><li><p>list1pointer = list1pointer.next </p><ul><li>將 <code>list1pointer</code> 移動到下一個節點</li><li><strong>原因</strong>：因為當前節點已經被「消費」了，加入到合併鏈表中</li></ul><p>決定好 head ，要記得  nowNode = head</p></li></ol></li><li><p>進入 while 迴圈：因為我們 會讓 pointer 移動，可以用 list1pointer !== null  &amp;&amp; list2pointer !== null 來判斷</p><p> <strong><code>nowNode</code> 的角色</strong>：它是合併鏈表的「尾指針」，始終指向當前合併鏈表的最後一個節點。</p><p> <strong><code>nowNode.next</code> 的含義</strong>：它是尾節點的 <code>next</code> 指針，也就是「下一個節點要插入的位置」。</p><ol><li>在迴圈內部，我們需要比較 <code>list1pointer.val</code> 和 <code>list2pointer.val</code></li><li>將比較結果的節點賦值給 <code>nowNode.next</code><strong>，並且要同步移動 list 的 pointer</strong></li></ol><p> <strong>為什麼使用 <code>nowNode.next = list1pointer</code> 而不是 <code>nowNode = list1pointer</code>？</strong></p><ul><li><p><code>nowNode.next = list1pointer</code>：<strong>修改節點內容</strong>，將 <code>nowNode</code> 所指向節點的 <code>next</code> 屬性指向 <code>list1pointer</code>，把剩餘的鏈結串接到已建構的鏈結串列中，<strong>保持鏈結串列的連接性</strong>。</p></li><li><p><code>nowNode = list1pointer</code>：只是<strong>改變變數指向</strong>，不會修改任何節點的 <code>next</code> 屬性，不會將節點串接到結果鏈結串列中。</p><p>範例說明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">目前狀態：</span><br><span class="line">結果鏈結串列: dummyHead -&gt; 1 -&gt; 2 -&gt; (nowNode 在這裡)</span><br><span class="line">list1pointer: 3 -&gt; 5 -&gt; null</span><br><span class="line">list2pointer: null</span><br><span class="line"></span><br><span class="line">使用 nowNode.next = list1pointer：</span><br><span class="line">dummyHead -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 5 -&gt; null  ✓ 正確串接</span><br><span class="line"></span><br><span class="line">使用 nowNode = list1pointer：</span><br><span class="line">dummyHead -&gt; 1 -&gt; 2 -&gt; null  ✗ 鏈結斷掉了</span><br><span class="line">nowNode 變數: 3 -&gt; 5 -&gt; null (獨立的，沒有連到結果鏈結串列)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>最後，因為剛剛迴圈是判斷 2 個 list pointer 不要有 null， 這樣就會有當其中一個走到 null 但另一 list 還有值，就要接上去。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷題練習 - Determine If a Person Could Attend All Meetings</title>
      <link href="/2025/10/04/Meetings-1/"/>
      <url>/2025/10/04/Meetings-1/</url>
      
        <content type="html"><![CDATA[<p>Given an array of meeting time <code>intervals</code> where <code>intervals[i] = [startᵢ, endᵢ]</code>, determine if a person could attend all meetings.</p><p>給定一個會議時間 <code>intervals</code> 陣列，其中 <code>intervals[i] = [startᵢ, endᵢ]</code>，判斷一個人是否能夠參加所有會議。</p><h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1:"></a>Example 1:</h3><p><strong>Input:</strong></p><p><code>intervals = [[0,30],[5,10],[15,20]]</code></p><p><strong>Output:</strong></p><p><code>false</code></p><h3 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2:"></a>Example 2:</h3><p><strong>Input:</strong></p><p><code>intervals = [[7,10],[2,4]]</code></p><p><strong>Output:</strong></p><p><code>true</code></p><h3 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints:"></a>Constraints:</h3><ul><li><code>0 &lt;= intervals.length &lt;= 10⁴</code></li><li><code>intervals[i].length == 2</code></li><li><code>0 &lt;= startᵢ &lt; endᵢ &lt;= 10⁶</code></li></ul><h3 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h3><p>要判斷一個人是否能夠參加所有會議，關鍵在於檢查會議時間是否有重疊。若有任何兩個會議的時間區間重疊，則無法參加所有會議。</p><h4 id="重疊情況分析"><a href="#重疊情況分析" class="headerlink" title="重疊情況分析"></a>重疊情況分析</h4><p>以 <code>[1,5]</code> 和 <code>[2,4]</code> 為範例：</p><ol><li><strong>假設會議時間按開始時間排序</strong>：將所有會議按照開始時間由早到晚排列</li><li><strong>檢查相鄰會議</strong>：排序後，只需檢查相鄰的會議是否重疊</li><li><strong>重疊條件</strong>：前一個會議的結束時間 &gt; 下一個會議的開始時間</li></ol><h4 id="步驟"><a href="#步驟" class="headerlink" title="步驟"></a>步驟</h4><ol><li>將所有會議按開始時間排序</li><li>遍歷排序後的會議陣列</li><li>檢查每個會議的結束時間是否晚於下一個會議的開始時間</li><li>若發現重疊，回傳 <code>false</code>；否則回傳 <code>true</code></li></ol><p>這樣的方法時間複雜度為 O(n log n)（主要是排序的時間），空間複雜度為 O(1)。</p><span id="more"></span><h4 id="範例程式碼"><a href="#範例程式碼" class="headerlink" title="範例程式碼"></a>範例程式碼</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> canAttendMeetings = <span class="keyword">function</span> (<span class="params">intervals</span>) &#123;</span><br><span class="line">  <span class="comment">// 按開始時間排序</span></span><br><span class="line">  intervals.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a[<span class="number">0</span>] - b[<span class="number">0</span>]);</span><br><span class="line">  <span class="keyword">const</span> lastMeetingEnd = intervals[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; intervals.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// 檢查當前會議的開始時間是否早於上個會議的結束時間</span></span><br><span class="line">    <span class="keyword">if</span>(intervals[i][<span class="number">0</span>] &lt; lastMeetingEnd) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 有重疊，無法參加所有會議</span></span><br><span class="line">    &#125;</span><br><span class="line">    lastMeetingEnd = intervals[i][<span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="前端應用場景"><a href="#前端應用場景" class="headerlink" title="前端應用場景"></a>前端應用場景</h2><p>這類問題在前端應用中極為常見，特別是涉及時間管理的系統：</p><h3 id="1-日曆與排程系統"><a href="#1-日曆與排程系統" class="headerlink" title="1. 日曆與排程系統"></a>1. 日曆與排程系統</h3><ul><li>會議排程：檢查新會議是否與現有會議時間衝突</li><li>預訂系統：確保時間段不重疊，避免雙重預訂</li><li>資源管理：防止同一資源在同一時間被多次分配</li></ul><h3 id="2-表單驗證-Form-Validation"><a href="#2-表單驗證-Form-Validation" class="headerlink" title="2. 表單驗證 (Form Validation)"></a>2. 表單驗證 (Form Validation)</h3><ul><li>營業時間設定：驗證多個營業時段是否重疊</li><li>配送時間管理：確保配送時間區間邏輯正確</li><li>客戶端驗證：在提交前即時檢測衝突，提升用戶體驗</li></ul><hr><h2 id="React-互動範例"><a href="#React-互動範例" class="headerlink" title="React 互動範例"></a>React 互動範例</h2><p>以下範例模擬<strong>會議室預訂系統</strong>，展示如何使用本題演算法檢查新會議是否與已預訂時段衝突：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState, useMemo &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Interval</span> = &#123; <span class="attr">start</span>: <span class="built_in">number</span>; <span class="attr">end</span>: <span class="built_in">number</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">MeetingChecker</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 已預訂的會議（實際應用中來自 API）</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">existingMeetings</span>: <span class="title class_">Interval</span>[] = [</span><br><span class="line">    &#123; <span class="attr">start</span>: <span class="number">9</span>, <span class="attr">end</span>: <span class="number">11</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">start</span>: <span class="number">14</span>, <span class="attr">end</span>: <span class="number">16</span> &#125;,</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 用戶想新增的會議</span></span><br><span class="line">  <span class="keyword">const</span> [newMeeting, setNewMeeting] = <span class="title function_">useState</span>(&#123; <span class="attr">start</span>: <span class="number">10</span>, <span class="attr">end</span>: <span class="number">12</span> &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 使用本題演算法：排序後檢查相鄰區間</span></span><br><span class="line">  <span class="keyword">const</span> hasConflict = <span class="title function_">useMemo</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> all = [...existingMeetings, newMeeting];</span><br><span class="line">    <span class="keyword">const</span> sorted = all.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.<span class="property">start</span> - b.<span class="property">start</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; sorted.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (sorted[i].<span class="property">start</span> &lt; sorted[i - <span class="number">1</span>].<span class="property">end</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;, [newMeeting]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;p-6 max-w-md mx-auto&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">className</span>=<span class="string">&quot;text-lg font-bold mb-3&quot;</span>&gt;</span>會議室預訂系統<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &#123;/* 已預訂會議 */&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;mb-4 text-sm text-gray-600&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>已預訂：09:00-11:00<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>已預訂：14:00-16:00<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &#123;/* 新增會議 */&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex gap-2 items-center mb-3&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>新增會議：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;number&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;newMeeting.start&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;(e)</span> =&gt;</span> setNewMeeting(&#123; ...newMeeting, start: +e.target.value &#125;)&#125;</span></span><br><span class="line"><span class="language-xml">          className=&quot;border p-1 rounded w-16&quot;</span></span><br><span class="line"><span class="language-xml">        /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>~<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;number&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;newMeeting.end&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;(e)</span> =&gt;</span> setNewMeeting(&#123; ...newMeeting, end: +e.target.value &#125;)&#125;</span></span><br><span class="line"><span class="language-xml">          className=&quot;border p-1 rounded w-16&quot;</span></span><br><span class="line"><span class="language-xml">        /&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &#123;/* 結果顯示 */&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">p-2</span> <span class="attr">rounded</span> <span class="attr">text-sm</span> $&#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">hasConflict</span> ? &quot;<span class="attr">bg-red-100</span> <span class="attr">text-red-700</span>&quot; <span class="attr">:</span> &quot;<span class="attr">bg-green-100</span> <span class="attr">text-green-700</span>&quot;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &#125;`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;hasConflict ? &quot;❌ 時間衝突，無法預訂&quot; : &quot;✅ 可以預訂&quot;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>使用情境</strong>：模擬會議室預訂系統，當用戶嘗試新增會議時，即時檢查是否與已預訂時段衝突。試著調整時間（例如改為 <code>12-13</code>）觀察結果變化。</p>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用 SeqNo 管理機制提升列表插入效能，解決排序衝突問題</title>
      <link href="/2025/09/07/firebase-seqNo/"/>
      <url>/2025/09/07/firebase-seqNo/</url>
      
        <content type="html"><![CDATA[<p>列表的動態排序和插入為常見的需求。然而，當面對大量資料時，傳統的「刪除重建」策略容易會成為效能瓶頸。本文將分享我在專案中如何透過 SeqNo 管理機制，將列表插入效能提升，同時保持資料一致性和系統穩定性。</p><p>在專案內有一下拉列表的功能，當使用者選擇某個選項後，會將該選項插入到列表中，並且會依據使用者的操作順序來進行排序。最初的實作方式是每次插入新選項時，都會重新計算整個列表的排序，這在資料量較大時，導致效能明顯下降。為了解決這個問題，引入了 SeqNo 管理機制。</p><h2 id="原有問題"><a href="#原有問題" class="headerlink" title="原有問題"></a>原有問題</h2><p>當使用者要在列表中間插入新的資料時，使系統面臨挑戰，並且在沒有加入 seqNo 管理機制前，容易遇到排序衝突的問題。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原有狀態</span></span><br><span class="line">[</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;A&#x27;</span>, <span class="attr">seqNo</span>: <span class="number">1</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;B&#x27;</span>, <span class="attr">seqNo</span>: <span class="number">2</span> &#125;,  <span class="comment">// 要在 B 後面插入新項目</span></span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;C&#x27;</span>, <span class="attr">seqNo</span>: <span class="number">3</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;D&#x27;</span>, <span class="attr">seqNo</span>: <span class="number">4</span> &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>如果直接將新項目設為 seqNo: 3，會與現有的項目 C 發生衝突。</p><h3 id="傳統解決方案的困境"><a href="#傳統解決方案的困境" class="headerlink" title="傳統解決方案的困境"></a>傳統解決方案的困境</h3><p>直觀的解決方案是重新排序所有項目：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 刪除重建</span></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">insertListData</span>(<span class="params">afterId: string, </span></span><br><span class="line"><span class="params">  newListData: ListData</span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 刪除所有後續項目 (N-M 次刪除)</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">deleteListDataAfter</span>(afterId);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 重新建立所有項目 (N-M+1 次建立)</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">recreateListDataWithNewSeqNo</span>(newListData,</span><br><span class="line">  subsequentListData);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>操作複雜度: O(2N+1) - 其中 N 為列表總長度</li><li>資料庫壓力: 大量刪除和建立操作</li><li>交易風險: 操作步驟過多，失敗機率高</li><li>併發問題: 長時間鎖定，容易產生競爭條件</li></ul><h2 id="SeqNo-管理機制"><a href="#SeqNo-管理機制" class="headerlink" title="SeqNo 管理機制"></a>SeqNo 管理機制</h2><p> 只更新真正需要變動的項目，將複雜度進行改善，是插入點之後的項目數量。</p><ol><li>排序基礎函式<br>確保所有項目能依照 seqNo 正確排序。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 排序工具</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">sortListDataBySeqNo</span>(<span class="params">listData: ListData[]</span>): <span class="title class_">ListData</span>[] &#123;</span><br><span class="line">  <span class="keyword">return</span> [...listData].<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> aSeqNo = a.<span class="property">seqNo</span> || <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> bSeqNo = b.<span class="property">seqNo</span> || <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> aSeqNo - bSeqNo;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>插入策略計算</li></ol><p>只計算「插入點之後」需要調整的項目，並產生更新操作清單。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">calculateInsertStrategy</span>(<span class="params"></span></span><br><span class="line"><span class="params">  existingListData: ListData[],</span></span><br><span class="line"><span class="params">  afterListDataId: string</span></span><br><span class="line"><span class="params"></span>): &#123;</span><br><span class="line">  <span class="attr">insertSeqNo</span>: number;</span><br><span class="line">  <span class="attr">affectedListData</span>: <span class="title class_">ListData</span>[];</span><br><span class="line">  <span class="attr">updateOperations</span>: <span class="title class_">Array</span>&lt;&#123; <span class="attr">listDataId</span>: string; <span class="attr">newSeqNo</span>: number &#125;&gt;;</span><br><span class="line">&#125; &#123;</span><br><span class="line">  <span class="keyword">const</span> sortedListData = <span class="title function_">sortListDataBySeqNo</span>(existingListData);</span><br><span class="line">  <span class="keyword">const</span> afterIndex = sortedListData.<span class="title function_">findIndex</span>(<span class="function"><span class="params">data</span> =&gt;</span> data.<span class="property">id</span> === afterListDataId);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (afterIndex === -<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;afterListDataId not found&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 關鍵：插入點的 seqNo + 1</span></span><br><span class="line">  <span class="keyword">const</span> insertSeqNo = sortedListData[afterIndex].<span class="property">seqNo</span>! + <span class="number">1</span>;</span><br><span class="line">  <span class="comment">// 只影響插入點之後的項目</span></span><br><span class="line">  <span class="keyword">const</span> affectedListData = sortedListData.<span class="title function_">slice</span>(afterIndex + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 產生更新操作清單</span></span><br><span class="line">  <span class="keyword">const</span> updateOperations = affectedListData.<span class="title function_">map</span>(<span class="function"><span class="params">data</span> =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">listDataId</span>: data.<span class="property">id</span>,</span><br><span class="line">    <span class="attr">newSeqNo</span>: data.<span class="property">seqNo</span>! + <span class="number">1</span></span><br><span class="line">  &#125;));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123; insertSeqNo, affectedListData, updateOperations &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>交易執行<br>確保所有更新操作能在同一個 Transaction 中完成。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">executeSeqNoUpdates</span>(<span class="params"></span></span><br><span class="line"><span class="params">  transaction: Transaction,</span></span><br><span class="line"><span class="params">  operations: <span class="built_in">Array</span>&lt;&#123; listDataId: string; newSeqNo: number &#125;&gt;</span></span><br><span class="line"><span class="params"></span>): <span class="title class_">Promise</span>&lt;<span class="keyword">void</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> operation <span class="keyword">of</span> operations) &#123;</span><br><span class="line">    <span class="comment">// 更新每個受影響的項目</span></span><br><span class="line">    <span class="keyword">const</span> listDataRef = adminDb.<span class="title function_">collection</span>(<span class="string">&#x27;listData&#x27;</span>).<span class="title function_">doc</span>(operation.<span class="property">listDataId</span>);</span><br><span class="line">    transaction.<span class="title function_">update</span>(listDataRef, &#123;</span><br><span class="line">      <span class="attr">seqNo</span>: operation.<span class="property">newSeqNo</span>,</span><br><span class="line">      <span class="attr">updatedAt</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>API 實現範例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// POST /api/v1/listData</span></span><br><span class="line"> <span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">POST</span>(<span class="params">req: Request</span>) &#123;</span><br><span class="line">  <span class="comment">// ... 驗證邏輯</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (afterListDataId) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 步驟1: 計算最小更新策略</span></span><br><span class="line">      <span class="keyword">const</span> &#123; updateOperations, insertSeqNo &#125; =</span><br><span class="line">        <span class="title function_">calculateInsertStrategy</span>(existingListData, afterListDataId);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 步驟2: Transaction 執行</span></span><br><span class="line">      <span class="keyword">const</span> result = <span class="keyword">await</span> adminDb.<span class="title function_">runTransaction</span>(<span class="keyword">async</span> (transaction) =&gt; &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">executeSeqNoUpdates</span>(transaction, updateOperations);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 插入新項目</span></span><br><span class="line">        <span class="keyword">const</span> listDataRef = adminDb.<span class="title function_">collection</span>(<span class="string">&#x27;listData&#x27;</span>).<span class="title function_">doc</span>();</span><br><span class="line">        transaction.<span class="title function_">set</span>(listDataRef, &#123;</span><br><span class="line">          ...newListData,</span><br><span class="line">          <span class="attr">seqNo</span>: insertSeqNo</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="attr">id</span>: listDataRef.<span class="property">id</span>, <span class="attr">seqNo</span>: insertSeqNo &#125;;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">json</span>(result, &#123; <span class="attr">status</span>: <span class="number">201</span> &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="keyword">if</span> (error.<span class="property">message</span> === <span class="string">&#x27;afterListDataId not found&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;afterListDataId not found&#x27;</span> &#125;, &#123; <span class="attr">status</span>: <span class="number">404</span> &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">throw</span> error;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="此專案的應用回顧與心得"><a href="#此專案的應用回顧與心得" class="headerlink" title="此專案的應用回顧與心得"></a>此專案的應用回顧與心得</h2><p>這個問題最初是在「插入列表中間」時被發現的。<br>當時經常出現排序錯亂，追查後才發現是因為缺乏 SeqNo 管理機制，導致插入時 seqNo 發生衝突。</p><p>一開始的解法是 刪除重建，但這帶來兩個明顯的問題：<br>1.當資料量大時，對後端資料庫造成極大負擔。<br>2.使用者操作無法預測，若頻繁在列表中間插入或刪除，效能會快速下降。</p><p>引入 SeqNo 管理機制 後：</p><ul><li>插入效能明顯提升</li><li>保持了資料一致性</li><li>系統穩定性也大幅改善<br>這樣的設計不僅解決了排序衝突，也大幅減少了資料庫的操作次數，讓整體效能更加穩定可</li></ul>]]></content>
      
      
      <categories>
          
          <category> side-project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> firebase </tag>
            
            <tag> side-project </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>實現前端自動儲存系統：Next.js + Zustand</title>
      <link href="/2025/06/29/frontend-auto-save/"/>
      <url>/2025/06/29/frontend-auto-save/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在現代 Web 應用開發中，自動儲存功能已成為用戶體驗的重要組成部分。想像一下，用戶正在編輯重要文件時還需要手動點擊儲存按鈕，如果沒有自動儲存機制、或是遺忘點擊儲存，所有辛苦編輯的內容都會瞬間消失。這種糟糕的體驗促使我思考：如何設計一個既智能又穩定的自動儲存系統？</p><p>本文將提供我在專案內內實作如何使用 Next.js 14 + Zustand 架構實現一個完整的自動儲存系統。</p><h2 id="項目背景與需求分析"><a href="#項目背景與需求分析" class="headerlink" title="項目背景與需求分析"></a>項目背景與需求分析</h2><h3 id="應用場景概述"><a href="#應用場景概述" class="headerlink" title="應用場景概述"></a>應用場景概述</h3><p>我們面對的是一個 prompt 管理平台，類似於代碼編輯器或筆記應用。用戶可以：</p><ul><li>創建和編輯 prompt</li><li>設置快捷鍵進行快速訪問</li><li>組織提示詞到不同文件夾</li><li>進行富文本編輯</li></ul><h3 id="核心技術挑戰"><a href="#核心技術挑戰" class="headerlink" title="核心技術挑戰"></a>核心技術挑戰</h3><p>在這樣的編輯環境中，面臨以下挑戰：</p><ol><li><strong>頻繁的內容變更</strong>：用戶持續輸入和修改內容</li><li><strong>多字段同步</strong>：標題、內容、快捷鍵需要同時追蹤</li><li><strong>性能考量</strong>：避免過度頻繁的 API 調用</li><li><strong>用戶反饋</strong>：清晰的保存狀態指示</li></ol><h3 id="技術選型理由"><a href="#技術選型理由" class="headerlink" title="技術選型理由"></a>技術選型理由</h3><p>我們選擇以下技術棧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">技術棧架構</span><br><span class="line">├── Next.js 14 (App Router) - 前端框架</span><br><span class="line">├── Zustand - 狀態管理</span><br><span class="line">├── TypeScript - 類型安全</span><br><span class="line">├── TipTap - 富文本編輯器</span><br><span class="line">└── Firebase - 後端數據存儲</span><br></pre></td></tr></table></figure><p><strong>為什麼選擇這個組合？</strong></p><ul><li><strong>Next.js 14</strong>：提供現代化的 React 開發體驗和卓越的性能</li><li><strong>Zustand</strong>：相比 Redux 更輕量，但功能完整的狀態管理方案</li><li><strong>TypeScript</strong>：在複雜的狀態管理中提供類型安全保障</li><li><strong>Firebase</strong>：簡化後端開發，讓我們專注於前端邏輯</li></ul><h2 id="系統架構設計"><a href="#系統架構設計" class="headerlink" title="系統架構設計"></a>系統架構設計</h2><h3 id="整體架構思路"><a href="#整體架構思路" class="headerlink" title="整體架構思路"></a>整體架構思路</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">自動保存系統架構</span><br><span class="line"></span><br><span class="line">     ┌────────────────────────────────────────────────┐</span><br><span class="line">     │                    UI 組件層                    │</span><br><span class="line">     │                                                │</span><br><span class="line">     │   ┌─────────────────┐   ┌────────────────────┐ │</span><br><span class="line">     │   │  編輯器組件       │   │ SaveStatusIndicator│ │</span><br><span class="line">     │   │  (表單輸入)       │   │ (保存狀態顯示)       │ │</span><br><span class="line">     │   └─────────────────┘   └────────────────────┘ │</span><br><span class="line">     │                                                │</span><br><span class="line">     └────────────────────────────────────────────────┘</span><br><span class="line">                           │</span><br><span class="line">                           ▼</span><br><span class="line">     ┌────────────────────────────────────────────────┐</span><br><span class="line">     │                   業務邏輯層                     │</span><br><span class="line">     │                                                │</span><br><span class="line">     │      ┌────────────────────────────────────┐    │</span><br><span class="line">     │      │         usePromptPageLogic         │    │</span><br><span class="line">     │      │  • 表單狀態管理                      │    │</span><br><span class="line">     │      │  • Debounce 自動保存                │    │</span><br><span class="line">     │      │  • 數據驗證                         │    │</span><br><span class="line">     │      │  • 錯誤處理                         │    │</span><br><span class="line">     │      └────────────────────────────────────┘    │</span><br><span class="line">     │                                                │</span><br><span class="line">     └────────────────────────────────────────────────┘</span><br><span class="line">                           │</span><br><span class="line">                           ▼</span><br><span class="line">     ┌────────────────────────────────────────────────┐</span><br><span class="line">     │                   狀態管理層                     │</span><br><span class="line">     │                                                │</span><br><span class="line">     │   ┌─────────────────┐   ┌────────────────────┐ │</span><br><span class="line">     │   │  useSaveStore   │   │  usePromptStore    │ │</span><br><span class="line">     │   │  (保存狀態)      │   │  (業務數據)          │ │</span><br><span class="line">     │   └─────────────────┘   └────────────────────┘ │</span><br><span class="line">     │                                                │</span><br><span class="line">     └────────────────────────────────────────────────┘</span><br><span class="line">                           │</span><br><span class="line">                           ▼</span><br><span class="line">     ┌────────────────────────────────────────────────┐</span><br><span class="line">     │                     API 層                     │</span><br><span class="line">     │                                                │</span><br><span class="line">     │               Firebase/REST API                │</span><br><span class="line">     │                                                │</span><br><span class="line">     └────────────────────────────────────────────────┘</span><br></pre></td></tr></table></figure><h3 id="核心設計原則"><a href="#核心設計原則" class="headerlink" title="核心設計原則"></a>核心設計原則</h3><ol><li><strong>關注點分離</strong>：UI、業務邏輯、狀態管理各司其職</li><li><strong>單一職責</strong>：每個 Hook 和組件都有明確的責任範圍  </li><li><strong>可組合性</strong>：小而專精的函數可以靈活組合</li><li><strong>類型安全</strong>：全程 TypeScript 保護，減少運行時錯誤</li></ol><h2 id="核心工具"><a href="#核心工具" class="headerlink" title="核心工具"></a>核心工具</h2><h3 id="1-Debounce-防抖機制"><a href="#1-Debounce-防抖機制" class="headerlink" title="1. Debounce 防抖機制"></a>1. Debounce 防抖機制</h3><p>Debounce 是自動保存的核心技術，它能延遲函數執行直到停止觸發一段時間後。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> <span class="title class_">DebouncedFunction</span>&lt;T <span class="keyword">extends</span> (...<span class="attr">args</span>: <span class="built_in">unknown</span>[]) =&gt; <span class="built_in">unknown</span>&gt; = T &amp; &#123;</span><br><span class="line">  <span class="attr">cancel</span>: <span class="function">() =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> debounce&lt;T <span class="keyword">extends</span> (...<span class="attr">args</span>: <span class="built_in">unknown</span>[]) =&gt; <span class="built_in">void</span>&gt;(</span><br><span class="line">  <span class="attr">func</span>: T, </span><br><span class="line">  <span class="attr">delay</span>: <span class="built_in">number</span></span><br><span class="line">): <span class="title class_">DebouncedFunction</span>&lt;T&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> <span class="attr">timer</span>: <span class="title class_">ReturnType</span>&lt;<span class="keyword">typeof</span> <span class="built_in">setTimeout</span>&gt;;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> debouncedFunc = <span class="keyword">function</span> (<span class="params">...args: Parameters&lt;T&gt;</span>) &#123;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">func</span>(...args);</span><br><span class="line">    &#125;, delay);</span><br><span class="line">  &#125; <span class="keyword">as</span> T;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提供取消機制</span></span><br><span class="line">  (debouncedFunc <span class="keyword">as</span> <span class="title class_">DebouncedFunction</span>&lt;T&gt;).<span class="property">cancel</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> debouncedFunc <span class="keyword">as</span> <span class="title class_">DebouncedFunction</span>&lt;T&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>泛型設計</strong>：支持任意函數類型，保持類型安全</li><li><strong>取消機制</strong>：提供 <code>cancel</code> 方法，確保在組件卸載時清理資源</li></ul><p><strong>在專案內應用：</strong><br>用戶每次按鍵都會觸發，但只有停止輸入 1 秒後才真正執行保存，這樣既保證了數據不丟失，又避免了過度頻繁的 API 調用。</p><h3 id="2-深度比較工具"><a href="#2-深度比較工具" class="headerlink" title="2. 深度比較工具"></a>2. 深度比較工具</h3><p>為了避免不必要的保存觸發，會需要精確判斷數據是否真的有變更。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> deepEqual = (<span class="attr">obj1</span>: <span class="built_in">unknown</span>, <span class="attr">obj2</span>: <span class="built_in">unknown</span>): <span class="function"><span class="params">boolean</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 快速路徑：相同引用或相同原始值</span></span><br><span class="line">  <span class="keyword">if</span> (obj1 === obj2) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// null 或 undefined 處理</span></span><br><span class="line">  <span class="keyword">if</span> (obj1 == <span class="literal">null</span> || obj2 == <span class="literal">null</span>) <span class="keyword">return</span> obj1 === obj2;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 類型不同直接返回 false</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> obj1 !== <span class="keyword">typeof</span> obj2) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 原始類型直接比較</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> obj1 !== <span class="string">&#x27;object&#x27;</span>) <span class="keyword">return</span> obj1 === obj2;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 對象深度比較邏輯...</span></span><br><span class="line">  <span class="comment">// (省略具體實現細節)</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>為什麼會需要此一比較工具？</strong><br>在 JavaScript 中，對物件進行淺層比較時，如果它們的引用不同，即使內容完全相同，結果也會是 false。深度比較則能確保只有在內容真正變化時才觸發保存。</p><h3 id="3-狀態管理架構"><a href="#3-狀態管理架構" class="headerlink" title="3. 狀態管理架構"></a>3. 狀態管理架構</h3><h4 id="保存狀態-Store"><a href="#保存狀態-Store" class="headerlink" title="保存狀態 Store"></a>保存狀態 Store</h4><p>這個 Store 專門管理保存相關的狀態，支持多個文件同時編輯的場景。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">SaveState</span> &#123;</span><br><span class="line">  <span class="attr">isSaving</span>: <span class="built_in">boolean</span>;  </span><br><span class="line">  <span class="attr">promptSaveStates</span>: <span class="title class_">Record</span>&lt;<span class="built_in">string</span>, &#123; </span><br><span class="line">    <span class="attr">lastSavedAt</span>: <span class="title class_">Date</span> | <span class="literal">null</span>;     <span class="comment">// 最後保存時間</span></span><br><span class="line">    <span class="attr">hasSaveError</span>: <span class="built_in">boolean</span>;        <span class="comment">// 是否有保存錯誤</span></span><br><span class="line">    <span class="attr">isActive</span>: <span class="built_in">boolean</span>;            <span class="comment">// 是否有未保存的變更</span></span><br><span class="line">  &#125;&gt;;</span><br><span class="line">  <span class="attr">setSaving</span>: <span class="function">(<span class="params">isSaving: <span class="built_in">boolean</span>, promptId?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">  <span class="attr">setSaved</span>: <span class="function">(<span class="params">promptId: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">  <span class="attr">setSaveError</span>: <span class="function">(<span class="params">hasError: <span class="built_in">boolean</span>, promptId?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">  <span class="comment">// ... </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>多實例支持的設計考量：</strong><br>這種設計允許同時追蹤多個檔案的保存狀態，每個檔案都有獨立的狀態管理，互不干擾。<br>在本專案中，透過保存狀態 Store（Save State Store）的設計實現多實例支持：</p><ul><li>Zustand 作為集中狀態管理器</li><li>Zustand 提供一個全域的 Store，用來集中管理所有檔案的保存狀態。<br><code>Record&lt;string, ...&gt;</code> 結構管理多檔案狀態<br>promptSaveStates 並非只儲存單一檔案狀態，而是採用類似字典（Map）的結構：<ul><li>鍵（Key）：每個檔案的唯一標識（如 promptId）</li><li>值（Value）：包含該檔案獨立保存狀態（如 lastSavedAt、hasSaveError 等）的物件</li></ul></li></ul><p>運作方式說明：</p><ul><li><p>當你需要更新或查詢某個檔案的狀態時，會以該檔案的 promptId 作為 key，從 promptSaveStates 這個大區塊中找到對應的狀態物件進行操作。</p></li><li><p>例如，若要標記 ID 為 “file-A” 的檔案有未保存變更，就更新 promptSaveStates[‘file-A’] 的狀態；而操作 ID 為 “file-B” 的檔案時，則讀寫 promptSaveStates[‘file-B’] 的狀態。</p></li><li><p>由於每個檔案都透過唯一 ID 進行索引，因此它們的狀態完全隔離，實現多實例支持且互不干擾。</p></li></ul><p>這種設計不僅能集中管理，也能保證每個檔案的狀態獨立，適合需要同時處理多檔案狀態的應用場景。</p><h3 id="4-業務邏輯整合"><a href="#4-業務邏輯整合" class="headerlink" title="4. 業務邏輯整合"></a>4. 業務邏輯整合</h3><p>核心的 <code>usePromptPageLogic</code> Hook 負責整合表單管理、變更檢測和自動保存觸發：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">usePromptPageLogic</span> = (<span class="params">&#123; promptId &#125;: UsePromptPageLogicProps</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 表單狀態管理</span></span><br><span class="line">  <span class="keyword">const</span> [formData, setFormData] = <span class="title function_">useState</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">shortcut</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 存儲初始值用於變更比較</span></span><br><span class="line">  <span class="keyword">const</span> [initialValues, setInitialValues] = <span class="title function_">useState</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">shortcut</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 核心保存函數</span></span><br><span class="line">  <span class="keyword">const</span> savePrompt = <span class="title function_">useCallback</span>(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="comment">// 保存邏輯實現</span></span><br><span class="line">  &#125;, [<span class="comment">/* 依賴項 */</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 創建 debounced 的保存函數</span></span><br><span class="line">  <span class="keyword">const</span> debouncedSave = <span class="title function_">useMemo</span>(</span><br><span class="line">    <span class="function">() =&gt;</span> <span class="title function_">debounce</span>(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">savePrompt</span>();</span><br><span class="line">    &#125;, <span class="number">1000</span>), <span class="comment">// 1 秒延遲</span></span><br><span class="line">    [savePrompt]</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 核心邏輯：檢查變更並觸發自動保存</span></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> hasChanges = !<span class="title function_">deepEqual</span>(formData, initialValues);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (hasChanges &amp;&amp; currentPrompt) &#123;</span><br><span class="line">      <span class="title function_">setActive</span>(<span class="literal">true</span>, promptId);   <span class="comment">// 標記為活躍狀態</span></span><br><span class="line">      <span class="title function_">debouncedSave</span>();             <span class="comment">// 觸發延遲保存</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!hasChanges) &#123;</span><br><span class="line">      <span class="title function_">setActive</span>(<span class="literal">false</span>, promptId);  <span class="comment">// 標記為非活躍狀態</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 清理函數：取消待執行的保存</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      debouncedSave.<span class="title function_">cancel</span>();</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;, [formData, initialValues, currentPrompt, debouncedSave, setActive, promptId]);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 返回表單處理器和狀態</span></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="comment">// 表單數據和處理函數</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>這個 Hook ：</strong></p><ol><li><strong>自動觸發機制</strong>：通過 <code>useEffect</code> 監聽表單數據變更</li><li><strong>智能去重</strong>：使用 <code>deepEqual</code> 避免錯誤觸發</li><li><strong>狀態同步</strong>：與 Zustand store 整合</li><li><strong>資源清理</strong>：確保組件卸載時取消待執行的保存</li></ol><h2 id="用戶體驗優化"><a href="#用戶體驗優化" class="headerlink" title="用戶體驗優化"></a>用戶體驗優化</h2><h3 id="1-UI-的實時狀態反饋"><a href="#1-UI-的實時狀態反饋" class="headerlink" title="1. UI 的實時狀態反饋"></a>1. UI 的實時狀態反饋</h3><p><code>SaveStatusIndicator</code> 組件提供即時的保存狀態反饋：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">SaveStatusIndicator</span> = (<span class="params">&#123; className = <span class="string">&#x27;&#x27;</span> &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [displayState, setDisplayState] = useState&lt;<span class="string">&#x27;idle&#x27;</span> | <span class="string">&#x27;saving&#x27;</span> | <span class="string">&#x27;saved&#x27;</span> | <span class="string">&#x27;error&#x27;</span>&gt;(<span class="string">&#x27;idle&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">renderContent</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">switch</span> (displayState) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;saving&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">          <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex items-center space-x-2 text-primary&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Spinner</span> <span class="attr">className</span>=<span class="string">&quot;h-3 w-3 animate-spin&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>保存中...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">        );</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;saved&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">          <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex items-center space-x-2 text-green-600&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">CheckIcon</span> <span class="attr">className</span>=<span class="string">&quot;h-3 w-3&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>已保存所有更改<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">        );</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;error&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">          <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex items-center space-x-2 text-red-600&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">ErrorIcon</span> <span class="attr">className</span>=<span class="string">&quot;h-3 w-3&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>保存失敗<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">        );</span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">transition-all</span> <span class="attr">duration-200</span> $&#123;<span class="attr">className</span>&#125;`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;renderContent()&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="錯誤處理與容錯設計"><a href="#錯誤處理與容錯設計" class="headerlink" title="錯誤處理與容錯設計"></a>錯誤處理與容錯設計</h2><h3 id="1-網路異常處理"><a href="#1-網路異常處理" class="headerlink" title="1. 網路異常處理"></a>1. 網路異常處理</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> savePrompt = <span class="title function_">useCallback</span>(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="title function_">setSaving</span>(<span class="literal">true</span>, promptId);</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">updatePrompt</span>(promptId, updatedPrompt);</span><br><span class="line">    <span class="title function_">setSaved</span>(promptId);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="comment">// 區分不同類型的錯誤</span></span><br><span class="line">    <span class="keyword">if</span> (error.<span class="property">status</span> === <span class="number">401</span>) &#123;</span><br><span class="line">      <span class="comment">// 認證失效，重定向登錄頁</span></span><br><span class="line">      router.<span class="title function_">push</span>(<span class="string">&#x27;/login&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error.<span class="property">status</span> === <span class="number">403</span>) &#123;</span><br><span class="line">      <span class="comment">// 權限不足</span></span><br><span class="line">      <span class="title function_">setSaveError</span>(<span class="literal">true</span>, promptId);</span><br><span class="line">      <span class="title function_">showNotification</span>(<span class="string">&#x27;您沒有編輯此內容的權限&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error.<span class="property">status</span> &gt;= <span class="number">500</span>) &#123;</span><br><span class="line">      <span class="comment">// 服務器錯誤</span></span><br><span class="line">      <span class="title function_">setSaveError</span>(<span class="literal">true</span>, promptId);</span><br><span class="line">      <span class="title function_">showNotification</span>(<span class="string">&#x27;服務器暫時無法響應，請稍後再試&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 其他錯誤</span></span><br><span class="line">      <span class="title function_">setSaveError</span>(<span class="literal">true</span>, promptId);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;保存時發生錯誤:&quot;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, [<span class="comment">/* 依賴項 */</span>]);</span><br></pre></td></tr></table></figure><h2 id="專案實作內性能優化策略"><a href="#專案實作內性能優化策略" class="headerlink" title="專案實作內性能優化策略"></a>專案實作內性能優化策略</h2><h3 id="1-內存優化"><a href="#1-內存優化" class="headerlink" title="1. 內存優化"></a>1. 內存優化</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用 useCallback 避免不必要的重新渲染</span></span><br><span class="line"><span class="keyword">const</span> handleNameChange = <span class="title function_">useCallback</span>(<span class="function">(<span class="params">e: React.ChangeEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">updateFormField</span>(<span class="string">&#x27;name&#x27;</span>, e.<span class="property">target</span>.<span class="property">value</span>);</span><br><span class="line">&#125;, [updateFormField]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 useMemo 緩存計算結果</span></span><br><span class="line"><span class="keyword">const</span> debouncedSave = <span class="title function_">useMemo</span>(</span><br><span class="line">  <span class="function">() =&gt;</span> <span class="title function_">debounce</span>(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">savePrompt</span>();</span><br><span class="line">  &#125;, <span class="number">1000</span>),</span><br><span class="line">  [savePrompt]</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-狀態更新優化"><a href="#3-狀態更新優化" class="headerlink" title="3. 狀態更新優化"></a>3. 狀態更新優化</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用 Zustand 的淺層比較避免不必要的訂閱觸發</span></span><br><span class="line"><span class="keyword">const</span> &#123; isSaving, getSaveStateForPrompt &#125; = <span class="title function_">useSaveStore</span>(</span><br><span class="line">  <span class="title function_">useShallow</span>(<span class="function">(<span class="params">state</span>) =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">isSaving</span>: state.<span class="property">isSaving</span>,</span><br><span class="line">    <span class="attr">getSaveStateForPrompt</span>: state.<span class="property">getSaveStateForPrompt</span></span><br><span class="line">  &#125;))</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="用戶體驗改善"><a href="#用戶體驗改善" class="headerlink" title="用戶體驗改善"></a>用戶體驗改善</h3><ol><li>用戶無需手動保存，專注於內容創作</li><li>清晰的保存狀態指示，用戶始終了解目前編輯狀態</li></ol><h2 id="適用場景與擴展"><a href="#適用場景與擴展" class="headerlink" title="適用場景與擴展"></a>適用場景與擴展</h2><h3 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h3><p>通過這個真實項目的實踐，我學到了：</p><ul><li><strong>如何設計可擴展的前端架構</strong>：模塊化設計讓系統易於維護和擴展</li><li><strong>狀態管理的最佳實踐</strong>：Zustand 作為輕量級但功能完善的狀態管理工具，帶來高效的解決方案</li><li><strong>性能優化的具體技巧</strong>：從 debounce 到內存管理，細緻調校提升整體效</li><li><strong>用戶體驗設計的重要性</strong>：技術實現需要為用戶體驗服務</li></ul><p>這個項目體現了現代前端開發的高度複雜性，也證明了只要有合理的架構設計和邏輯實現，就能打造出穩定且高效的用戶體驗。自動保存功能雖然看似簡單，但要達到穩定性與流暢體驗，背後需要面對諸多細節與邊界情境的挑戰。</p>]]></content>
      
      
      <categories>
          
          <category> side-project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> side-project </tag>
            
            <tag> Next.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next.js Middleware 中的身份驗證：Edge Runtime 限制與解決方案</title>
      <link href="/2025/05/17/side-project-EdgeRuntime/"/>
      <url>/2025/05/17/side-project-EdgeRuntime/</url>
      
        <content type="html"><![CDATA[<p>最近在做一個 Side Project 時，我想保護部分頁面（像是 /dashboard）需要登入才能訪問，於是決定使用 Next.js 的 Middleware 功能來進行 JWT 身份驗證。</p><p>理論上應該很簡單——從 Cookie 抓 token，用 jsonwebtoken 驗證它。但很快我就遇到阻礙：在 Middleware 中用 verify() 解 token，竟然直接報錯，完全無法運行。</p><h2 id="為什麼-jsonwebtoken-在-Middleware-裡失敗？"><a href="#為什麼-jsonwebtoken-在-Middleware-裡失敗？" class="headerlink" title="為什麼 jsonwebtoken 在 Middleware 裡失敗？"></a>為什麼 jsonwebtoken 在 Middleware 裡失敗？</h2><p>當你試圖這樣寫時：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NextResponse</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;next/server&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; verify &#125; <span class="keyword">from</span> <span class="string">&#x27;jsonwebtoken&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">middleware</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> token = request.<span class="property">cookies</span>.<span class="title function_">get</span>(<span class="string">&#x27;token&#x27;</span>)?.<span class="property">value</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> decoded = <span class="title function_">verify</span>(token, process.<span class="property">env</span>.<span class="property">JWT_SECRET</span>); <span class="comment">// ❌ 會報錯</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">next</span>();</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">redirect</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;/login&#x27;</span>, request.<span class="property">url</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>會出現這個錯誤訊息：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Error</span>: <span class="title class_">The</span> <span class="title class_">Edge</span> <span class="title class_">Runtime</span> does not support <span class="title class_">Node</span>.<span class="property">js</span> <span class="string">&#x27;crypto&#x27;</span> <span class="variable language_">module</span>.</span><br></pre></td></tr></table></figure><p>這代表你不能在 Middleware 中使用 Node.js 的某些套件，像是 crypto。</p><h3 id="Edge-Runtime-是什麼？"><a href="#Edge-Runtime-是什麼？" class="headerlink" title="Edge Runtime 是什麼？"></a>Edge Runtime 是什麼？</h3><p>Next.js 的 Middleware 是在 Edge Runtime 上執行的，這個環境接近於瀏覽器，不具備完整的 Node.js API。所以 jsonwebtoken 這種依賴 Node.js crypto 模組的函式庫在這裡無法運作。</p><h2 id="解法一：使用-jose-函式庫-（採用方式）"><a href="#解法一：使用-jose-函式庫-（採用方式）" class="headerlink" title="解法一：使用 jose 函式庫 （採用方式）"></a>解法一：使用 jose 函式庫 （採用方式）</h2><p>jose 是專門設計來兼容 Web Crypto API 的 JWT 函式庫，可以在 Edge Runtime 中順利運作。</p><h3 id="Middleware-驗證範例："><a href="#Middleware-驗證範例：" class="headerlink" title="Middleware 驗證範例："></a>Middleware 驗證範例：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NextResponse</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;next/server&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; jwtVerify &#125; <span class="keyword">from</span> <span class="string">&#x27;jose&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">middleware</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> token = request.<span class="property">cookies</span>.<span class="title function_">get</span>(<span class="string">&#x27;token&#x27;</span>)?.<span class="property">value</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!token) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">redirect</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;/login&#x27;</span>, request.<span class="property">url</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> secret = <span class="keyword">new</span> <span class="title class_">TextEncoder</span>().<span class="title function_">encode</span>(process.<span class="property">env</span>.<span class="property">JWT_SECRET</span>); <span class="comment">// Web API 兼容</span></span><br><span class="line">    <span class="keyword">const</span> &#123; payload &#125; = <span class="keyword">await</span> <span class="title function_">jwtVerify</span>(token, secret);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 你可以選擇把 payload 傳給下游使用</span></span><br><span class="line">    <span class="keyword">const</span> requestHeaders = <span class="keyword">new</span> <span class="title class_">Headers</span>(request.<span class="property">headers</span>);</span><br><span class="line">    requestHeaders.<span class="title function_">set</span>(<span class="string">&#x27;x-user-id&#x27;</span>, payload.<span class="property">sub</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">next</span>(&#123;</span><br><span class="line">      <span class="attr">request</span>: &#123;</span><br><span class="line">        <span class="attr">headers</span>: requestHeaders,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">redirect</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;/login&#x27;</span>, request.<span class="property">url</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> config = &#123;</span><br><span class="line">  <span class="attr">matcher</span>: [<span class="string">&#x27;/dashboard/:path*&#x27;</span>, <span class="string">&#x27;/api/protected/:path*&#x27;</span>],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>無需額外 API 呼叫</li><li>jose 是針對 Web 環境優化的函式庫，效能好、兼容性強</li></ul><h2 id="解法二：將驗證邏輯移至-API-Route"><a href="#解法二：將驗證邏輯移至-API-Route" class="headerlink" title="解法二：將驗證邏輯移至 API Route"></a>解法二：將驗證邏輯移至 API Route</h2><p>如果你已經深度依賴 jsonwebtoken，可以將 JWT 驗證邏輯放到 API Route，由 Middleware 呼叫。</p><ul><li>API Route 處理驗證</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/api/auth/verify.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; verify &#125; <span class="keyword">from</span> <span class="string">&#x27;jsonwebtoken&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">handler</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> token = req.<span class="property">body</span>.<span class="property">token</span>;</span><br><span class="line">    <span class="keyword">const</span> decoded = <span class="title function_">verify</span>(token, process.<span class="property">env</span>.<span class="property">JWT_SECRET</span>);</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123; <span class="attr">valid</span>: <span class="literal">true</span>, <span class="attr">user</span>: decoded &#125;);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>(&#123; <span class="attr">valid</span>: <span class="literal">false</span>, <span class="attr">error</span>: error.<span class="property">message</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Middleware 呼叫驗證 API</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NextResponse</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;next/server&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">middleware</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> token = request.<span class="property">cookies</span>.<span class="title function_">get</span>(<span class="string">&#x27;token&#x27;</span>)?.<span class="property">value</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!token) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">redirect</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;/login&#x27;</span>, request.<span class="property">url</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`<span class="subst">$&#123;request.nextUrl.origin&#125;</span>/api/auth/verify`</span>, &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span> &#125;,</span><br><span class="line">    <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; token &#125;),</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!result.<span class="property">valid</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">redirect</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;/login&#x27;</span>, request.<span class="property">url</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">next</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>增加一次內部 API 呼叫</li><li>較影響效能與伺服器負載</li></ul><h2 id="使用-Web-Crypto-API"><a href="#使用-Web-Crypto-API" class="headerlink" title="使用 Web Crypto API"></a>使用 Web Crypto API</h2><p>進階使用者可以直接用 Web Crypto API 實作 JWT 驗證（這是 jose 底層的做法），但需要處理 Base64 解碼、簽名驗證、payload 檢查等細節。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NextResponse</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;next/server&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">verifyJWT</span>(<span class="params">token, secret</span>) &#123;</span><br><span class="line">  <span class="comment">// 這裡需要實作 JWT 驗證的各個步驟</span></span><br><span class="line">  <span class="comment">// 1. 解析 header 和 payload</span></span><br><span class="line">  <span class="comment">// 2. 使用 crypto.subtle 驗證簽名</span></span><br><span class="line">  <span class="comment">// 3. 檢查過期時間等</span></span><br><span class="line">  <span class="comment">// 注意：這是簡化的示例，實際實作需要更多程式碼</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> parts = token.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (parts.<span class="property">length</span> !== <span class="number">3</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid token format&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 實作 JWT 驗證邏輯...</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> &#123; <span class="comment">/* 解碼後的 payload */</span> &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">middleware</span>(<span class="params">request</span>) &#123;</span><br><span class="line">  <span class="comment">// JWT 驗證邏輯</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>小結：<br>在 Next.js Middleware 中處理身份驗證需要注意 Edge Runtime 的限制。使用 jose 函式庫是最直接的解決方案，它專為 Web 環境設計，能在 Edge Runtime 中正常工作。</p>]]></content>
      
      
      <categories>
          
          <category> side-project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> side-project </tag>
            
            <tag> Next.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next.js API 與 MongoDB 設計實作：整合 NextAuth 多元驗證方式（Credentials + OAuth）</title>
      <link href="/2025/05/17/side-project-mongoDB/"/>
      <url>/2025/05/17/side-project-mongoDB/</url>
      
        <content type="html"><![CDATA[<p>在開發 SaaS 或工具型應用時，「使用者驗證系統」往往是關鍵基礎設施。這篇文章將分享我如何使用 Next.js（App Router）+ MongoDB + NextAuth，同時支援 Google OAuth 和 自定義帳密登入，並分享專案 mongoDB 資料結構與 API 架構。</p><h2 id="MongoDB-資料模型設計"><a href="#MongoDB-資料模型設計" class="headerlink" title="MongoDB 資料模型設計"></a>MongoDB 資料模型設計</h2><p>為了支援多元登入方式，我設計了以下幾個集合（Collections）：</p><ol><li>users - 使用者基本資訊</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  _id<span class="punctuation">:</span> ObjectId<span class="punctuation">,</span></span><br><span class="line">  email<span class="punctuation">:</span> String<span class="punctuation">,</span></span><br><span class="line">  name<span class="punctuation">:</span> String<span class="punctuation">,</span></span><br><span class="line">  createdAt<span class="punctuation">:</span> Date<span class="punctuation">,</span></span><br><span class="line">  updatedAt<span class="punctuation">:</span> Date</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>authProviders - 自定義驗證方式（帳密）</li></ol><span id="more"></span><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  userId<span class="punctuation">:</span> ObjectId<span class="punctuation">,</span> <span class="comment">// 關聯到 users._id</span></span><br><span class="line">  type<span class="punctuation">:</span> <span class="string">&quot;credentials&quot;</span><span class="punctuation">,</span></span><br><span class="line">  passwordHash<span class="punctuation">:</span> String<span class="punctuation">,</span> <span class="comment">// bcrypt 加密</span></span><br><span class="line">  createdAt<span class="punctuation">:</span> Date<span class="punctuation">,</span></span><br><span class="line">  updatedAt<span class="punctuation">:</span> Date</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>folders - 使用者資料夾</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  _id<span class="punctuation">:</span> ObjectId<span class="punctuation">,</span></span><br><span class="line">  userId<span class="punctuation">:</span> ObjectId<span class="punctuation">,</span></span><br><span class="line">  name<span class="punctuation">:</span> String<span class="punctuation">,</span></span><br><span class="line">  description<span class="punctuation">:</span> String<span class="punctuation">,</span></span><br><span class="line">  createdAt<span class="punctuation">:</span> Date<span class="punctuation">,</span></span><br><span class="line">  updatedAt<span class="punctuation">:</span> Date</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li>snippets </li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  _id<span class="punctuation">:</span> ObjectId<span class="punctuation">,</span></span><br><span class="line">  userId<span class="punctuation">:</span> ObjectId<span class="punctuation">,</span></span><br><span class="line">  folderId<span class="punctuation">:</span> ObjectId<span class="punctuation">,</span></span><br><span class="line">  name<span class="punctuation">:</span> String<span class="punctuation">,</span></span><br><span class="line">  content<span class="punctuation">:</span> String<span class="punctuation">,</span></span><br><span class="line">  shortcut<span class="punctuation">:</span> String<span class="punctuation">,</span></span><br><span class="line">  createdAt<span class="punctuation">:</span> Date<span class="punctuation">,</span></span><br><span class="line">  updatedAt<span class="punctuation">:</span> Date</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="NextAuth-與驗證流程設計"><a href="#NextAuth-與驗證流程設計" class="headerlink" title="NextAuth 與驗證流程設計"></a>NextAuth 與驗證流程設計</h2><p>在這個專案中，我將登入驗證分為兩條路徑：</p><table><thead><tr><th>驗證方式</th><th>實作方式</th><th>資料表使用</th></tr></thead><tbody><tr><td>Google 登入</td><td>NextAuth OAuth Provider</td><td><code>accounts</code> (NextAuth 自動建立)</td></tr><tr><td>帳號密碼</td><td>自定義 API + bcrypt 驗證</td><td><code>authProviders</code></td></tr></tbody></table><h2 id="NextAuth"><a href="#NextAuth" class="headerlink" title="NextAuth"></a>NextAuth</h2><p>使用 NextAuth 搭配 Google 登入時，NextAuth 會自動在資料庫中建立並管理一個 accounts collection（資料表）</p><p>這是 NextAuth 的內建行為，用來儲存與第三方驗證（如 Google、GitHub 等）相關的資訊。</p><p>下面詳細解說 NextAuth 如何使用 MongoDB 中的 <code>accounts</code> collection：</p><h3 id="NextAuth-自動建立的-Collections"><a href="#NextAuth-自動建立的-Collections" class="headerlink" title="NextAuth 自動建立的 Collections"></a>NextAuth 自動建立的 Collections</h3><p>當使用 NextAuth 與 MongoDB 整合時，NextAuth 會建立 <strong><code>accounts</code></strong>：儲存第三方驗證資訊</p><h3 id="accounts-Collection-的結構"><a href="#accounts-Collection-的結構" class="headerlink" title="accounts Collection 的結構"></a><code>accounts</code> Collection 的結構</h3><p>當使用者透過 Google 登入時，NextAuth 會在 <code>accounts</code> collection 中建立一筆資料，結構如下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;ObjectId&quot;</span>,</span><br><span class="line">  <span class="string">&quot;userId&quot;</span>: <span class="string">&quot;ObjectId&quot;</span>, <span class="comment">// 關聯到 users collection 中的使用者</span></span><br><span class="line">  <span class="string">&quot;provider&quot;</span>: <span class="string">&quot;google&quot;</span>, <span class="comment">// 驗證提供者，例如 google, github</span></span><br><span class="line">  <span class="string">&quot;providerAccountId&quot;</span>: <span class="string">&quot;google-account-id&quot;</span>, <span class="comment">// Google 提供的帳號 ID</span></span><br><span class="line">  <span class="string">&quot;type&quot;</span>: <span class="string">&quot;oauth&quot;</span>, <span class="comment">// 驗證類型</span></span><br><span class="line">  <span class="string">&quot;access_token&quot;</span>: <span class="string">&quot;google-access-token&quot;</span>,</span><br><span class="line">  <span class="string">&quot;id_token&quot;</span>: <span class="string">&quot;google-id-token&quot;</span>,</span><br><span class="line">  <span class="string">&quot;refresh_token&quot;</span>: <span class="string">&quot;google-refresh-token&quot;</span>,</span><br><span class="line">  <span class="string">&quot;expires_at&quot;</span>: <span class="number">1683500000</span>, <span class="comment">// Token 過期時間</span></span><br><span class="line">  <span class="string">&quot;scope&quot;</span>: <span class="string">&quot;email profile&quot;</span>,</span><br><span class="line">  <span class="string">&quot;token_type&quot;</span>: <span class="string">&quot;Bearer&quot;</span>,</span><br><span class="line">  <span class="string">&quot;session_state&quot;</span>: <span class="string">&quot;session-state&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="與自定義-authProviders-的區別"><a href="#與自定義-authProviders-的區別" class="headerlink" title="與自定義 authProviders 的區別"></a>與自定義 <code>authProviders</code> 的區別</h3><p>NextAuth 自動建立的 <code>accounts</code> collection 與自定義的 <code>authProviders</code> collection 有以下區別：</p><ol><li><strong><code>accounts</code></strong>：由 NextAuth 自動管理，專門用於第三方驗證（如 Google、GitHub 等）。</li><li><strong><code>authProviders</code></strong>：由你自定義，專門用於自己實現的驗證方式（如帳號密碼）。</li></ol><p>在你目前的登入 API 執行流程中（如 route.ts 檔案所示），你使用 <code>authProviders</code> collection 來儲存和驗證使用者的密碼：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> authProvider = <span class="keyword">await</span> db</span><br><span class="line">  .<span class="title function_">collection</span>(<span class="string">&quot;authProviders&quot;</span>)</span><br><span class="line">  .<span class="title function_">findOne</span>(&#123; <span class="attr">userId</span>: user.<span class="property">_id</span>, <span class="attr">type</span>: <span class="string">&quot;credentials&quot;</span> &#125;);</span><br><span class="line"><span class="keyword">if</span> (!authProvider || !authProvider.<span class="property">passwordHash</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">json</span>(</span><br><span class="line">    &#123; <span class="attr">message</span>: <span class="string">&quot;invalid credentials&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">status</span>: <span class="number">401</span> &#125;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="NextAuth-整合設計"><a href="#NextAuth-整合設計" class="headerlink" title="NextAuth 整合設計"></a>NextAuth 整合設計</h3><p> 使用 MongoDB Adapter</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// src/app/api/auth/[...nextauth]/route.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MongoDBAdapter</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@auth/mongodb-adapter&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handler = <span class="title class_">NextAuth</span>(&#123;</span><br><span class="line">  <span class="attr">adapter</span>: <span class="title class_">MongoDBAdapter</span>(clientPromise, &#123;</span><br><span class="line">    <span class="attr">databaseName</span>: process.<span class="property">env</span>.<span class="property">MONGODB_DB</span> || <span class="string">&quot;snippets-auth&quot;</span>,</span><br><span class="line">  &#125;),</span><br><span class="line">  ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="支援多種-Provider"><a href="#支援多種-Provider" class="headerlink" title="支援多種 Provider"></a>支援多種 Provider</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">providers</span>: [</span><br><span class="line">  <span class="title class_">CredentialsProvider</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Credentials&quot;</span>,</span><br><span class="line">    <span class="attr">authorize</span>: <span class="keyword">async</span> (credentials) =&gt; &#123;</span><br><span class="line">      <span class="comment">// 自定義帳密驗證邏輯</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="title class_">GoogleProvider</span>(&#123;</span><br><span class="line">    <span class="attr">clientId</span>: process.<span class="property">env</span>.<span class="property">GOOGLE_CLIENT_ID</span>!,</span><br><span class="line">    <span class="attr">clientSecret</span>: process.<span class="property">env</span>.<span class="property">GOOGLE_CLIENT_SECRET</span>!,</span><br><span class="line">  &#125;),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="自定義-JWT-與-Session-回傳資料"><a href="#自定義-JWT-與-Session-回傳資料" class="headerlink" title="自定義 JWT 與 Session 回傳資料"></a>自定義 JWT 與 Session 回傳資料</h3><p>為了讓 API 能拿到使用者資訊，我自定義了 jwt() 與 session() callback：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 回傳使用者資訊給 token</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">jwt</span>(<span class="params">&#123; token, user, account &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (account?.<span class="property">provider</span> === <span class="string">&#x27;google&#x27;</span> &amp;&amp; user) &#123;</span><br><span class="line">    token.<span class="property">id</span> = user.<span class="property">id</span>;</span><br><span class="line">    token.<span class="property">accessToken</span> = account.<span class="property">access_token</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (account?.<span class="property">provider</span> === <span class="string">&#x27;credentials&#x27;</span> &amp;&amp; user) &#123;</span><br><span class="line">    token.<span class="property">id</span> = user.<span class="property">id</span>;</span><br><span class="line">    token.<span class="property">email</span> = user.<span class="property">email</span>;</span><br><span class="line">    token.<span class="property">token</span> = user.<span class="property">token</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> token;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 將 token 資訊掛載到 session.user</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">session</span>(<span class="params">&#123; session, token &#125;</span>) &#123;</span><br><span class="line">  session.<span class="property">user</span> = &#123;</span><br><span class="line">    <span class="attr">id</span>: token.<span class="property">id</span>,</span><br><span class="line">    <span class="attr">email</span>: token.<span class="property">email</span>,</span><br><span class="line">    <span class="attr">token</span>: token.<span class="property">token</span>,</span><br><span class="line">    <span class="attr">accessToken</span>: token.<span class="property">accessToken</span>,</span><br><span class="line">    <span class="attr">image</span>: <span class="keyword">typeof</span> token.<span class="property">image</span> === <span class="string">&#x27;string&#x27;</span> ? token.<span class="property">image</span> : <span class="literal">undefined</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> session;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這讓我們在前端取得使用者資訊，或是讓 Middleware 驗證身份更方便。</p><h2 id="API-設計架構"><a href="#API-設計架構" class="headerlink" title="API 設計架構"></a>API 設計架構</h2><p>所有 API 採用 RESTful 命名方式：</p><p>** 認證 API **<br>POST /api/v1/auth/signup – 註冊帳號</p><p>POST /api/v1/auth/login – 登入取得權杖</p><p>** 資料管理 API  **<br>GET/POST /api/v1/folders</p><p>GET/PUT/DELETE /api/v1/folders/[id]</p><p>GET/POST /api/v1/snippets</p><p>GET/PUT/DELETE /api/v1/snippets/[id]</p><p>** 健康檢查 **<br>GET /api/health – MongoDB 狀態回報</p><h2 id="API-Middleware-權限驗證"><a href="#API-Middleware-權限驗證" class="headerlink" title="API Middleware 權限驗證"></a>API Middleware 權限驗證</h2><p>使用 next-auth/jwt 驗證 JWT：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/middleware.ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">middleware</span>(<span class="params">request: NextRequest</span>) &#123;</span><br><span class="line">  <span class="comment">// 判斷公開路徑</span></span><br><span class="line">  <span class="keyword">const</span> publicPaths = [<span class="string">&quot;/api/v1/auth/login&quot;</span>, <span class="string">&quot;/api/v1/auth/signup&quot;</span>, <span class="string">&quot;/api/health&quot;</span>];</span><br><span class="line">  <span class="keyword">if</span> (publicPaths.<span class="title function_">includes</span>(path)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">next</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 驗證權杖</span></span><br><span class="line">  <span class="keyword">const</span> token = <span class="keyword">await</span> <span class="title function_">getToken</span>(&#123; <span class="attr">req</span>: request, <span class="attr">secret</span>: process.<span class="property">env</span>.<span class="property">NEXTAUTH_SECRET</span> &#125;);</span><br><span class="line">  <span class="keyword">if</span> (!token) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">NextResponse</span>.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Unauthorized&quot;</span> &#125;, &#123; <span class="attr">status</span>: <span class="number">401</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 將使用者 ID 附加到請求標頭中</span></span><br><span class="line">  <span class="keyword">const</span> res = <span class="title class_">NextResponse</span>.<span class="title function_">next</span>();</span><br><span class="line">  res.<span class="property">headers</span>.<span class="title function_">set</span>(<span class="string">&quot;x-user-id&quot;</span>, token.<span class="property">id</span> <span class="keyword">as</span> <span class="built_in">string</span>);</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 確保所有保護的 API 都檢查 x-user-id，實現使用者權限控管。</p><h2 id="實作涵蓋了完整驗證設計："><a href="#實作涵蓋了完整驗證設計：" class="headerlink" title="實作涵蓋了完整驗證設計："></a>實作涵蓋了完整驗證設計：</h2><ul><li>Google OAuth 登入（透過 NextAuth 自動化）</li><li>自定義帳密登入（使用 bcrypt + MongoDB）</li><li>多種登入方式共用同一個 users 集合</li><li>API 權限驗證 + Middleware 控制</li><li>使用 MongoDB Adapter 整合資料庫與 session 管理</li></ul>]]></content>
      
      
      <categories>
          
          <category> side-project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> side-project </tag>
            
            <tag> Next.js </tag>
            
            <tag> MongoDB </tag>
            
            <tag> NextAuth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷題練習 - Maximum Depth of Binary Tree 解題策略</title>
      <link href="/2025/05/01/leetcode-Maximum-Depth-of-Binary-Tree/"/>
      <url>/2025/05/01/leetcode-Maximum-Depth-of-Binary-Tree/</url>
      
        <content type="html"><![CDATA[<p>LeetCode 題目多樣，尤其是「二元樹（Binary Tree）」相關題型，容易讓人看了發愣。</p><p>本篇文章將教你如何釐清解法邏輯，並將二元樹題型拆解為兩大類解題策略，搭配範例與模板，幫助你用 DFS（深度優先搜尋）更系統地解題</p><h3 id="類型一：遍歷型（Traversal-Type）"><a href="#類型一：遍歷型（Traversal-Type）" class="headerlink" title="類型一：遍歷型（Traversal Type）"></a>類型一：遍歷型（Traversal Type）</h3><p>這類題目需要「走過整棵樹的所有節點」，通常是為了計算某種總量，例如：</p><ul><li>節點總數</li><li>最大深度</li><li>所有路徑總和</li><li>葉子節點的數量</li></ul><p>解題思路</p><p>可根據需求使用：</p><ul><li><strong>後序遍歷 + 回傳值 return</strong> → 適合需要組合子樹結果的情況  </li><li><strong>前序遍歷 + 狀態變數追蹤</strong> → 適合需要累加或記錄路徑狀態的情況  </li></ul><h4 id="模板（後序-return）"><a href="#模板（後序-return）" class="headerlink" title="模板（後序 + return）"></a>模板（後序 + return）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">dfs</span>(<span class="params">node</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (node === <span class="literal">null</span>) <span class="keyword">return</span> baseValue;</span><br><span class="line">  <span class="keyword">const</span> left = <span class="title function_">dfs</span>(node.<span class="property">left</span>);</span><br><span class="line">  <span class="keyword">const</span> right = <span class="title function_">dfs</span>(node.<span class="property">right</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">combine</span>(left, right, node);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="模板（前序-狀態變數）"><a href="#模板（前序-狀態變數）" class="headerlink" title="模板（前序 + 狀態變數）"></a>模板（前序 + 狀態變數）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> result = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> pathDepth = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">traverse</span>(<span class="params">node</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (node === <span class="literal">null</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">  pathDepth++; <span class="comment">// 遞迴深入，深度 +1</span></span><br><span class="line">  <span class="keyword">if</span> (node.<span class="property">left</span> === <span class="literal">null</span> &amp;&amp; node.<span class="property">right</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">    result = <span class="title class_">Math</span>.<span class="title function_">max</span>(result, pathDepth); <span class="comment">// 若為葉子，更新最大深度</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">traverse</span>(node.<span class="property">left</span>);</span><br><span class="line">  <span class="title function_">traverse</span>(node.<span class="property">right</span>);</span><br><span class="line"></span><br><span class="line">  pathDepth--; <span class="comment">// 回歸</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="Maximum-Depth-of-Binary-Tree"><a href="#Maximum-Depth-of-Binary-Tree" class="headerlink" title="Maximum Depth of Binary Tree"></a>Maximum Depth of Binary Tree</h2><p>題目連結：<a href="https://leetcode.com/problems/maximum-depth-of-binary-tree/">104. Maximum Depth of Binary Tree</a>  </p><p>題目描述:<br>給定一棵二元樹，請求出它的「最大深度」——也就是從根節點走到最遠的葉子節點所需經過的節點數量。</p><p>解題思路：使用前序遍歷 + 狀態變數追蹤</p><ol><li><p>使用 depth 追蹤當前所在第幾層</p></li><li><p>每遇到一個葉子節點，就與 <code>result</code> 比較並更新最大值</p></li><li><p>所有節點遍歷完畢後，<code>result</code> 即為最大深度</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val, left, right) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.left = (left===undefined ? null : left)</span></span><br><span class="line"><span class="comment"> *     this.right = (right===undefined ? null : right)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">TreeNode</span>&#125; <span class="variable">root</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> maxDepth = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> depth = <span class="number">0</span> </span><br><span class="line">    <span class="keyword">let</span> result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">traverse</span> = (<span class="params">node</span>) =&gt;&#123;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span>(node === <span class="literal">null</span>) <span class="keyword">return</span></span><br><span class="line">        <span class="comment">// 1. 進入節點：深度 +1</span></span><br><span class="line">        depth++</span><br><span class="line">        <span class="comment">// 2. 如果是葉子（左右都沒有子節點），就更新 res</span></span><br><span class="line">        <span class="keyword">if</span>(node.<span class="property">left</span> === <span class="literal">null</span> &amp;&amp; node.<span class="property">right</span> === <span class="literal">null</span>)&#123;</span><br><span class="line">            result = <span class="title class_">Math</span>.<span class="title function_">max</span>(result, depth)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 3. 繼續遞歸兩側</span></span><br><span class="line">        <span class="title function_">traverse</span>(node.<span class="property">left</span>)</span><br><span class="line">        <span class="title function_">traverse</span>(node.<span class="property">right</span>)</span><br><span class="line">         <span class="comment">// 4. 離開節點：回到父層，深度 -1</span></span><br><span class="line">        depth--</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">traverse</span>(root)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="第二類-Comparison-型-比較兩棵-兩節點"><a href="#第二類-Comparison-型-比較兩棵-兩節點" class="headerlink" title="第二類: Comparison 型 - 比較兩棵/兩節點"></a>第二類: Comparison 型 - 比較兩棵/兩節點</h3><p>這類題目不再只是單純遍歷，而是需要「比較兩個節點的結構與數值是否一致」，例如：</p><ul><li>判斷兩棵樹是否相同（Same Tree）</li><li>判斷是否為對稱樹（Symmetric Tree）</li></ul><h3 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h3><ol><li>同步比較兩個節點 <code>p</code> 與 <code>q</code></li><li>確認三件事：<ul><li>是否都為 <code>null</code></li><li>是否有一個是 <code>null</code>（另一個不是）</li><li>兩節點的值是否相等</li></ul></li><li>最後遞迴比對左子樹與右子樹是否一致</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">compare</span>(<span class="params">p, q</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (p === <span class="literal">null</span> &amp;&amp; q === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span> (p === <span class="literal">null</span> || q === <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span> (p.<span class="property">val</span> !== q.<span class="property">val</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">compare</span>(p.<span class="property">left</span>, q.<span class="property">left</span>) &amp;&amp; <span class="title function_">compare</span>(p.<span class="property">right</span>, q.<span class="property">right</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="呼應-Maximum-Depth-of-Binary-Tree"><a href="#呼應-Maximum-Depth-of-Binary-Tree" class="headerlink" title="呼應 Maximum Depth of Binary Tree"></a>呼應 Maximum Depth of Binary Tree</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> maxDepth = <span class="keyword">function</span>(<span class="params">root</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!root) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> leftMax  = <span class="title function_">maxDepth</span>(root.<span class="property">left</span>);</span><br><span class="line">  <span class="keyword">let</span> rightMax = <span class="title function_">maxDepth</span>(root.<span class="property">right</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span> + <span class="title class_">Math</span>.<span class="title function_">max</span>(leftMax, rightMax);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 重置技巧：React Key 與 CSS offsetWidth</title>
      <link href="/2025/04/16/react-key-reflow/"/>
      <url>/2025/04/16/react-key-reflow/</url>
      
        <content type="html"><![CDATA[<p>在前端開發中，動畫與互動是提升用戶體驗的關鍵元素。然而，當動畫與元件狀態、生命周期交織在一起時，實作上就可能遇到各種挑戰。</p><p>這篇文章記錄我在一個 React 專案中，解決「動畫重複觸發與重置」問題的過程，深入比較了使用 key 重置與 CSS Reflow（offsetWidth） 重置的方式</p><h2 id="問題概述"><a href="#問題概述" class="headerlink" title="問題概述"></a>問題概述</h2><p>在這個專案中，我有兩個自訂的元件，各自內部包含一個相同結構的 <code>&lt;input&gt;</code>。當使用者點擊某個操作後，我希望這些 input：</p><span id="more"></span><ul><li>執行一次 CSS 動畫（例如 fade-in）</li><li>自動獲得焦點，以利立即輸入內容</li></ul><p>實務操作時卻發現動畫無法正常重新觸發。透過分析發現：</p><ul><li>由於兩個元件 input 結構相同，React 為效能考量，複用了 DOM。</li><li>導致 CSS 動畫無法重新觸發，即便強制 re-render 也不一定能順利重新播放。</li></ul><p>這時我開始思考：有沒有方法可以「重置動畫」，但不要整個元件都重建？</p><p>我開始尋找「能重置動畫但不需重建元件」的方法，最終發現兩個可行方案。</p><h3 id="方法一：使用-key-重建元件"><a href="#方法一：使用-key-重建元件" class="headerlink" title="方法一：使用 key 重建元件"></a>方法一：使用 key 重建元件</h3><p>在 React 中，每個元件都可以透過 key 來標示其唯一性。當 key 改變時，React 會：</p><p>卸載原本的元件</p><p>掛載一個全新的元件實例</p><p>這表示：元件會完全重置，包括其 state、effects 和動畫效果。</p><ul><li><strong>優點</strong>：<ul><li>完整重置狀態與動畫</li><li>純 React 機制，簡單易懂</li></ul></li><li><strong>缺點</strong>：<ul><li>整個元件卸載重建，效能成本高</li><li>所有 effect 重跑一遍，需注意副作用</li></ul></li></ul><p>範例程式碼：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [keyIndex, setKeyIndex] = <span class="title function_">useState</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleReset</span> = (<span class="params"></span>) =&gt; <span class="title function_">setKeyIndex</span>(<span class="function"><span class="params">prev</span> =&gt;</span> prev + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleReset&#125;</span>&gt;</span>重置元件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputBox</span> <span class="attr">key</span>=<span class="string">&#123;keyIndex&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">InputBox</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">className</span>=<span class="string">&quot;fade-in&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">autoFocus</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">placeholder</span>=<span class="string">&quot;輸入一些內容...&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    /&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>優點：<br>可徹底重置所有狀態與動畫</li></ul><p>不需額外操作 DOM，純粹靠 React 的 key 機制</p><ul><li>缺點：<br>整個元件會被卸載與重建，效能開銷較大</li></ul><p>所有副作用與初始化邏輯（如 useEffect）都會重新執行</p><h3 id="方法二：使用-offsetWidth-強制-CSS-重排（Reflow）"><a href="#方法二：使用-offsetWidth-強制-CSS-重排（Reflow）" class="headerlink" title="方法二：使用 offsetWidth 強制 CSS 重排（Reflow）"></a>方法二：使用 offsetWidth 強制 CSS 重排（Reflow）</h3><p>如果只需要「重播動畫」而不需要重置整個元件狀態，那其實 不必重建 DOM 元素，我們可以用 CSS 動畫與 DOM 操作來達成。</p><p>原理是透過：</p><p>移除動畫類別</p><p>存取 offsetWidth 觸發 Reflow</p><p>重新加入動畫類別</p><p>這樣就能「騙過」瀏覽器認為動畫是全新的一次播放。</p><ul><li><strong>優點</strong>：<ul><li>輕量級 DOM 操作</li><li>適合頻繁動畫觸發</li></ul></li><li><strong>缺點</strong>：<ul><li>需透過 DOM 操作或 state 管理 class</li><li>無法重置元件內部狀態</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> element = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;inputElement&quot;</span>);</span><br><span class="line"></span><br><span class="line">element.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;animate&quot;</span>);</span><br><span class="line"><span class="keyword">void</span> element.<span class="property">offsetWidth</span>;</span><br><span class="line">element.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;animate&quot;</span>);</span><br></pre></td></tr></table></figure><p>React 實作（使用 state）：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">InputWithAnimation</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [animate, setAnimate] = <span class="title function_">useState</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">resetAnimation</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setAnimate</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">setAnimate</span>(<span class="literal">true</span>), <span class="number">10</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;resetAnimation&#125;</span>&gt;</span>重新播放動畫<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">className</span>=<span class="string">&#123;animate</span> ? &quot;<span class="attr">fade-in</span>&quot; <span class="attr">:</span> &quot;&quot;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">autoFocus</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;輸入文字...&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>優點：<br>只更新 DOM 屬性，不會造成元件重建</li></ul><p>效能負擔小，適合單一或少量元素的動畫重播</p><ul><li>缺點：<br>需要操作 DOM（透過 ref 或 state 控制 class）</li></ul><p>只針對動畫，無法重置元件內部狀態</p><h3 id="最後選擇的方式：offsetWidth-重排，更高效又穩定"><a href="#最後選擇的方式：offsetWidth-重排，更高效又穩定" class="headerlink" title="最後選擇的方式：offsetWidth 重排，更高效又穩定"></a>最後選擇的方式：offsetWidth 重排，更高效又穩定</h3><p>在衡量了需求與效能之後，我最終選擇使用 CSS offsetWidth 的方式來重播動畫，原因如下：</p><h4 id="技術考量："><a href="#技術考量：" class="headerlink" title="技術考量："></a>技術考量：</h4><p>我只需要動畫重置與 focus 效果，不需要整個元件重建</p><p>若使用 key，元件會被卸載重建，對效能影響太大</p><p>CSS 方法可以更精準控制動畫行為</p><h4 id="效能層面："><a href="#效能層面：" class="headerlink" title="效能層面："></a>效能層面：</h4><p>使用 offsetWidth 只會觸發局部重排</p><p>不會進入 React 的 Virtual DOM Diff 過程</p><p>更適合需要高互動性與動畫頻繁觸發的場景</p><h4 id="技術總結與實務建議"><a href="#技術總結與實務建議" class="headerlink" title="技術總結與實務建議"></a>技術總結與實務建議</h4><p>建議原則：<br>動畫重播：使用 offsetWidth + class 操控，效能較佳且針對性強<br>狀態重置：使用 key 強制重新掛載，簡單直接但效能成本較高</p><hr><p>參考<br><a href="https://dev.to/olivare/how-to-make-your-app-faster-with-reacts-key-prop-170n">How to make your app faster with React’s key prop</a></p><p><a href="https://stackoverflow.com/questions/60686489/what-purpose-does-void-element-offsetwidth-serve/69029892#69029892">What purpose does void element.offsetWidth serve?</a></p><p><a href="https://dev.to/malapashish/mastering-react-re-renders-the-key-prop-hack-you-need-to-know-17hh">Mastering React Re-Renders : The Key Prop Hack You Need to Know</a></p>]]></content>
      
      
      <categories>
          
          <category> side-project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> side-project </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷題練習 - Permutation in String</title>
      <link href="/2025/04/15/slide-window-Permutation-in-String/"/>
      <url>/2025/04/15/slide-window-Permutation-in-String/</url>
      
        <content type="html"><![CDATA[<p>練習來自 <a href="https://labuladong.online/algo/essential-technique/sliding-window-framework/">labuladong 的演算法筆記</a> 的滑動視窗演算法核心程式碼模板。</p><h2 id="基本設置"><a href="#基本設置" class="headerlink" title="基本設置:"></a>基本設置:</h2><p>用兩個指針來界定一個區間，也就是一個「窗口」：</p><ul><li>左指針 left：表示窗口的起始位置。</li><li>右指針 right：表示窗口的尾部（通常採用左閉右開區間 [left, right)）。</li></ul><p>窗口內的資料會隨著 left 和 right 的移動而動態改變。解題的關鍵在於：</p><ul><li>擴大窗口：不斷將新的元素加入窗口，並更新窗口內的狀態或統計（例如字元出現次數）。</li><li>檢查窗口是否滿足條件：根據題目要求檢查當前窗口是否為合法解。</li><li>收縮窗口：如果當前窗口已滿足條件，嘗試從左側移除元素以找到更優（例如更短）的解，同時更新狀態。</li></ul><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> slidingWindow = <span class="keyword">function</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="comment">// 使用合適的資料結構記錄視窗中的資料，根據具體題目變通。</span></span><br><span class="line">    <span class="comment">// 例如：記錄字元出現的次數，或累加窗口內元素的和。</span></span><br><span class="line">    <span class="keyword">let</span> <span class="variable language_">window</span> = &#123;&#125;;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> left = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (right &lt; s.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="comment">// 取出將要加入視窗的字元</span></span><br><span class="line">        <span class="keyword">let</span> c = s[right];</span><br><span class="line">        right++;  <span class="comment">// 擴大窗口</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新窗口內資料</span></span><br><span class="line">        <span class="comment">// 例如：window[c] = (window[c] || 0) + 1;</span></span><br><span class="line">        <span class="comment">// 根據具體題目邏輯進行更新</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// *** Debug 輸出位置 *** </span></span><br><span class="line">        <span class="comment">// console.log(&quot;窗口: [%d, %d)&quot;, left, right);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 當窗口不再滿足題目要求時，收縮窗口</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="comment">/* 判斷窗口需要收縮的條件 */</span>) &#123;</span><br><span class="line">            <span class="comment">// 取得將要移除的字元（為使變數名稱更具描述性可用 removedChar）</span></span><br><span class="line">            <span class="keyword">let</span> removedChar = s[left];</span><br><span class="line">            left++;  <span class="comment">// 縮小窗口</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 更新移除字元對窗口資料的影響</span></span><br><span class="line">            <span class="comment">// 例如：if (window[removedChar] ...) &#123; ... &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a><a href="https://leetcode.com/problems/permutation-in-string/description/">題目</a></h2><p>Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.</p><p>In other words, return true if one of s1’s permutations is the substring of s2.</p><p>給定兩個字串 s1 和 s2，若 s2 中包含 s1 的某個排列，則返回 true；否則返回 false。</p><p>換句話說，若 s1 的某個排列是 s2 的子字串，則返回 true。</p><p>Example 1:</p><p>Input: s1 = “ab”, s2 = “eidbaooo”<br>Output: true<br>Explanation: s2 contains one permutation of s1 (“ba”).</p><span id="more"></span><h3 id="解題思路："><a href="#解題思路：" class="headerlink" title="解題思路："></a>解題思路：</h3><ol><li>建立需求資料結構：</li></ol><ul><li>先建立一個哈希表 need，記錄 s1 中每個字元需出現的次數。這代表著當視窗中相應字元的出現次數達到 need 內的數量，該字元即滿足要求。</li></ul><ol start="2"><li>初始化視窗相關變數：</li></ol><ul><li>建立一個哈希表 window 用來記錄當前視窗內各字元出現次數。</li><li>初始化左右指標 left 與 right 為 0。</li><li>使用變數 valid 來計算目前在視窗中滿足 need 要求的字元種類數。</li><li>由於目標是找出是否存在 s1 中排列（即字元組合相同）出現在 s2 中，所以要求的視窗大小固定為 s1 長度。</li></ul><ol start="3"><li><p>擴大視窗：<br>利用 right 指標不斷擴大窗口，將 s2 中的字元依序加入窗口中，並更新 window 的計數。如果某個字元剛好滿足 need 的數量要求，則 valid 加 1。</p></li><li><p>收縮視窗並檢查條件：<br>當視窗的大小等於 s1 的長度時，此時視窗中的所有字元構成一個候選解。</p></li></ol><ul><li>檢查 valid 是否等於 need 中的字元種類數。如果相等，說明當前窗口中的字元頻率與 s1 完全一致，符合排列條件，直接返回 true。</li><li>如果不符合，則將左側字元移除（收縮窗口），並更新 window 中該字元的計數以及 valid（若該字元數量從滿足變成不足）。</li><li>窗口收縮後繼續擴大右側以遍歷 s2。</li></ul><ol start="5"><li>結束：<br>遍歷完 s2 後，若未能找到符合條件的窗口，則返回 false。</li></ol><h3 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">s1</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">s2</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">boolean</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> checkInclusion = <span class="keyword">function</span>(<span class="params">s1, s2</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable language_">window</span> = &#123;&#125;</span><br><span class="line">    <span class="keyword">let</span> need = &#123;&#125;</span><br><span class="line">    <span class="keyword">let</span> right = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> valid = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> required = <span class="title class_">Object</span>.<span class="title function_">keys</span>(need).<span class="property">length</span>;  <span class="comment">// 需要滿足的字元種類數</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> s1)&#123;</span><br><span class="line">        need[item] = (need[item] || <span class="number">0</span>) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(right &lt; s2.<span class="property">length</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> char = s2[right]</span><br><span class="line">        right++</span><br><span class="line">        <span class="keyword">if</span>(need[char])&#123;</span><br><span class="line">            <span class="variable language_">window</span>[char] = (<span class="variable language_">window</span>[char] || <span class="number">0</span>) + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">window</span>[char] === need[char])&#123;</span><br><span class="line">                valid++</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 當窗口長度達到 s1 的長度時，開始收縮窗口</span></span><br><span class="line">        <span class="keyword">while</span>(right - left &gt;= s1.<span class="property">length</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(valid === <span class="title class_">Object</span>.<span class="title function_">keys</span>(need).<span class="property">length</span>) <span class="keyword">return</span> <span class="literal">true</span>    </span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> removedChar = s2[left]</span><br><span class="line">            left++</span><br><span class="line">            <span class="comment">// 更新移出字元對窗口資料的影響</span></span><br><span class="line">            <span class="keyword">if</span>(need[removedChar])&#123; </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable language_">window</span>[removedChar] === need[removedChar])&#123;</span><br><span class="line">                    valid--</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">window</span>[removedChar]--</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="時間與空間複雜度分析"><a href="#時間與空間複雜度分析" class="headerlink" title="時間與空間複雜度分析"></a>時間與空間複雜度分析</h2><ol><li>時間複雜度： O(n + m)，其中 n 為 s2 的長度，m 為 s1 的長度。</li><li>空間複雜度： 最壞情況下為 O(m)。</li></ol><ul><li>綜合空間複雜度：<br>如果不假設字元集是固定大小（例如僅限小寫英文字母），那麼最壞情況下整體空間複雜度為 O(m)。<br>注意： 在許多實際情況下（例如字元集固定的狀況），可能會將此空間複雜度視為 O(1)；但從最壞情況分析角度，仍然為 O(m)</li></ul>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> slide-window </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>side-project-zustand</title>
      <link href="/2025/03/31/side-project-zustand/"/>
      <url>/2025/03/31/side-project-zustand/</url>
      
        <content type="html"><![CDATA[<p>這段時間在製作一個 snippet 管理的 side project，過程中遇到了一些跨頁面共享資料的需求。專案中有一包資料稱為 snippet，內部包含多個 folder 和小項目的 snippets。這些資料不僅會在 /snippet 路徑下的元件使用，還會跨 route 被其他頁面存取。</p><p>一開始，我選擇使用 React 的 Context API，透過建立一個 SnippetsContext 來管理狀態。在應用程式的最上層放置一次 SnippetsProvider，然後在需要的任何元件內直接使用 import { useSnippets } from ‘@/contexts/SnippetsContext’ 來取得 context。然而，隨著專案規模逐步擴展，這種方法逐漸顯露出其局限性。我發現即使已經有了最上層的 Provider，但在多個 dialog 或 component 中，仍然需要重複地導入 useSnippets，不僅造成代碼重複，也使得專案結構變得臃腫複雜。</p><p>為了解決上述問題，我嘗試了另一個狀態管理工具 —— Zustand。Zustand 提供了一種更直覺、更精簡的方式來建立和存取全域狀態，不需要透過 Provider 包裹元件，大幅減少了樣板代碼的使用，也讓資料流更加清晰易懂。</p><p>在這篇文章中，我會分享如何在專案中實際導入並使用 Zustand</p><h2 id="初步實作-Zustand"><a href="#初步實作-Zustand" class="headerlink" title="初步實作 Zustand"></a>初步實作 Zustand</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install zustand</span><br></pre></td></tr></table></figure><p>如果想使用持久化功能，也可以安裝：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install zustand/middleware</span><br></pre></td></tr></table></figure><h2 id="store-資料夾"><a href="#store-資料夾" class="headerlink" title="store 資料夾"></a>store 資料夾</h2><p>在專案的 src 資料夾下建立一個 store 資料夾，這之中包含給 folder , snippet 的 slice。之所以採用 slice 是因為原本 snippet 的處理邏輯較為複雜，包含了 folder 的儲存、內部 snippet 的儲存，以及一些專門給 dialog 使用的 UI 狀態。透過將 store 分拆成多個 slice（例如 folderSlice 與 uiSlice），每個模組都只負責處理自己相關的 state 與操作，能更好地維護代碼的結構與可讀性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">src/</span><br><span class="line"> ├── types/</span><br><span class="line"> │    └── snippet.<span class="property">ts</span>            <span class="comment">// 共用型別，也可以有 auth.ts, settings.ts 等</span></span><br><span class="line"> └── stores/</span><br><span class="line">      ├── snippet/</span><br><span class="line">      │     ├── slices/</span><br><span class="line">      │     │     ├── folderSlice.<span class="property">ts</span></span><br><span class="line">      │     │     ├── snippetSlice.<span class="property">ts</span></span><br><span class="line">      │     │     └── uiSlice.<span class="property">ts</span></span><br><span class="line">      │     └── index.<span class="property">ts</span>        <span class="comment">// snippetStore.ts</span></span><br><span class="line">      ├── auth/</span><br><span class="line">      │     └── index.<span class="property">ts</span>        <span class="comment">// 假如之後， authStore.ts (可以進一步拆分 authSlices)</span></span><br><span class="line">      └── settings/</span><br><span class="line">            └── index.<span class="property">ts</span>        <span class="comment">// 假如之後，settingsStore.ts</span></span><br></pre></td></tr></table></figure><p>在專案中的 snippet 資料夾內，會建立一個 index.ts 檔案來整合所有獨立的 slice，並導出一個完整的 Zustand store。這麼做的優點是：之後在任何元件中需要使用狀態時，只需導入整個 store，而不需要逐一引入每個 slice</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/stores/snippet/index.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; create &#125; <span class="keyword">from</span> <span class="string">&#x27;zustand&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; persist &#125; <span class="keyword">from</span> <span class="string">&#x27;zustand/middleware&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FolderSlice</span>, createFolderSlice &#125; <span class="keyword">from</span> <span class="string">&#x27;./slices/folderSlice&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">SnippetSlice</span>, createSnippetSlice &#125; <span class="keyword">from</span> <span class="string">&#x27;./slices/snippetSlice&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UISlice</span>, createUISlice &#125; <span class="keyword">from</span> <span class="string">&#x27;./slices/uiSlice&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 組合所有模組的型別</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> <span class="title class_">AppStore</span> = <span class="title class_">FolderSlice</span> &amp; <span class="title class_">SnippetSlice</span> &amp; <span class="title class_">UISlice</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useSnippetStore = create&lt;<span class="title class_">AppStore</span>&gt;()(</span><br><span class="line">  <span class="title function_">persist</span>(</span><br><span class="line">    <span class="function">(<span class="params">set, get, api</span>) =&gt;</span> (&#123;</span><br><span class="line">      ...<span class="title function_">createFolderSlice</span>(set, get, api),</span><br><span class="line">      ...<span class="title function_">createSnippetSlice</span>(set, get, api),</span><br><span class="line">      ...<span class="title function_">createUISlice</span>(set, get, api),</span><br><span class="line">    &#125;),</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;my-snippets-storage&#x27;</span>,</span><br><span class="line">      <span class="comment">// partialize 使我們只持久化 folders，UI 狀態不必存入 localStorage</span></span><br><span class="line">      <span class="attr">partialize</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> (&#123; <span class="attr">folders</span>: state.<span class="property">folders</span> &#125;),</span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>使用 zustand 提供的 persist middleware，能輕鬆將特定狀態持久化到 localStorage。</li><li>透過 partialize 參數，我能夠靈活地指定只有某些狀態 (例如：folders) 需要持久化，而 UI 或其他臨時狀態則保持記憶體內即可。</li></ul><h2 id="folderSlice-ts"><a href="#folderSlice-ts" class="headerlink" title="folderSlice.ts"></a>folderSlice.ts</h2><p>在建立 folderSlice 時，透過 Zustand 的 StateCreator 定義了一個 slice，專門負責管理資料夾（folders）相關的狀態與邏輯。透過這個方式，能清楚地將資料夾的操作行為集中管理。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/stores/snippet/slices/folderSlice.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">StateCreator</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;zustand&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Folder</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/types/snippets&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">FolderSlice</span> &#123;</span><br><span class="line">  <span class="attr">folders</span>: <span class="title class_">Folder</span>[];</span><br><span class="line">  <span class="attr">setFolders</span>: <span class="function">(<span class="params">folders: Folder[]</span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">  <span class="attr">updateFolder</span>: <span class="function">(<span class="params">id: <span class="built_in">string</span>, updates: Partial&lt;Folder&gt;</span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">  <span class="attr">addFolder</span>: <span class="function">(<span class="params">folder: Omit&lt;Folder, <span class="string">&quot;id&quot;</span>&gt;, index?: <span class="built_in">number</span></span>) =&gt;</span> <span class="title class_">Folder</span>;</span><br><span class="line">  <span class="attr">deleteFolder</span>: <span class="function">(<span class="params">id: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="attr">createFolderSlice</span>: <span class="title class_">StateCreator</span>&lt;<span class="title class_">FolderSlice</span>&gt; = <span class="function">(<span class="params">set, get</span>) =&gt;</span> (&#123;</span><br><span class="line">  <span class="attr">folders</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&#x27;HplOMyf2mDqvVMdphJbt&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;My Sample Snippets&#x27;</span>,</span><br><span class="line">      <span class="attr">description</span>: <span class="string">&#x27;This is a sample folder&#x27;</span>,</span><br><span class="line">      <span class="attr">snippets</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">id</span>: <span class="string">&#x27;5mJw031VPo2WxNIQyeXN&#x27;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;Demo - Plain text&#x27;</span>,</span><br><span class="line">          <span class="attr">content</span>: <span class="string">&#x27;be a software engineer&#x27;</span>,</span><br><span class="line">          <span class="attr">shortcut</span>: <span class="string">&#x27;/do&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">id</span>: <span class="string">&#x27;6mJw031VPo2WxNIQyeYN&#x27;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;Demo - Styled Text&#x27;</span>,</span><br><span class="line">          <span class="attr">content</span>:</span><br><span class="line">            <span class="string">&#x27;be a translate expert, I will give you a sentence and help me translate to english&#x27;</span>,</span><br><span class="line">          <span class="attr">shortcut</span>: <span class="string">&#x27;/doT&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&#x27;folder-1741057188488&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;Test&#x27;</span>,</span><br><span class="line">      <span class="attr">description</span>: <span class="string">&#x27;test&#x27;</span>,</span><br><span class="line">      <span class="attr">snippets</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">id</span>: <span class="string">&#x27;snippet-1741057206823&#x27;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;test&#x27;</span>,</span><br><span class="line">          <span class="attr">content</span>: <span class="string">&#x27;&lt;p&gt;New snippet content Test&lt;/p&gt;&#x27;</span>,</span><br><span class="line">          <span class="attr">shortcut</span>: <span class="string">&#x27;/test&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">setFolders</span>: <span class="function">(<span class="params">folders</span>) =&gt;</span> <span class="title function_">set</span>(&#123; folders &#125;),</span><br><span class="line">  <span class="attr">updateFolder</span>: <span class="function">(<span class="params">id, updates</span>) =&gt;</span></span><br><span class="line">    <span class="title function_">set</span>(&#123;</span><br><span class="line">      <span class="attr">folders</span>: <span class="title function_">get</span>().<span class="property">folders</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">folder</span>) =&gt;</span></span><br><span class="line">        folder.<span class="property">id</span> === id ? &#123; ...folder, ...updates &#125; : folder</span><br><span class="line">      ),</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// 新增資料夾，可選擇插入位置</span></span><br><span class="line">    <span class="attr">addFolder</span>: <span class="function">(<span class="params">folder, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> <span class="attr">newFolder</span>: <span class="title class_">Folder</span> = &#123; ...folder, <span class="attr">id</span>: <span class="string">`folder-<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>`</span> &#125;;</span><br><span class="line">      <span class="title function_">set</span>(<span class="function">(<span class="params">state</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">folders</span>:</span><br><span class="line">          <span class="keyword">typeof</span> index === <span class="string">&quot;number&quot;</span></span><br><span class="line">            ? [</span><br><span class="line">                ...state.<span class="property">folders</span>.<span class="title function_">slice</span>(<span class="number">0</span>, index),</span><br><span class="line">                newFolder,</span><br><span class="line">                ...state.<span class="property">folders</span>.<span class="title function_">slice</span>(index),</span><br><span class="line">              ]</span><br><span class="line">            : [...state.<span class="property">folders</span>, newFolder],</span><br><span class="line">      &#125;));</span><br><span class="line">      <span class="keyword">return</span> newFolder;</span><br><span class="line">    &#125;,</span><br><span class="line">  <span class="attr">deleteFolder</span>: <span class="function">(<span class="params">id</span>) =&gt;</span></span><br><span class="line">    <span class="title function_">set</span>(&#123;</span><br><span class="line">      <span class="attr">folders</span>: <span class="title function_">get</span>().<span class="property">folders</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">folder</span>) =&gt;</span> folder.<span class="property">id</span> !== id),</span><br><span class="line">    &#125;),</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>使用 set 來更新狀態，get 取得當前狀態。</li><li>addFolder 方法可指定新增資料夾的位置（透過可選的 index 參數）；若未指定，則預設新增到列表尾端。</li></ul><h2 id="snippetSlice-ts"><a href="#snippetSlice-ts" class="headerlink" title="snippetSlice.ts"></a>snippetSlice.ts</h2><p>snippetSlice 負責 snippet 的新增、刪除與更新操作。由於 snippets 存放於 folders 中，因此此 slice 會依賴 FolderSlice 的狀態來進行資料處理。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/stores/snippet/slices/snippetSlice.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">StateCreator</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;zustand&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Snippet</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/types/snippets&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FolderSlice</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./folderSlice&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">SnippetSlice</span> &#123;</span><br><span class="line">  <span class="attr">addSnippetToFolder</span>: <span class="function">(<span class="params">folderId: <span class="built_in">string</span>, snippet: Omit&lt;Snippet, <span class="string">&#x27;id&#x27;</span>&gt;</span>) =&gt;</span> <span class="title class_">Snippet</span>;</span><br><span class="line">  <span class="attr">deleteSnippetFromFolder</span>: <span class="function">(<span class="params">folderId: <span class="built_in">string</span>, snippetId: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">  <span class="attr">updateSnippet</span>: <span class="function">(<span class="params">snippetId: <span class="built_in">string</span>, updatedSnippet: Partial&lt;Snippet&gt;</span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 這裡依賴 FolderSlice，因為 snippets 都儲存在 folders 內</span></span><br><span class="line"><span class="comment">// 修改後，addSnippetToFolder 回傳新 snippet</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="attr">createSnippetSlice</span>: <span class="title class_">StateCreator</span>&lt;</span><br><span class="line">  <span class="title class_">FolderSlice</span> &amp; <span class="title class_">SnippetSlice</span>,</span><br><span class="line">  [],</span><br><span class="line">  [],</span><br><span class="line">  <span class="title class_">SnippetSlice</span></span><br><span class="line">&gt; = <span class="function">(<span class="params">set, get</span>) =&gt;</span> (&#123;</span><br><span class="line">  <span class="comment">// 新增一個 snippet 到指定的資料夾，並回傳新增的 snippet（包含自動生成的 id）</span></span><br><span class="line">  <span class="attr">addSnippetToFolder</span>: <span class="function">(<span class="params">folderId, snippet</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">newSnippet</span>: <span class="title class_">Snippet</span> = &#123; ...snippet, <span class="attr">id</span>: <span class="string">`snippet-<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>`</span> &#125;;</span><br><span class="line">    <span class="title function_">set</span>(&#123;</span><br><span class="line">      <span class="attr">folders</span>: <span class="title function_">get</span>().<span class="property">folders</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">folder</span>) =&gt;</span></span><br><span class="line">        folder.<span class="property">id</span> === folderId</span><br><span class="line">          ? &#123; ...folder, <span class="attr">snippets</span>: [...folder.<span class="property">snippets</span>, newSnippet] &#125;</span><br><span class="line">          : folder</span><br><span class="line">      ),</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> newSnippet; <span class="comment">// 回傳新增後完整的 snippet 物件</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">deleteSnippetFromFolder</span>: <span class="function">(<span class="params">folderId, snippetId</span>) =&gt;</span></span><br><span class="line">    <span class="title function_">set</span>(&#123;</span><br><span class="line">      <span class="attr">folders</span>: <span class="title function_">get</span>().<span class="property">folders</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">folder</span>) =&gt;</span></span><br><span class="line">        folder.<span class="property">id</span> === folderId</span><br><span class="line">          ? &#123;</span><br><span class="line">              ...folder,</span><br><span class="line">              <span class="attr">snippets</span>: folder.<span class="property">snippets</span>.<span class="title function_">filter</span>(</span><br><span class="line">                <span class="function">(<span class="params">snippet</span>) =&gt;</span> snippet.<span class="property">id</span> !== snippetId</span><br><span class="line">              ),</span><br><span class="line">            &#125;</span><br><span class="line">          : folder</span><br><span class="line">      ),</span><br><span class="line">    &#125;),</span><br><span class="line">  <span class="attr">updateSnippet</span>: <span class="function">(<span class="params">snippetId, updatedSnippet</span>) =&gt;</span></span><br><span class="line">    <span class="title function_">set</span>(&#123;</span><br><span class="line">      <span class="attr">folders</span>: <span class="title function_">get</span>().<span class="property">folders</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">folder</span>) =&gt;</span> (&#123;</span><br><span class="line">        ...folder,</span><br><span class="line">        <span class="attr">snippets</span>: folder.<span class="property">snippets</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">snippet</span>) =&gt;</span></span><br><span class="line">          snippet.<span class="property">id</span> === snippetId ? &#123; ...snippet, ...updatedSnippet &#125; : snippet</span><br><span class="line">        ),</span><br><span class="line">      &#125;)),</span><br><span class="line">    &#125;),</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><p>新增 snippet（addSnippetToFolder）</p><p>提供一個資料夾 id 和 snippet 的內容（不含 id）。<br>自動產生 snippet 的 id（透過 Date.now()）。<br>將新的 snippet 放到指定的資料夾內，並回傳完整的新 snippet，方便後續操作使用。</p></li><li><p>刪除 snippet（deleteSnippetFromFolder）</p><p>根據指定的資料夾 id 和 snippet id 移除 snippet。<br>使用 filter 方法，確保其他 snippet 不受影響。</p></li><li><p>更新 snippet（updateSnippet）</p><p>-提供 snippet id 和欲更新的部分 snippet 屬性。<br>-使用 map 方法，只更新符合指定 id 的 snippet，其他 snippet 維持不變。</p></li></ul><h2 id="uiSlice-ts"><a href="#uiSlice-ts" class="headerlink" title="uiSlice.ts"></a>uiSlice.ts</h2><p>uiSlice 專門用來管理專案內與 UI 顯示相關的狀態，例如 dialog（對話框）的開啟或關閉狀態，以及當前匹配（matched）的 snippet 資訊。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/stores/snippet/slices/uiSlice.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">StateCreator</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;zustand&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MatchedSnippet</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/types/snippets&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">UISlice</span> &#123;</span><br><span class="line">  <span class="attr">isDialogOpen</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">matchedSnippet</span>: <span class="title class_">MatchedSnippet</span>;</span><br><span class="line">  <span class="attr">setIsDialogOpen</span>: <span class="function">(<span class="params">open: <span class="built_in">boolean</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">  <span class="attr">setMatchedSnippet</span>: <span class="function">(<span class="params">snippet: MatchedSnippet</span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="attr">createUISlice</span>: <span class="title class_">StateCreator</span>&lt;<span class="title class_">UISlice</span>&gt; = <span class="function">(<span class="params">set</span>) =&gt;</span> (&#123;</span><br><span class="line">  <span class="attr">isDialogOpen</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">matchedSnippet</span>: &#123;</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">targetElement</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">insert</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">shortcut</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">setIsDialogOpen</span>: <span class="function">(<span class="params">open: <span class="built_in">boolean</span></span>) =&gt;</span> <span class="title function_">set</span>(&#123; <span class="attr">isDialogOpen</span>: open &#125;),</span><br><span class="line">  <span class="attr">setMatchedSnippet</span>: <span class="function">(<span class="params">snippet: MatchedSnippet</span>) =&gt;</span> <span class="title function_">set</span>(&#123; <span class="attr">matchedSnippet</span>: snippet &#125;),</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>isDialogOpen<br>負責追蹤 dialog 是否正在顯示，便於控制 dialog 元件的顯示與隱藏。</li><li>matchedSnippet<br>用於暫時儲存用戶目前匹配到的 snippet 資訊，例如 snippet 的內容、目標元素、快捷鍵資訊等等，讓 UI 能即時反應用戶操作。</li></ul><h2 id="在頁面中使用-Zustand-管理的狀態"><a href="#在頁面中使用-Zustand-管理的狀態" class="headerlink" title="在頁面中使用 Zustand 管理的狀態"></a>在頁面中使用 Zustand 管理的狀態</h2><p>想在頁面或元件內使用剛才建立的 Zustand 狀態時，只需從我們整合好的 useSnippetStore 引入所需的狀態或方法即可</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useSnippetStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/snippet&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Snippet</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/types/snippets&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MyComponent</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 從整合後的 store 直接取出需要的方法</span></span><br><span class="line">  <span class="keyword">const</span> &#123; addFolder &#125; = <span class="title function_">useSnippetStore</span>();</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 舉例：在元件載入時新增一個 folder</span></span><br><span class="line">    <span class="keyword">const</span> newFolder = <span class="title function_">addFolder</span>(&#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;New Folder&#x27;</span>,</span><br><span class="line">      <span class="attr">description</span>: <span class="string">&#x27;Example folder created on load&#x27;</span>,</span><br><span class="line">      <span class="attr">snippets</span>: [],</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;新增了資料夾：&#x27;</span>, newFolder);</span><br><span class="line">  &#125;, [addFolder]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>你的元件內容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>不再需要額外引入任何 Context Provider。</li><li>在任何需要存取全局狀態的地方，只需簡單導入 useSnippetStore，然後直接調用對應的方法或取得狀態即可。</li></ul><h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>藉由導入 Zustand 並將狀態拆分成多個獨立的 Slice（folderSlice、snippetSlice、uiSlice），使我能夠：</p><ul><li>清晰地分離狀態責任：每個 Slice 專注於處理特定領域的邏輯，如資料夾管理、snippet 操作，以及 UI 狀態。</li><li>靈活管理持久化策略：透過 Zustand 提供的 middleware（如 persist 與 partialize），只將必要的資料（例如資料夾）持久化至 localStorage，而 UI 等臨時狀態則保留在記憶體中。</li><li>有效降低耦合度與樣板代碼：每個元件不再需要額外引入 Provider，簡化了開發流程，並且降低未來維護成本。</li></ul>]]></content>
      
      
      <categories>
          
          <category> side-project </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> side-project </tag>
            
            <tag> Zustand </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>figma mcp 應用</title>
      <link href="/2025/03/27/figma-mcp/"/>
      <url>/2025/03/27/figma-mcp/</url>
      
        <content type="html"><![CDATA[<p>有新東西就是要來快速嘗試一下～～ 注意 cursor 要是付費版才能使用</p><p>至 GitHub clone 專案 <a href="https://github.com/sonnylazuardi/cursor-talk-to-figma-mcp">Cursor Talk to Figma MCP</a></p><p>然後遵循 README：<strong>Get Started 開始</strong></p><p>它需要安裝 bun 套件管理工具</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL <span class="attr">https</span>:<span class="comment">//bun.sh/install | bash</span></span><br></pre></td></tr></table></figure><p>需要在你的專案根目錄執行:</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /path/to/your/cursor-talk-to-figma-mcp</span><br><span class="line">bun setup</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 啟動 WebSocket server（必須持續執行）</span></span><br><span class="line">bun socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># 啟動 MCP server（另開一個終端）</span></span><br><span class="line">bunx cursor-talk-to-figma-mcp</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// Add the server to your Cursor MCP configuration <span class="keyword">in</span> ~/.cursor/mcp.json:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mcpServers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;TalkToFigma&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;command&quot;</span>: <span class="string">&quot;bunx&quot;</span>,</span><br><span class="line">      <span class="string">&quot;args&quot;</span>: [<span class="string">&quot;cursor-talk-to-figma-mcp&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下為圖示：</p><p><img src="https://i.imgur.com/6LuXXYv.png" alt="image.png"></p><span id="more"></span><p>從 Figma 的官網下載 ：<a href="https://www.figma.com/downloads/">https://www.figma.com/downloads/</a></p><p>在第一次設定：選擇左上角的 Figma Icon，點選「Plugins」→「Development」→「Import plugin from manifest」</p><ul><li>在 Figma 中，點選選單 → <strong>Plugins</strong> → <strong>Development</strong> → Import plugin from manifest</li><li>指定並選取專案中的 <code>src/cursor_mcp_plugin/manifest.json</code> 檔案</li><li>完成後，該外掛就會出現在你的 Figma Development Plugins 列表中，可以直接使用了。</li></ul><p><img src="https://i.imgur.com/UZwKie7.png" alt="image.png"></p><p>此外，要注意 cursor  連線，當你有成功連接 mcp 會有綠點，且呈現 Enable:</p><p><img src="https://i.imgur.com/ei4uzVB.png" alt="image.png"></p><p><img src="https://i.imgur.com/xysn5c0.png" alt="image.png"></p><p>確定與 figma 連線成功：</p><p>執行：talk fo figma , channel id: {你的 channel id}</p><p><img src="https://i.imgur.com/YhCxwoq.png" alt="image.png"></p><p>接著你就可以告訴他你要做得 figma 內容，像是我的指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">設計一個 管理ai prompt 桌面版，請提出以下方式讓我完成 應用程式 所有需要的設計：</span><br><span class="line"></span><br><span class="line">思考使用者需要 管理ai prompt 桌面版 要提供哪些功能:</span><br><span class="line"></span><br><span class="line">作為產品經理提出功能規劃</span><br><span class="line"></span><br><span class="line">作為設計師提供整體介面設計</span><br><span class="line"></span><br><span class="line">可以使用 FrontAwesome 等圖示展示，讓原型圖更接近真實</span><br></pre></td></tr></table></figure><p>但是他只幫我產出簡單的 layout，要做出一設計稿還是很有大難度</p><p><img src="https://i.imgur.com/yr4O7rI.png" alt="image.png"></p><p>參考：<br><a href="https://muki.tw/figma-mcp-server-cursor/">https://muki.tw/figma-mcp-server-cursor/</a></p><hr><p>使用 <a href="https://github.com/GLips/Figma-Context-MCP">https://github.com/GLips/Figma-Context-MCP</a> </p><p>閱讀 Readme: <strong>Connecting to Cursor</strong></p><p>1.在自己終端機：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx figma-developer-mcp --figma-api-key=&lt;your-figma-api-key&gt;</span><br></pre></td></tr></table></figure><ul><li>-figma-api-key 要到 figma 登入後，點擊頭像 settings →  security → create new token</li></ul><p>2.到 <strong>Cursor → Cursor settings → mcp</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mcpServers&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Framelink Figma MCP&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://localhost:3000/sse&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.可以回到 figma ，要選擇你要的畫面</p><p><img src="https://i.imgur.com/Lbv0HvC.png" alt="image.png"></p><p>注意你在本地，要先建立好一 react 專案</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm create vite@latest my-react-app -- --template react</span><br></pre></td></tr></table></figure><p>然後到 cursor → cd my-react-app  →  chat 貼上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@https://www.figma.com/design/lImjbdZmdV25TQ23glGfvV/Locofy-Sample-Project---FickleFlight-(Community)?node-id=1003-3841&amp;t=CNAo85NCrYNAJpJ6-4 </span><br><span class="line">請幫我用 tailwindcss做此畫面， tailwind css 設定我已經處理好，請專注於做畫面，不要用其他 css框架，就全部使用tailwind，記得圖片也要抓下來</span><br></pre></td></tr></table></figure><p>在該 cursor 專案：</p><p><img src="https://i.imgur.com/ADYZghc.png" alt="image.png"></p><p>以下，可以看到他做的切版：</p><p>我參照的 figma template : Locofy Sample Project - FickleFlight (Community)</p><p><img src="https://i.imgur.com/L1PUGuw.png" alt="image.png"></p><p><img src="https://i.imgur.com/yMcOvmL.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue 動態事件名稱</title>
      <link href="/2025/03/27/vue-dynamic-event/"/>
      <url>/2025/03/27/vue-dynamic-event/</url>
      
        <content type="html"><![CDATA[<p>在 Vue 中使用動態事件名稱的功能自 Vue 2.6.0 版本開始支持。可以使用 v-on 或 @ 來動態綁定事件名稱</p><p>簡單舉例：<br>根據裝置類型切換事件（桌機 vs 手機）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> event = <span class="title function_">ref</span>(navigator.<span class="property">maxTouchPoints</span> ? <span class="string">&#x27;touchstart&#x27;</span> : <span class="string">&#x27;click&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">handle</span> = (<span class="params"></span>) =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Triggered on&#x27;</span>, event.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @[<span class="attr">event</span>]=<span class="string">&quot;handle&quot;</span>&gt;</span>按我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.「檔案卡片」元件預覽或跳轉：</p><p>點擊 (click)：選擇／下載檔案<br>滑鼠移入 (mouseover)：預覽檔案摘要</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;file-card&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on</span>=<span class="string">&quot;&#123; click: handleDownload, mouseover: handlePreview &#125;&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; fileName &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;showPreview&quot;</span> <span class="attr">class</span>=<span class="string">&quot;preview-popup&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; previewText &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=<span class="string">&quot;ts&quot;</span>&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref, computed, nextTick &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> props = defineProps&lt;&#123; <span class="attr">fileName</span>: string; <span class="attr">fileUrl</span>: string &#125;&gt;()</span><br><span class="line"><span class="keyword">const</span> showPreview = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">const</span> previewText = <span class="title function_">ref</span>(<span class="string">&#x27;Loading preview…&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 點擊 → 觸發下載</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleDownload</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="title function_">open</span>(props.<span class="property">fileUrl</span>, <span class="string">&#x27;_blank&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 滑鼠移入 → 取得並顯示檔案摘要</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handlePreview</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  showPreview.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="comment">// 模擬 API 請求</span></span><br><span class="line">  <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="built_in">setTimeout</span>(res, <span class="number">300</span>))</span><br><span class="line">  previewText.<span class="property">value</span> = <span class="string">`Preview of <span class="subst">$&#123;props.fileName&#125;</span>`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 滑鼠移出後隱藏預覽</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">hidePreview</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  showPreview.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 監聽滑鼠離開整個卡片</span></span><br><span class="line"><span class="keyword">const</span> cardRef = ref&lt;<span class="title class_">HTMLElement</span> | <span class="literal">null</span>&gt;(<span class="literal">null</span>)</span><br><span class="line">cardRef.<span class="property">value</span>?.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseleave&#x27;</span>, hidePreview)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.file-card</span> &#123; <span class="attribute">position</span>: relative; <span class="attribute">display</span>: inline-block; &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.preview-popup</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">position</span>: absolute;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">top</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">left</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding</span>: <span class="number">0.5rem</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background</span>: white;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="https://stackblitz.com/edit/vue-tip-dynamic-event-names-evguwtw8?file=README.md">Demo</a></p><p>注意：在「同一欄位會因不同情境而切換觸發事件」時，才建議用動態綁定。若只是單純切換事件名稱，建議直接在方法內判斷即可。</p><p>也可參考 Michael Hoffmann 這裡的另一實作方式：<br><a href="https://stackblitz.com/edit/vue-tip-dynamic-event-names?file=src%2FApp.vue">https://stackblitz.com/edit/vue-tip-dynamic-event-names?file=src%2FApp.vue</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>twilwindCss-twMerge</title>
      <link href="/2025/03/20/twilwindCss-twMerge/"/>
      <url>/2025/03/20/twilwindCss-twMerge/</url>
      
        <content type="html"><![CDATA[<p>在開發 React 或 Vue 應用時，動態組合 Tailwind CSS class 是常見的需求。但當 class 來源多樣（例如 props 傳入、條件渲染等），你可能會遇到 class 重複、衝突或難以維護的問題，這時候，twMerge 就能幫助你解決這些困難。</p><h2 id="什麼是-twMerge"><a href="#什麼是-twMerge" class="headerlink" title="什麼是 twMerge"></a>什麼是 twMerge</h2><p><code>twMerge</code> 是一個專為 <strong>Tailwind CSS</strong> 設計的 class 合併工</p><ul><li><strong>衝突解決</strong>：當你從不同來源（例如預設樣式和 props 傳入的 class）合併 class 時，可能會出現相同屬性的重複定義，twMerge 會自動解決這些衝突，保證最終只保留正確的 class。</li><li><strong>動態組合</strong>：在實際應用中，很多時候 class 字符串是根據條件組合出來的，直接拼接可能會導致意料之外的覆蓋。twMerge 能夠讓你的 class 合併更有條理，避免混淆。</li></ul><p>安裝方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm install tailwind-merge</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">yarn add tailwind-merge</span><br></pre></td></tr></table></figure><p>基本使用範例：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; twMerge &#125; <span class="keyword">from</span> <span class="string">&#x27;tailwind-merge&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> classes = <span class="title function_">twMerge</span>(<span class="string">&quot;p-4&quot;</span>, <span class="string">&quot;p-2&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(classes); <span class="comment">// 輸出: &quot;p-2&quot;（自動移除衝突的 p-4）</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="為什麼不用手動拼接-class？"><a href="#為什麼不用手動拼接-class？" class="headerlink" title="為什麼不用手動拼接 class？"></a>為什麼不用手動拼接 class？</h2><h3 id="無法處理-Tailwind-class-衝突"><a href="#無法處理-Tailwind-class-衝突" class="headerlink" title="無法處理 Tailwind class 衝突"></a><strong>無法處理 Tailwind class 衝突</strong></h3><p>當兩個 class 有衝突時，手動拼接無法確保後來的 class 是否正確覆蓋前者。例如：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> finalClasses = <span class="string">`p-4 p-2`</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(finalClasses); <span class="comment">// &quot;p-4 p-2&quot; （無法移除衝突 class）</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="條件渲染時-class-可能重複或失效"><a href="#條件渲染時-class-可能重複或失效" class="headerlink" title="條件渲染時 class 可能重複或失效"></a><strong>條件渲染時 class 可能重複或失效</strong></h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> isActive = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">const</span> finalClasses = <span class="string">`px-4 py-2 <span class="subst">$&#123;isActive ? <span class="string">&quot;bg-blue-500&quot;</span> : <span class="string">&quot;bg-gray-200&quot;</span>&#125;</span> bg-red-500`</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(finalClasses);</span><br><span class="line"><span class="comment">// &quot;px-4 py-2 bg-blue-500 bg-gray-200 bg-red-500&quot; （背景顏色衝突）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 改使用 twMerge</span></span><br><span class="line"><span class="keyword">const</span> finalClasses = <span class="title function_">twMerge</span>(<span class="string">&quot;px-4 py-2&quot;</span>, isActive ? <span class="string">&quot;bg-blue-500&quot;</span> : <span class="string">&quot;bg-gray-200&quot;</span>, <span class="string">&quot;bg-red-500&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(finalClasses);</span><br><span class="line"><span class="comment">// &quot;px-4 py-2 bg-red-500&quot; （自動解決衝突）</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="也有使用模板字串（template-literal）來動態拼接-class，例如："><a href="#也有使用模板字串（template-literal）來動態拼接-class，例如：" class="headerlink" title="也有使用模板字串（template literal）來動態拼接 class，例如："></a><strong>也有使用模板字串（template literal）來動態拼接 class，例如：</strong></h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> finalClasses = <span class="string">`px-4 py-2 bg-blue-500 text-white <span class="subst">$&#123;isDisabled ? <span class="string">&quot;opacity-50 cursor-not-allowed&quot;</span> : <span class="string">&quot;&quot;</span>&#125;</span>`</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>雖然，這樣可以根據條件動態組合 class，不過要注意兩點：</p><ol><li><p><strong>Tailwind CSS 掃描限制</strong><br> 若 class 是在字串插值中產生的，Tailwind 的掃描器可能無法檢測到某些動態組合的 class，這會導致對應 CSS 未被生成。這時候可能需要在 Tailwind 設定檔中加入 safelist。</p></li><li><p><strong>衝突管理</strong><br> 當有多個來源的 class 存在衝突（例如兩個不同的背景色），你必須手動確保拼接順序正確。如果衝突較多，使用 twMerge 可以更方便地自動解決這些衝突。</p></li></ol><h3 id="twMerge-的好處"><a href="#twMerge-的好處" class="headerlink" title="twMerge 的好處"></a>twMerge 的好處</h3><table><thead><tr><th>問題</th><th>手動拼 class</th><th>使用 twMerge</th></tr></thead><tbody><tr><td>衝突解決</td><td>必須自己追蹤哪個 class 最後生效</td><td>自動保留後出現的 class，刪除重複或衝突項 <a href="https://www.wsquare.io/blogs/how-to-use-and-get-benefits-from-tailwind-merge">wsquare.io</a></td></tr><tr><td>動態組合</td><td>條件判斷時拼接字串易漏寫或重複</td><td>傳多個參數給 twMerge，即使 class 來源複雜也只回傳一組乾淨結果 <a href="https://tailkits.com/blog/tailwind-css-class-conflicts-using-tailwind-merge/">tailkits.com</a></td></tr><tr><td>維護成本</td><td>隨著專案變大，class 字串容易失控</td><td>twMerge 會緩存結果，減少重複運算並讓程式碼更易讀</td></tr></tbody></table><h2 id="twMerge-的實踐"><a href="#twMerge-的實踐" class="headerlink" title="twMerge 的實踐"></a>twMerge 的實踐</h2><h3 id="在-React-中條件渲染-Tailwind-class"><a href="#在-React-中條件渲染-Tailwind-class" class="headerlink" title="在 React 中條件渲染 Tailwind class"></a><strong>在 React 中條件渲染 Tailwind class</strong></h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Button</span> = (<span class="params">&#123; isDisabled &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&#123;twMerge(</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &quot;<span class="attr">px-4</span> <span class="attr">py-2</span> <span class="attr">rounded</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">isDisabled</span> &amp;&amp; &quot;<span class="attr">opacity-50</span> <span class="attr">cursor-not-allowed</span>&quot;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    )&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      Click Me</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>當 <code>isDisabled = true</code>，twMerge 會<strong>自動移除 <code>false</code> 的 class</strong>，結果變成：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// isDisabled = true 時</span></span><br><span class="line"><span class="string">&quot;px-4 py-2 rounded opacity-50 cursor-not-allowed&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// isDisabled = false 時</span></span><br><span class="line"><span class="string">&quot;px-4 py-2 rounded&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>這樣可以 <strong>避免<code>undefined</code> 或 <code>false</code> 的 class 影響最終輸出</strong>。</p><hr><h3 id="組件化時合併-props-傳入的-class"><a href="#組件化時合併-props-傳入的-class" class="headerlink" title="組件化時合併 props 傳入的 class"></a><strong>組件化時合併 props 傳入的 class</strong></h3><p>當你開發 <strong>可重用 UI 元件</strong> 時，通常會允許使用者傳入 <code>className</code> 來覆蓋預設樣式：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Text</span> = (<span class="params">&#123; children, className &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;twMerge(</span>&quot;<span class="attr">font-normal</span> <span class="attr">text-lg</span>&quot;, <span class="attr">className</span>)&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用方式：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Text</span> className=<span class="string">&quot;font-bold text-red-500&quot;</span>&gt;<span class="title class_">Hello</span>&lt;/<span class="title class_">Text</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>這樣 <code>twMerge</code> 會確保：</p><ul><li><code>font-bold</code> 正確覆蓋 <code>font-normal</code></li><li><code>text-red-500</code> 正確覆蓋 <code>text-lg</code></li></ul><h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>在開發 <strong>需要動態組合類別的元件</strong>，或 <strong>允許使用者自訂樣式覆蓋</strong> 的情境下，<code>twMerge</code> 是一個非常實用的工具。它能夠幫助你：  </p><p><strong>自動解決 class 衝突</strong><br>不必手動追蹤哪些類別可能互相覆蓋，<code>twMerge</code> 會確保最後宣告的樣式生效（例如 <code>p-4 p-2</code> 最終保留 <code>p-2</code>）。  </p><p><strong>支援條件渲染</strong><br>優雅地處理條件式樣式，避免 <code>false</code>、<code>undefined</code> 影響最終 class，讓程式碼更乾淨。  </p><p><strong>提升程式碼可讀性與維護性</strong><br>讓動態組合多個來源的 class 變得簡單清晰，減少維護成本，提高開發效率。</p><p><a href="https://antematter.io/blogs/mastering-css-customization-with-tailwind-merge">Override Tailwind Classes using Tailwind-Merge</a></p>]]></content>
      
      
      <categories>
          
          <category> frontend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tailwind CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SOLID 物件導向</title>
      <link href="/2025/02/24/Net-solid/"/>
      <url>/2025/02/24/Net-solid/</url>
      
        <content type="html"><![CDATA[<ul><li>S 指的是 Single responsibility principle(SRP) 單一職責原則</li><li>O 指的是 Open/close principle(OCP) 開放/封閉原則</li><li>L 指的是 Liskov substitution principle(LSP) Liskov 替換原則</li><li>I 指的是 Interface Segregation Principle(ISP) 介面隔離原則</li><li>D 指的是 Dependency Inversion Principle(DIP) 依賴反轉原則</li></ul><h2 id="Single-responsibility-principle-SRP-單一職責原則"><a href="#Single-responsibility-principle-SRP-單一職責原則" class="headerlink" title="Single responsibility principle(SRP) 單一職責原則"></a>Single responsibility principle(SRP) 單一職責原則</h2><p>一個 class 別應該只有一個職責，並且只應該因為一個理由而改變。</p><p>C# 程式碼範例：</p><p>以違反 SRP 的範例：<br>在這個範例中，User 類別同時負責使用者資料的管理、資料庫儲存、發送歡迎信和使用者驗證等多個職責。這違反了 SRP。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">User</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Username &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Password &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Email &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveUserToDatabase</span>()</span> &#123; <span class="comment">/* 資料庫儲存邏輯 */</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SendWelcomeEmail</span>()</span> &#123; <span class="comment">/* 發送歡迎信邏輯 */</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">ValidateUser</span>()</span> &#123; <span class="comment">/* 使用者驗證邏輯 */</span> <span class="keyword">return</span> <span class="literal">true</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>符合 SRP 的範例：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">User</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Username &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Password &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Email &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UserRepository</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveUser</span>(<span class="params">User user</span>)</span> &#123; <span class="comment">/* 資料庫儲存邏輯 */</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EmailService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SendWelcomeEmail</span>(<span class="params">User user</span>)</span> &#123; <span class="comment">/* 發送歡迎信邏輯 */</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UserValidator</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">ValidateUser</span>(<span class="params">User user</span>)</span> &#123; <span class="comment">/* 使用者驗證邏輯 */</span> <span class="keyword">return</span> <span class="literal">true</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在這個範例中，我們將不同的職責分離到不同的類別中：</p><ul><li>User 類別只負責使用者資料的管理。</li><li>UserRepository 類別負責資料庫儲存。</li><li>EmailService 類別負責發送歡迎信。</li><li>UserValidator 類別負責使用者驗證。<br>這樣做使得每個類別都只有一個職責，並且只因為一個理由而改變，符合了 SRP。</li></ul><h3 id="從前端的解度來理解"><a href="#從前端的解度來理解" class="headerlink" title="從前端的解度來理解"></a>從前端的解度來理解</h3><p>在前端開發中，我們經常使用元件 (Component) 的概念來構建使用者介面。一個元件通常負責渲染一部分的 UI，並處理與該部分 UI 相關的互動。這與 SRP 的概念非常相似。一個好的前端元件應該只負責單一的職責，例如：</p><p>顯示資料： 只負責接收資料並將其渲染到 UI 上。<br>處理使用者輸入： 只負責處理使用者在介面上的輸入事件，例如按鈕點擊、表單提交等。<br>發送 API 請求： 只負責向後端發送 API 請求並處理回應。</p><span id="more"></span><h4 id="這個範例中，ProductList-元件同時負責："><a href="#這個範例中，ProductList-元件同時負責：" class="headerlink" title="這個範例中，ProductList 元件同時負責："></a>這個範例中，ProductList 元件同時負責：</h4><ul><li>渲染產品列表： products.map 部分。</li><li>處理加入購物車的邏輯： handleAddToCart 函數。</li><li>本地儲存購物車資料： localStorage.setItem。</li><li>追蹤加入購物車的事件： trackAddToCartEvent 函數。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 違反 SRP 的元件</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ProductList</span>(<span class="params">&#123; products &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [cart, setCart] = <span class="title function_">useState</span>([]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleAddToCart</span> = (<span class="params">product</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 同時處理加入購物車和本地儲存</span></span><br><span class="line">    <span class="title function_">setCart</span>([...cart, product]);</span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;cart&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([...cart, product]));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 同時處理追蹤事件</span></span><br><span class="line">    <span class="title function_">trackAddToCartEvent</span>(product);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">trackAddToCartEvent</span> = (<span class="params">product</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 追蹤加入購物車的事件，例如發送到 GA</span></span><br><span class="line">    <span class="comment">// ... 追蹤程式碼 ...</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Product <span class="subst">$&#123;product.name&#125;</span> added to cart.`</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;products.map((product) =&gt; (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">key</span>=<span class="string">&#123;product.id&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;product.name&#125; - $&#123;product.price&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> handleAddToCart(product)&#125;&gt;Add to Cart<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      ))&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以調整，將不同的職責分離到不同的函數或元件中：<br>ProductList 元件只負責渲染產品列表和處理按鈕點擊事件，並透過 onAddToCart prop 將加入購物車的事件傳遞給父元件。<br>CartManager 負責管理購物車的狀態、本地儲存和追蹤事件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 符合 SRP 的元件</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ProductList</span>(<span class="params">&#123; products, onAddToCart &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;products.map((product) =&gt; (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">key</span>=<span class="string">&#123;product.id&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;product.name&#125; - $&#123;product.price&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> onAddToCart(product)&#125;&gt;Add to Cart<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      ))&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">CartManager</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> [cart, setCart] = <span class="title function_">useState</span>([]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleAddToCart</span> = (<span class="params">product</span>) =&gt; &#123;</span><br><span class="line">        <span class="title function_">setCart</span>([...cart, product]);</span><br><span class="line">        <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;cart&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([...cart, product]));</span><br><span class="line">        <span class="title function_">trackAddToCartEvent</span>(product); <span class="comment">// 呼叫追蹤函數</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">trackAddToCartEvent</span> = (<span class="params">product</span>) =&gt; &#123;</span><br><span class="line">        <span class="comment">// 追蹤加入購物車的事件</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Product <span class="subst">$&#123;product.name&#125;</span> added to cart.`</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">ProductList</span> <span class="attr">products</span>=<span class="string">&#123;products&#125;</span> <span class="attr">onAddToCart</span>=<span class="string">&#123;handleAddToCart&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Open-close-principle-OCP-開放-封閉原則"><a href="#Open-close-principle-OCP-開放-封閉原則" class="headerlink" title="Open/close principle(OCP) 開放/封閉原則"></a>Open/close principle(OCP) 開放/封閉原則</h2><ul><li>對擴展開放 (Open for extension)： 允許新增功能或行為。</li><li>對修改封閉 (Closed for modification)： 不應該修改既有的程式碼</li></ul><p>以生物分類學為背景，將「雞」和「火龍」視為不同的生物種類。它們之間有一些共同的特性（例如都會啼叫、用兩隻腳走路），也有各自獨特的特性（例如火龍會吐火、會飛）。</p><p>這個例子要說明的是，當我們需要新增「火龍」這個角色時，如果直接修改「雞」的類別，就會違反 OCP，並且造成程式碼的混亂。正確的做法是透過抽象化，建立更通用的概念（例如「雉科」、「飛龍種」），然後讓「雞」和「火龍」分別繼承這些概念，並實作各自獨特的行為。</p><h3 id="初始設計（未應用-OCP）："><a href="#初始設計（未應用-OCP）：" class="headerlink" title="初始設計（未應用 OCP）："></a>初始設計（未應用 OCP）：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Chicken</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MakeSound</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Cock-a-doodle-doo!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Walk</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Walking on two legs.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果要新增 Dragon，直接修改 Chicken 類別，違反 OCP</span></span><br><span class="line"><span class="comment">// public class Chicken</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     ...</span></span><br><span class="line"><span class="comment">//     public void Fly() // 這樣做不合理</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         // ...</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><p>應用 OCP 的設計：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定義一個抽象的生物介面</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IAnimal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">MakeSound</span>()</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Walk</span>()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 雉科</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Phasianidae</span> : <span class="title">IAnimal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">MakeSound</span>() <span class="comment">// 使用 virtual 允許子類別覆寫</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Generic bird sound.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Walk</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Walking on two legs.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 雞</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Chicken</span> : <span class="title">Phasianidae</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">MakeSound</span>() <span class="comment">// 覆寫 MakeSound 方法</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Cock-a-doodle-doo!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 飛龍</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Wyvern</span> : <span class="title">IAnimal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">MakeSound</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Roar!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Walk</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Running on two legs.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fly</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Flying in the sky.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FireBreath</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Breathing fire!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 火龍</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Dragon</span> : <span class="title">Wyvern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">MakeSound</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;ROAR!!!&quot;</span>); <span class="comment">// 更大的叫聲</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Chicken chicken = <span class="keyword">new</span> Chicken();</span><br><span class="line">        chicken.MakeSound(); <span class="comment">// Cock-a-doodle-doo!</span></span><br><span class="line">        chicken.Walk();      <span class="comment">// Walking on two legs.</span></span><br><span class="line"></span><br><span class="line">        Dragon dragon = <span class="keyword">new</span> Dragon();</span><br><span class="line">        dragon.MakeSound();  <span class="comment">// ROAR!!!</span></span><br><span class="line">        dragon.Walk();       <span class="comment">// Running on two legs.</span></span><br><span class="line">        dragon.Fly();        <span class="comment">// Flying in the sky.</span></span><br><span class="line">        dragon.FireBreath(); <span class="comment">// Breathing fire!</span></span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>透過 IAnimal 介面和抽象類別 Phasianidae 和 Wyvern，成功地將「雞」和「火龍」的共同行為和特有行為分離開來。新增「火龍」的功能不需要修改 Chicken 類別。</p><h3 id="以前端角度來認識"><a href="#以前端角度來認識" class="headerlink" title="以前端角度來認識"></a>以前端角度來認識</h3><p>能夠添加新功能而不需要修改現有的代碼。以下以 React 元件設計方式來舉例。</p><p>將書籍類型，有區分Premium、Free 2種，Book 元件同時負責渲染書籍的基本信息（如 title 和 image）以及處理不同類型的邏輯（如 type 和按鈕行為）。這種設計將多個責任耦合在一起，降低了元件的可維護性。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Book = (&#123; title, image, type, onClickFree, onClickPremium &#125;: IBook) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> handleReadPremium = () =&gt; &#123;</span><br><span class="line">    <span class="comment">// Some logic</span></span><br><span class="line">    onClickPremium();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> handleReadFree = () =&gt; &#123;</span><br><span class="line">    <span class="comment">// Some logic</span></span><br><span class="line">    onClickFree();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;img src=&#123;image&#125; /&gt;</span><br><span class="line">      &lt;p&gt;&#123;title&#125;&lt;/p&gt;</span><br><span class="line">      &#123;type === <span class="string">&quot;Premium&quot;</span> &amp;&amp; (</span><br><span class="line">        &lt;button onClick=&#123;handleReadPremium&#125;&gt;Add to cart +&lt;/button&gt;</span><br><span class="line">      )&#125;</span><br><span class="line">      &#123;type === <span class="string">&quot;Free&quot;</span> &amp;&amp; &lt;button onClick=&#123;handleReadFree&#125;&gt;Read&lt;/button&gt;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>嘗試遵循 OCP：<br>Book 元件的核心邏輯（如渲染書籍的基本信息）保持不變，無需因新增書籍類型而修改。<br>新的書籍類型（如 PremiumBook 或 FreeBook）可以通過組合和擴展來實現，而不需要改動 Book 元件的代碼。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">Book</span> = (<span class="params">&#123; title, image, children &#125;: IBook</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;image&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;title&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">PremiumBook</span> = (<span class="params">&#123; title, image, onClick &#125;: IBook</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Book</span> <span class="attr">title</span>=<span class="string">&#123;title&#125;</span> <span class="attr">image</span>=<span class="string">&#123;image&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span>&gt;</span>Add to cart +<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Book</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">FreeBook</span> = (<span class="params">&#123; title, image, onClick &#125;: IBook</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Book</span> <span class="attr">title</span>=<span class="string">&#123;title&#125;</span> <span class="attr">image</span>=<span class="string">&#123;image&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span>&gt;</span>Read<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Book</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>新的書籍類型可以通過創建新的子元件（如 PremiumBook 或 FreeBook）來實現，這些子元件可以自由定義自己的行為和內容。</p><p>例如，若需要新增一個 ExclusiveBook 類型，只需創建一個新的元件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">ExclusiveBook</span> = (<span class="params">&#123; title, image, onClick &#125;: IBook</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Book</span> <span class="attr">title</span>=<span class="string">&#123;title&#125;</span> <span class="attr">image</span>=<span class="string">&#123;image&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span>&gt;</span>Exclusive Access<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Book</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Liskov-substitution-principle-LSP-Liskov-替換原則"><a href="#Liskov-substitution-principle-LSP-Liskov-替換原則" class="headerlink" title="Liskov substitution principle(LSP) Liskov 替換原則"></a>Liskov substitution principle(LSP) Liskov 替換原則</h2><p>LSP 強調的是繼承關係中的「可替換性」。也就是說，任何使用父類別的地方，都應該可以毫無問題地替換成子類別的實例，而不需要修改任何程式碼。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Bird</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Fly</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Flying!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Penguin</span> : <span class="title">Bird</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Fly</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;Penguins can&#x27;t fly!&quot;</span>); <span class="comment">// 企鵝無法飛行，拋出例外</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;Bird&gt; birds = <span class="keyword">new</span> List&lt;Bird&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">new</span> Bird(),</span><br><span class="line">            <span class="keyword">new</span> Penguin()</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (Bird bird <span class="keyword">in</span> birds)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                bird.Fly(); <span class="comment">// 迴圈中呼叫 Fly 方法，企鵝會拋出例外</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(ex.Message); <span class="comment">// 捕捉例外並印出訊息</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Penguin 繼承了 Bird，並覆寫了 Fly 方法，使其拋出例外。這違反了 LSP，因為我們無法在不修改程式碼的情況下，用 Penguin 的實例替換 Bird 的實例。</p><ul><li>需要重新設計繼承關係，區分會飛的鳥類和不會飛的鳥類。</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定義一個會飛的鳥類的介面</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IFlyingBird</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Fly</span>()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鳥類基底類別 (可以不用是 abstract class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Bird</span> &#123;</span><br><span class="line">  <span class="comment">// 通用方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">MakeSound</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Generic bird sound.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="built_in">string</span> <span class="title">Eat</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">$&quot;<span class="subst">&#123;Name&#125;</span> is eating.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 會飛的鳥類</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Sparrow</span> : <span class="title">Bird</span>, <span class="title">IFlyingBird</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fly</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Sparrow is flying!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">MakeSound</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Chirp!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不會飛的鳥類</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Penguin</span> : <span class="title">Bird</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">MakeSound</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Squawk!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;Bird&gt; birds = <span class="keyword">new</span> List&lt;Bird&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">new</span> Sparrow(),</span><br><span class="line">            <span class="keyword">new</span> Penguin()</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (Bird bird <span class="keyword">in</span> birds)</span><br><span class="line">        &#123;</span><br><span class="line">            bird.MakeSound(); <span class="comment">// 所有鳥類都會發出叫聲，符合預期</span></span><br><span class="line">            <span class="keyword">if</span>(bird <span class="keyword">is</span> IFlyingBird flyingBird) &#123;</span><br><span class="line">                flyingBird.Fly(); <span class="comment">// 只有會飛的鳥類才會執行 Fly 方法</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>符合 LSP 的範例中：</p><p>我們定義了一個 IFlyingBird 介面，只有會飛的鳥類才會實作這個介面。<br>Sparrow 繼承了 Bird 並且實作了 IFlyingBird 介面。<br>Penguin 只繼承了 Bird，沒有實作 IFlyingBird 介面。</p><p> <strong>Liskov 替換原則的遵守</strong>：<br>    - 所有 <code>Bird</code> 子類別都可以在需要 <code>Bird</code> 的地方被替換，且行為符合預期。<br>    - 當需要特定行為（如飛行）時，可以使用介面進行額外約束，而不影響父類別的正確性。</p><h3 id="以前端角度來認識-1"><a href="#以前端角度來認識-1" class="headerlink" title="以前端角度來認識"></a>以前端角度來認識</h3><p><a href="https://www.youtube.com/watch?v=JkDg4-TPzL8&t=143s">Examples of Liskov Substitution Principle in React and Typescript (React Advanced Concepts)</a></p><p>LSP 的核心在於「行為子型別」（Behavioral Subtyping），即子型別應該能夠完全取代超型別，並且行為保持一致。以下是影片中如何實現 LSP 的步驟：</p><p>一個基本的對話框元件，具有標題 (header)、內容 (content) 和按鈕 (footer) 部分。<br>它被視為一個 superType。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 假設的 Dialog 元件程式碼</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line">interface <span class="title class_">DialogProps</span> &#123;</span><br><span class="line">  <span class="attr">header</span>: <span class="title class_">React</span>.<span class="property">ReactNode</span>;</span><br><span class="line">  <span class="attr">content</span>: <span class="title class_">React</span>.<span class="property">ReactNode</span>;</span><br><span class="line">  <span class="attr">footer</span>: <span class="title class_">React</span>.<span class="property">ReactNode</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> type <span class="title class_">DialogType</span>&lt;T = &#123;&#125;&gt; = <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">DialogProps</span> &amp; T&gt;;</span><br><span class="line"><span class="keyword">export</span> type <span class="title class_">RegularDialogType</span> = <span class="title class_">DialogType</span>&lt;&#123;</span><br><span class="line">  className?:string</span><br><span class="line">&#125;&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Dialog</span>: <span class="title class_">Dialog</span>: <span class="title class_">RegularDialogTyp</span> = <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; header, content, footer, className= <span class="string">&#x27;dialog&#x27;</span> &#125; = props;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">dialog</span> $&#123;<span class="attr">className</span>&#125;`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">className</span>&#125;<span class="attr">-header</span>`&#125;&gt;</span>&#123;header&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">className</span>&#125;<span class="attr">-content</span>`&#125;&gt;</span>&#123;content&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">className</span>&#125;<span class="attr">-footer</span>`&#125;&gt;</span>&#123;footer&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Dialog</span>;</span><br></pre></td></tr></table></figure><p>聖誕節對話框 (XmasDialog) 元件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 假設的 XmasDialog 元件程式碼</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RegularDialogTyp</span>, <span class="title class_">Dialog</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./dialog&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">XmasDialog</span>: <span class="title class_">RegularDialogTyp</span> = <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; header, content, footer &#125; = props;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Dialog</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">className</span>=<span class="string">&quot;xmas-dialog&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">header</span>=<span class="string">&#123;header&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">content</span>=<span class="string">&#123;content&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">footer</span>=<span class="string">&#123;footer&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    /&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上範例，</p><ul><li>Dialog 作為 SuperType：定義了標題 (header)、內容 (content)、頁腳 (footer) 等基本屬性，所有對話框都應該符合這些屬性。</li><li>XmasDialog 作為子型別：它與 Dialog 使用相同的 props，確保 可替換性，但透過 className 改變外觀。</li><li>不改變行為： LSP 不僅要求子類型和 SuperType 具有相同的介面，還要求它們的行為一致，當使用子類型替換 SuperType 時，所有屬性 (props) 都被傳遞，且元件的功能應該保持不變 （如，XmasDialog 必須像 Dialog 一樣運作，不能缺少任何部分或停止運作）</li></ul><h3 id="組合-Composition-而非繼承-Inheritance"><a href="#組合-Composition-而非繼承-Inheritance" class="headerlink" title="組合 (Composition) 而非繼承 (Inheritance)"></a>組合 (Composition) 而非繼承 (Inheritance)</h3><p>在傳統 OOP 設計中，我們可能會讓 XmasDialog 繼承 Dialog，但這樣做會帶來以下問題：</p><p>❌ 耦合度高：如果 Dialog 內部發生變化，XmasDialog 可能會受影響，導致潛在的錯誤。<br>❌ 可維護性差：新增其他節日主題時，需要一直擴展 Dialog，導致程式碼複雜度增加。</p><p>因此，在這範例選擇 組合 (Composition) 來設計 XmasDialog，而不是直接繼承 Dialog：</p><p>XmasDialog 內部使用 Dialog，但只改變 className，避免邏輯耦合。<br>這種方式可以輕鬆擴展其他節日版本，例如 HalloweenDialog 或 NewYearDialog，而不影響 Dialog 的核心實作。</p><h3 id="條件渲染-Conditional-Rendering"><a href="#條件渲染-Conditional-Rendering" class="headerlink" title="條件渲染 (Conditional Rendering)"></a>條件渲染 (Conditional Rendering)</h3><p>以下根據應用狀態決定要顯示一般對話框 (Dialog) 或聖誕節對話框 (XmasDialog)。可以使用以下方式：</p><ul><li>透過 appStore.hasSales(‘xmas’) 判斷是否為聖誕節，並動態選擇 XmasDialog 或 Dialog。</li><li>確保在不同情境下應用的行為仍然一致，不會影響 UI 的運作。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Dialog</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./dialog&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">XmasDialog</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./xmasDialog&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; appStore &#125; <span class="keyword">from</span> <span class="string">&#x27;./helpers&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">App</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;&#123;&#125;&gt; = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">Component</span> = appStore.<span class="title function_">hasSales</span>(<span class="string">&#x27;xmas&#x27;</span>) ? <span class="title class_">XmasDialog</span> : <span class="title class_">Dialog</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Component</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">header</span>=<span class="string">&#123;</span>&lt;<span class="attr">h3</span>&gt;</span>Profile Details<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">        content=&#123;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Your name...&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Your surname...&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml">        footer=&#123;<span class="tag">&lt;<span class="name">button</span>&gt;</span>Save<span class="tag">&lt;/<span class="name">button</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      /&gt;</span></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在這邊，保持 Liskov 替換原則 (LSP) 一致性：</p><ul><li>Component 可以指向 Dialog 或 XmasDialog，但它們的介面完全相同，因此可以互換。</li><li>無論顯示哪個對話框，應用的邏輯不會受到影響。</li></ul><hr><h2 id="Interface-Segregation-Principle-ISP-介面隔離原則"><a href="#Interface-Segregation-Principle-ISP-介面隔離原則" class="headerlink" title="Interface Segregation Principle(ISP) 介面隔離原則"></a>Interface Segregation Principle(ISP) 介面隔離原則</h2><p>不應該強迫客戶端依賴它們不需要的介面。將大型介面拆分成小型、更具體的介面，可以提高系統的靈活性和可維護性。</p><p>IMultiFunctionPrinter 介面包含了列印、掃描和傳真等多個職責。SimplePrinter 類別只需要列印功能，但它被迫實作了 Scan 和 Fax 方法，這違反了 ISP。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IMultiFunctionPrinter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Print</span>()</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Scan</span>()</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Fax</span>()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OldPrinter</span> : <span class="title">IMultiFunctionPrinter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Print</span>()</span> &#123; <span class="comment">/* 實作列印 */</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Scan</span>()</span> &#123; <span class="comment">/* 實作掃描 */</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fax</span>()</span> &#123; <span class="comment">/* 實作傳真 */</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SimplePrinter</span> : <span class="title">IMultiFunctionPrinter</span> <span class="comment">// 只需要列印功能</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Print</span>()</span> &#123; <span class="comment">/* 實作列印 */</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Scan</span>()</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException(); &#125; <span class="comment">// 不需要掃描，被迫實作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fax</span>()</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> NotImplementedException(); &#125; <span class="comment">// 不需要傳真，被迫實作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IPrinter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Print</span>()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IScanner</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Scan</span>()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IFax</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Fax</span>()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GoodPrinter</span> : <span class="title">IPrinter</span>, <span class="title">IScanner</span>, <span class="title">IFax</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Print</span>()</span> &#123; <span class="comment">/* 實作列印 */</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Scan</span>()</span> &#123; <span class="comment">/* 實作掃描 */</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fax</span>()</span> &#123; <span class="comment">/* 實作傳真 */</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SimplePrinter</span> : <span class="title">IPrinter</span> <span class="comment">// 只實作需要的介面</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Print</span>()</span> &#123; <span class="comment">/* 實作列印 */</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="前端-JavaScript-範例："><a href="#前端-JavaScript-範例：" class="headerlink" title="前端 JavaScript 範例："></a>前端 JavaScript 範例：</h2><p>在前端 JavaScript 中，雖然沒有像 C# 的介面，但我們可以使用物件或函數來模擬介面的效果。</p><p>違反 ISP 的範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> userActions = &#123;</span><br><span class="line">    <span class="attr">login</span>: <span class="function">() =&gt;</span> &#123; <span class="comment">/* 登入邏輯 */</span> &#125;,</span><br><span class="line">    <span class="attr">logout</span>: <span class="function">() =&gt;</span> &#123; <span class="comment">/* 登出邏輯 */</span> &#125;,</span><br><span class="line">    <span class="attr">createUser</span>: <span class="function">() =&gt;</span> &#123; <span class="comment">/* 建立使用者邏輯 */</span> &#125;,</span><br><span class="line">    <span class="attr">deleteUser</span>: <span class="function">() =&gt;</span> &#123; <span class="comment">/* 刪除使用者邏輯 */</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 只需要登入和登出的元件被迫依賴不需要的 createUser 和 deleteUser</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">AuthComponent</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleLogin</span> = (<span class="params"></span>) =&gt; userActions.<span class="title function_">login</span>();</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleLogout</span> = (<span class="params"></span>) =&gt; userActions.<span class="title function_">logout</span>();</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleLogin&#125;</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleLogout&#125;</span>&gt;</span>Logout<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>符合 ISP 的範例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> authActions = &#123;</span><br><span class="line">    <span class="attr">login</span>: <span class="function">() =&gt;</span> &#123; <span class="comment">/* 登入邏輯 */</span> &#125;,</span><br><span class="line">    <span class="attr">logout</span>: <span class="function">() =&gt;</span> &#123; <span class="comment">/* 登出邏輯 */</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> adminActions = &#123;</span><br><span class="line">    <span class="attr">createUser</span>: <span class="function">() =&gt;</span> &#123; <span class="comment">/* 建立使用者邏輯 */</span> &#125;,</span><br><span class="line">    <span class="attr">deleteUser</span>: <span class="function">() =&gt;</span> &#123; <span class="comment">/* 刪除使用者邏輯 */</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">AuthComponent</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleLogin</span> = (<span class="params"></span>) =&gt; authActions.<span class="title function_">login</span>();</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleLogout</span> = (<span class="params"></span>) =&gt; authActions.<span class="title function_">logout</span>();</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleLogin&#125;</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleLogout&#125;</span>&gt;</span>Logout<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">AdminComponent</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleCreateUser</span> = (<span class="params"></span>) =&gt; adminActions.<span class="title function_">createUser</span>();</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleDeleteUser</span> = (<span class="params"></span>) =&gt; adminActions.<span class="title function_">deleteUser</span>();</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleCreateUser&#125;</span>&gt;</span>Create User<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleDeleteUser&#125;</span>&gt;</span>Delete User<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在這個範例中，我們將使用者操作拆分為 authActions 和 adminActions 兩個物件，分別包含不同的職責。AuthComponent 只需要依賴 authActions，AdminComponent 只需要依賴 adminActions，避免了不必要的依賴。<br>一個元件不應該接收過多的 props 或提供過多的方法，而是應該只接收它需要的 props 和提供它需要的方法。這可以提高元件的重用性和可維護性。</p><h2 id="Dependency-Inversion-Principle-DIP-依賴反轉原則"><a href="#Dependency-Inversion-Principle-DIP-依賴反轉原則" class="headerlink" title="Dependency Inversion Principle(DIP) 依賴反轉原則"></a>Dependency Inversion Principle(DIP) 依賴反轉原則</h2><h3 id="什麼是高階模組和低階模組？"><a href="#什麼是高階模組和低階模組？" class="headerlink" title="什麼是高階模組和低階模組？"></a>什麼是高階模組和低階模組？</h3><p>高階模組不應依賴於低階模組，兩者皆應依賴於抽象實體</p><ol><li>高階模組 (High-level Modules)： 這些模組包含應用程式的核心業務邏輯和控制流程。它們定義了應用程式的整體行為，通常比較抽象，關注的是「做什麼」，而不是「怎麼做」。例如：<br>訂單處理模組 (Order Processing Module)<br>使用者驗證模組 (User Authentication Module)<br>報表產生模組 (Report Generation Module)</li><li>低階模組 (Low-level Modules)： 這些模組負責具體的實作細節，例如資料庫存取、檔案操作、網路通訊等。它們關注的是「怎麼做」，而不是「做什麼」。例如：<br>資料庫存取模組 (Database Access Module)<br>檔案系統模組 (File System Module)<br>郵件發送模組 (Email Sending Module)</li></ol><p>以假設 情境： </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 低階模組：PayPal 付款</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PayPalPayment</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ProcessPayment</span>(<span class="params"><span class="built_in">decimal</span> amount</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Processing payment of <span class="subst">&#123;amount&#125;</span> via PayPal.&quot;</span>);</span><br><span class="line">        <span class="comment">// 實際的 PayPal 付款邏輯</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 高階模組：購物車</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ShoppingCart</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> PayPalPayment _payPalPayment; <span class="comment">// 直接依賴 PayPalPayment</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ShoppingCart</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        _payPalPayment = <span class="keyword">new</span> PayPalPayment();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Checkout</span>(<span class="params"><span class="built_in">decimal</span> totalAmount</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _payPalPayment.ProcessPayment(totalAmount);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Order completed.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        ShoppingCart cart = <span class="keyword">new</span> ShoppingCart();</span><br><span class="line">        cart.Checkout(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>符合 DIP 的範例：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 抽象介面：付款方式</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IPaymentProcessor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ProcessPayment</span>(<span class="params"><span class="built_in">decimal</span> amount</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 低階模組：PayPal 付款</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PayPalPayment</span> : <span class="title">IPaymentProcessor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ProcessPayment</span>(<span class="params"><span class="built_in">decimal</span> amount</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Processing payment of <span class="subst">&#123;amount&#125;</span> via PayPal.&quot;</span>);</span><br><span class="line">        <span class="comment">// 實際的 PayPal 付款邏輯</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 低階模組：Stripe 付款</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StripePayment</span> : <span class="title">IPaymentProcessor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ProcessPayment</span>(<span class="params"><span class="built_in">decimal</span> amount</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Processing payment of <span class="subst">&#123;amount&#125;</span> via Stripe.&quot;</span>);</span><br><span class="line">        <span class="comment">// 實際的 Stripe 付款邏輯</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 高階模組：購物車</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ShoppingCart</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IPaymentProcessor _paymentProcessor; <span class="comment">// 依賴介面</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ShoppingCart</span>(<span class="params">IPaymentProcessor paymentProcessor</span>) <span class="comment">// 建構子注入</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        _paymentProcessor = paymentProcessor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Checkout</span>(<span class="params"><span class="built_in">decimal</span> totalAmount</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _paymentProcessor.ProcessPayment(totalAmount);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Order completed.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 使用 PayPal 付款</span></span><br><span class="line">        IPaymentProcessor payPalPayment = <span class="keyword">new</span> PayPalPayment();</span><br><span class="line">        ShoppingCart cart1 = <span class="keyword">new</span> ShoppingCart(payPalPayment);</span><br><span class="line">        cart1.Checkout(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">        Console.WriteLine();</span><br><span class="line"></span><br><span class="line">        IPaymentProcessor stripePayment = <span class="keyword">new</span> StripePayment();</span><br><span class="line">        ShoppingCart cart2 = <span class="keyword">new</span> ShoppingCart(stripePayment);</span><br><span class="line">        cart2.Checkout(<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以前端角度來認識-2"><a href="#以前端角度來認識-2" class="headerlink" title="以前端角度來認識"></a>以前端角度來認識</h3><p>以表單元件的重用，當有一個表單元件需要在不同情境下重用時，例如創建和編輯書籍的表單，它們的 UI 相同但邏輯不同。<br>解決方案: 抽象出一個接口（如onSubmit函數），讓表單元件依賴於這個抽象接口，而不是直接依賴於API請求的實現。<br>抽象出一個接口（如onSubmit函數），讓表單元件依賴於這個抽象接口，而不是直接依賴於API請求的實現。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 抽象接口</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">BookForm</span> = (<span class="params">&#123; onSubmit &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">onSubmit</span>=<span class="string">&#123;onSubmit&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;title&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;bookType&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 創建書籍的邏輯</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">CreateBookForm</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleCreateBook</span> = <span class="keyword">async</span> (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>(e.<span class="property">currentTarget</span>);</span><br><span class="line">      <span class="keyword">await</span> axios.<span class="title function_">post</span>(<span class="string">&quot;https://myapi.com/books&quot;</span>, formData);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err.<span class="property">message</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">BookForm</span> <span class="attr">onSubmit</span>=<span class="string">&#123;handleCreateBook&#125;</span> /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 編輯書籍的邏輯</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">EditBookForm</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleEditBook</span> = <span class="keyword">async</span> (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 編輯書籍的邏輯</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(err.<span class="property">message</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">BookForm</span> <span class="attr">onSubmit</span>=<span class="string">&#123;handleEditBook&#125;</span> /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://adeesh.hashnode.dev/using-the-dependency-inversion-principle-dip-in-react">Using the Dependency Inversion Principle (DIP) in React</a><br><a href="https://dev.to/mikhaelesa/dependency-inversion-principle-in-react-5287">Dependency Inversion Principle in React</a></p>]]></content>
      
      
      <categories>
          
          <category> dotnet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dotnet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LINQ 進階運算子：拓展你的查詢能力</title>
      <link href="/2025/01/24/Net-learning-4/"/>
      <url>/2025/01/24/Net-learning-4/</url>
      
        <content type="html"><![CDATA[<p>除了基礎運算子（如 Where、Select 和 OrderBy），LINQ 還提供了許多進階運算子，用於解決更複雜的查詢需求。以下是一些使用頻率較高的進階運算子，以及它們的功能與應用場景。</p><h2 id="Projection-Operators-投影"><a href="#Projection-Operators-投影" class="headerlink" title="Projection Operators 投影"></a>Projection Operators 投影</h2><h3 id="Select"><a href="#Select" class="headerlink" title="Select"></a>Select</h3><p>範例：投影字串清單中每個字串的第一個字母。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">List&lt;<span class="built_in">string</span>&gt; words = [<span class="string">&quot;an&quot;</span>, <span class="string">&quot;apple&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;day&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> query = words.Select(word =&gt; word.Substring(<span class="number">0</span>, <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> s <span class="keyword">in</span> query)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* This code produces the following output:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    a</span></span><br><span class="line"><span class="comment">    a</span></span><br><span class="line"><span class="comment">    a</span></span><br><span class="line"><span class="comment">    d</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="SelectMany"><a href="#SelectMany" class="headerlink" title="SelectMany"></a>SelectMany</h3><p>SelectMany 將一個集合中的子集合展平（Flatten），生成單一層級的結果序列。它非常適合處理嵌套集合。</p><p>適用場景：需要從多個子集合中提取元素，並將它們組合為單一集合。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">List&lt;<span class="built_in">string</span>&gt; phrases = [<span class="string">&quot;an apple a day&quot;</span>, <span class="string">&quot;the quick brown fox&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> query = <span class="keyword">from</span> phrase <span class="keyword">in</span> phrases</span><br><span class="line">            <span class="keyword">from</span> word <span class="keyword">in</span> phrase.Split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            <span class="keyword">select</span> word;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> s <span class="keyword">in</span> query)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* This code produces the following output:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    an</span></span><br><span class="line"><span class="comment">    apple</span></span><br><span class="line"><span class="comment">    a</span></span><br><span class="line"><span class="comment">    day</span></span><br><span class="line"><span class="comment">    the</span></span><br><span class="line"><span class="comment">    quick</span></span><br><span class="line"><span class="comment">    brown</span></span><br><span class="line"><span class="comment">    fox</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">List&lt;<span class="built_in">string</span>&gt; phrases = [<span class="string">&quot;an apple a day&quot;</span>, <span class="string">&quot;the quick brown fox&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> query = phrases.SelectMany(phrases =&gt; phrases.Split(<span class="string">&#x27; &#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> s <span class="keyword">in</span> query)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* This code produces the following output:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    an</span></span><br><span class="line"><span class="comment">    apple</span></span><br><span class="line"><span class="comment">    a</span></span><br><span class="line"><span class="comment">    day</span></span><br><span class="line"><span class="comment">    the</span></span><br><span class="line"><span class="comment">    quick</span></span><br><span class="line"><span class="comment">    brown</span></span><br><span class="line"><span class="comment">    fox</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>在提供一個，處理多對多關係數據（如學生和他們的選修課程）。<br>範例：攤平學生的課程清單</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> students = <span class="keyword">new</span>[]</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">new</span> &#123; Name = <span class="string">&quot;Alice&quot;</span>, Courses = <span class="keyword">new</span>[] &#123; <span class="string">&quot;Math&quot;</span>, <span class="string">&quot;Physics&quot;</span> &#125; &#125;,</span><br><span class="line">    <span class="keyword">new</span> &#123; Name = <span class="string">&quot;Bob&quot;</span>, Courses = <span class="keyword">new</span>[] &#123; <span class="string">&quot;Biology&quot;</span>, <span class="string">&quot;Chemistry&quot;</span> &#125; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 展平成單一課程清單</span></span><br><span class="line"><span class="keyword">var</span> allCourses = students.SelectMany(s =&gt; s.Courses);</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">&quot;所有課程：&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> course <span class="keyword">in</span> allCourses)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(course);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>輸出結果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">所有課程：</span><br><span class="line"><span class="title class_">Math</span></span><br><span class="line"><span class="title class_">Physics</span></span><br><span class="line"><span class="title class_">Biology</span></span><br><span class="line"><span class="title class_">Chemistry</span></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="集合運算子：Distinct、Union、Intersect、Except"><a href="#集合運算子：Distinct、Union、Intersect、Except" class="headerlink" title="集合運算子：Distinct、Union、Intersect、Except"></a>集合運算子：Distinct、Union、Intersect、Except</h2><p>這些運算子用於對集合執行集合操作（如去重、取交集、聯集和差集）。</p><p>Distinct: 從一個集合中移除所有的重複元素，只保留唯一值。<br>union: 功能是將兩個集合合併，並移除重複的元素，返回一個唯一值集合。<br>Intersect: 方法來找出兩個陣列中共同的元素<br>Except: 快速列出兩個集合的差異項目</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> setA = <span class="keyword">new</span>[] &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> setB = <span class="keyword">new</span>[] &#123; <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> union = setA.Union(setB); <span class="comment">// 聯集</span></span><br><span class="line"><span class="keyword">var</span> intersect = setA.Intersect(setB); <span class="comment">// 交集</span></span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">&quot;聯集：&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="built_in">string</span>.Join(<span class="string">&quot;, &quot;</span>, union));</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">&quot;交集：&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="built_in">string</span>.Join(<span class="string">&quot;, &quot;</span>, intersect));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="量詞運算子：Any-和-All"><a href="#量詞運算子：Any-和-All" class="headerlink" title="量詞運算子：Any 和 All"></a>量詞運算子：Any 和 All</h2><ul><li>Any：判斷集合中是否有任意一個元素滿足條件。</li><li>All：判斷集合中的所有元素是否都滿足條件。</li></ul><p>可以適用於：<br>驗證數據的完整性或一致性。<br>篩選集合中是否包含特定類型的元素。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> products = <span class="keyword">new</span>[]</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">new</span> Product &#123; Name = <span class="string">&quot;Laptop&quot;</span>, Price = <span class="number">160</span> &#125;,</span><br><span class="line">    <span class="keyword">new</span> Product &#123; Name = <span class="string">&quot;Mouse&quot;</span>, Price = <span class="number">50</span> &#125;,</span><br><span class="line">    <span class="keyword">new</span> Product &#123; Name = <span class="string">&quot;Keyboard&quot;</span>, Price = <span class="number">75</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">bool</span> hasExpensiveProduct = products.Any(p =&gt; p.Price &gt; <span class="number">150</span>); </span><br><span class="line"><span class="built_in">bool</span> allProductsHaveName = products.All(p =&gt; !<span class="built_in">string</span>.IsNullOrEmpty(p.Name)); <span class="comment">// 是否所有商品都有名稱</span></span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">$&quot;有價格超過 150 的商品嗎？<span class="subst">&#123;hasExpensiveProduct&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;所有商品都有名稱嗎？<span class="subst">&#123;allProductsHaveName&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 有價格超過 150 的商品嗎？True</span></span><br><span class="line"><span class="comment">// 所有商品都有名稱嗎？True</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="分組運算子：GroupBy"><a href="#分組運算子：GroupBy" class="headerlink" title="分組運算子：GroupBy"></a>分組運算子：GroupBy</h2><p>GroupBy 根據鍵（Key）將集合中的元素分組，每個分組包含鍵和值集合。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Product&gt; products = GetProductList();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = <span class="keyword">from</span> p <span class="keyword">in</span>  products</span><br><span class="line">             <span class="keyword">group</span> p <span class="keyword">by</span> p.<span class="function">Category <span class="keyword">into</span> c</span></span><br><span class="line"><span class="function">             <span class="title">select</span> (<span class="params">Category: c.Key , Products: c</span>)</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">foreach</span>(<span class="keyword">var</span> orderGroup <span class="keyword">in</span> result)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Products in <span class="subst">&#123;orderGroup.Category&#125;</span> category:&quot;</span>);</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">var</span> product <span class="keyword">in</span> orderGroup.Products)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;\t<span class="subst">&#123;product&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://learn.microsoft.com/zh-tw/dotnet/csharp/linq/standard-query-operators/projection-operations">learn.microsoft</a><br><a href="https://github.com/dotnet/try-samples/blob/main/101-linq-samples/index.md">101 LINQ Samples</a></p>]]></content>
      
      
      <categories>
          
          <category> dotnet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dotnet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入淺出 C# LINQ：讓查詢語法變得更簡單</title>
      <link href="/2025/01/18/Net-learning-3/"/>
      <url>/2025/01/18/Net-learning-3/</url>
      
        <content type="html"><![CDATA[<p>C# 的 LINQ (Language Integrated Query，語言整合查詢) 是一個非常強大的功能，它讓你可以使用類似 SQL 的語法來查詢各種不同的資料來源。這意味著你可以用統一的方式來處理資料，無論資料是來自陣列、列表、資料庫、XML 或其他任何支援 LINQ 的來源。</p><h2 id="LINQ-的兩種語法："><a href="#LINQ-的兩種語法：" class="headerlink" title="LINQ 的兩種語法："></a>LINQ 的兩種語法：</h2><p>LINQ 有兩種主要的語法形式：</p><ul><li>查詢語法 (Query Syntax)： 看起來很像 SQL 語法，使用 from、where、select 等關鍵字。這種語法比較易讀，尤其是在處理複雜的查詢時。</li><li>方法語法 (Method Syntax)： 使用擴充方法 (Extension Methods) 來表示查詢運算子。這種語法更簡潔，也更靈活。簡單的查詢或需要鏈式操作時，通常使用方法語法更為方便。</li></ul><span id="more"></span><h2 id="基本範例："><a href="#基本範例：" class="headerlink" title="基本範例："></a>基本範例：</h2><p>所有的 LINQ 查詢作業都包含三個不同的動作：<br>  取得資料來源。<br>  建立查詢。<br>  執行查詢。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 1. 資料來源</span></span><br><span class="line"><span class="built_in">int</span>[] numbers = [ <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 建立查詢</span></span><br><span class="line"><span class="comment">// numQuery is an IEnumerable&lt;int&gt;</span></span><br><span class="line"><span class="keyword">var</span> numQuery = <span class="function"><span class="keyword">from</span> num <span class="keyword">in</span> numbers</span></span><br><span class="line"><span class="function">               <span class="title">where</span> (<span class="params">num % <span class="number">2</span></span>)</span> == <span class="number">0</span></span><br><span class="line">               <span class="keyword">select</span> num;</span><br><span class="line"><span class="comment">// 建立查詢 (方法語法)</span></span><br><span class="line"><span class="comment">// var numQuery = numbers.Where(num =&gt; (num % 2) == 0); </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 執行查詢</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> num <span class="keyword">in</span> numQuery)</span><br><span class="line">&#123;</span><br><span class="line">    Console.Write(<span class="string">&quot;&#123;0,1&#125; &quot;</span>, num);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>重點： 建立查詢的步驟並不會實際執行查詢，它只是定義了查詢的邏輯。查詢本身並不會立即從資料來源中提取任何資料。</p><h3 id="對比範例，不用-LINQ-的情況"><a href="#對比範例，不用-LINQ-的情況" class="headerlink" title="對比範例，不用 LINQ 的情況"></a>對比範例，不用 LINQ 的情況</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">List&lt;<span class="built_in">int</span>&gt; numbers = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span> &#125;;</span><br><span class="line">List&lt;<span class="built_in">int</span>&gt; evenNumbers = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">int</span> num <span class="keyword">in</span> numbers)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (num % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        evenNumbers.Add(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(<span class="built_in">string</span>.Join(<span class="string">&quot;, &quot;</span>, evenNumbers)); <span class="comment">// Output: 0, 2, 4, 6</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查詢語法的基本結構"><a href="#查詢語法的基本結構" class="headerlink" title="查詢語法的基本結構"></a>查詢語法的基本結構</h2><p>在 LINQ 查詢中，語法的開頭和結尾有著固定的規則：</p><ul><li><p>開頭<br>LINQ 查詢的開頭必須使用 from 子句。<br>from 子句的作用：定義資料來源（數據源）以及範圍變數（即用於遍歷數據的臨時變數）。<br>通常，範圍變數會在接下來的子句中使用，例如 where、select 或 orderby。</p></li><li><p>查詢過程中的子句<br>LINQ 支援許多類似 SQL 的子句，例如：</p><ul><li>Where： 根據指定的條件篩選序列中的元素。</li><li>Select： 將序列中的每個元素轉換成新的形式。你可以選擇元素的某些屬性，或者進行計算。</li><li>OrderBy： 以遞增順序排序序列中的元素。</li></ul></li></ul><h3 id="查詢語法的結尾：group-與-select-子句"><a href="#查詢語法的結尾：group-與-select-子句" class="headerlink" title="查詢語法的結尾：group 與 select 子句"></a>查詢語法的結尾：group 與 select 子句</h3><p>在 LINQ 查詢中，每個查詢的結尾必須包含 group 或 select 子句：</p><ol><li>select 子句</li></ol><ul><li>作用：將每個範圍變數轉換為新的形式或提取所需的屬性。</li><li>結果類型：通常是 <code>IEnumerable&lt;T&gt;</code>，其中 T 是返回值的類型。</li></ul><ol start="2"><li>group 子句</li></ol><ul><li>作用：將範圍變數根據某個鍵值（Key）進行分組。</li><li>結果類型：會產生一個分組後的序列，每個分組包含一個鍵和一組元素。</li></ul><p>使用 group by 分組，以下是使用 group by 子句進行分組的範例：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] countries = &#123; <span class="string">&quot;France&quot;</span>, <span class="string">&quot;Germany&quot;</span>, <span class="string">&quot;Finland&quot;</span>, <span class="string">&quot;India&quot;</span>, <span class="string">&quot;Italy&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根據國家名稱的第一個字母分組</span></span><br><span class="line"><span class="keyword">var</span> groupedCountries = <span class="keyword">from</span> country <span class="keyword">in</span> countries</span><br><span class="line">                       <span class="keyword">group</span> country <span class="keyword">by</span> country[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> <span class="keyword">group</span> <span class="keyword">in</span> groupedCountries)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;Key: <span class="subst">&#123;<span class="keyword">group</span>.Key&#125;</span>&quot;</span>); <span class="comment">// 群組鍵 (國家名稱的首字母)</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> country <span class="keyword">in</span> <span class="keyword">group</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot; - <span class="subst">&#123;country&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在前面的章節中，我們已經了解了 LINQ 的兩種語法形式和基本結構：</p><ul><li>查詢語法提供類似 SQL 的直觀寫法</li><li>方法語法更加簡潔靈活</li><li>每個 LINQ 查詢都包含三個關鍵步驟：取得資料來源、建立查詢、執行查詢</li></ul><h2 id="LINQ-的延遲執行-Deferred-Execution"><a href="#LINQ-的延遲執行-Deferred-Execution" class="headerlink" title="LINQ 的延遲執行 (Deferred Execution)"></a>LINQ 的延遲執行 (Deferred Execution)</h2><p>在 LINQ 中，查詢並不會在宣告時立即執行，而是等到你開始列舉查詢結果時（例如在 foreach 迴圈中）才會實際執行。這種特性被稱為延遲執行（Deferred Execution）。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numbers = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt; &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> query = numbers.Where(n =&gt; n &gt; <span class="number">2</span>); <span class="comment">// 定義查詢</span></span><br><span class="line"></span><br><span class="line">numbers.Add(<span class="number">6</span>); <span class="comment">// 修改原數據源</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> num <span class="keyword">in</span> query) <span class="comment">// 查詢在這裡執行</span></span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(num); <span class="comment">// 輸出：3, 4, 5, 6</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="惰性求值（Lazy-Evaluation）"><a href="#惰性求值（Lazy-Evaluation）" class="headerlink" title="惰性求值（Lazy Evaluation）"></a>惰性求值（Lazy Evaluation）</h3><p>惰性求值（Lazy Evaluation）與 LINQ 的延遲執行（Deferred Execution）關係：<br>在 C# 中，惰性求值（Lazy Evaluation）和延遲執行（Deferred Execution）基本上是同義的，尤其是在 LINQ 的背景下。這兩個術語都描述了查詢在需要時才被執行的行為，而不是在查詢定義時立即執行</p><ul><li>Lazy Evaluation 的靈活性雖然很高，但在某些場景下可能導致效能問題，特別是在多次迭代同一查詢時。以下是常見的陷阱與解決方案：</li></ul><ol><li>重複執行查詢<br>如果對同一個 LINQ 查詢進行多次操作，會導致查詢邏輯被重複執行。</li></ol><p>範例：<br>程式中，query 在每次 foreach 時都會重新執行過濾邏輯，對於大型集合來說可能導致效能下降。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numbers = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt; &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定義查詢</span></span><br><span class="line"><span class="keyword">var</span> query = numbers.Where(n =&gt; n &gt; <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重複遍歷查詢結果</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> num <span class="keyword">in</span> query) &#123; Console.WriteLine(num); &#125;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;---&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> num <span class="keyword">in</span> query) &#123; Console.WriteLine(num); &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以改使用，即時執行</p><p>如果查詢結果不需要動態更新，可以使用 <code>ToList()</code> 或 <code>ToArray()</code> 等方法，將查詢結果緩存到集合中：</p><ul><li>使用 <code>ToList()</code> 來觸發 <strong>eager query execution</strong>（急切查詢執行），也就是查詢會立即執行並且結果會被快取下來。</li><li>當使用 <code>ToList()</code> 時，LINQ 查詢會在 <code>ToList()</code> 調用的那一刻就立刻執行，並且將查詢結果儲存到一個列表中。</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cachedQuery = query.ToList(); <span class="comment">// 將結果存入清單</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> num <span class="keyword">in</span> cachedQuery) &#123; Console.WriteLine(num); &#125;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> num <span class="keyword">in</span> cachedQuery) &#123; Console.WriteLine(num); &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="如何選擇-Lazy-Execution-或-Eager-Execution"><a href="#如何選擇-Lazy-Execution-或-Eager-Execution" class="headerlink" title="如何選擇 Lazy Execution 或 Eager Execution?"></a>如何選擇 Lazy Execution 或 Eager Execution?</h3><ol><li>Lazy Execution<br>懶性執行是 LINQ 的預設行為。查詢定義時不會執行，只有在真正需要查詢結果時（如遍歷或調用終結操作）才執行。這種方式的優勢是：</li></ol><ul><li>高效處理大數據源：僅在需要時才進行查詢計算。</li><li>支持動態數據源：查詢結果會隨著數據源的變化而更新。</li></ul><p>適用情境：</p><ul><li>查詢結果不需要頻繁重複使用。</li><li>數據源可能在查詢執行前發生變化（例如數據被添加、刪除或修改）。</li></ul><ol start="2"><li>Eager Execution<br>急切執行會立即執行查詢並將結果存儲到記憶體中（如使用 <code>ToList()</code> 或 <code>ToArray()</code>）。這種方式的優勢是：</li></ol><ul><li>避免重複執行查詢邏輯：特別是當需要多次使用查詢結果時，可以提升效能。</li><li>結果穩定：查詢結果不受數據源變更影響，適合處理不可預測的數據變化或並發情境。<br>適用情境：</li><li>需要多次使用查詢結果，或避免重複計算開銷。</li><li>數據源可能因其他操作發生變化（例如多線程環境）。</li></ul><h4 id="進一步，詢問-AI-工具來提供範例區分-2-者使用情境"><a href="#進一步，詢問-AI-工具來提供範例區分-2-者使用情境" class="headerlink" title="進一步，詢問 AI 工具來提供範例區分 2 者使用情境"></a>進一步，詢問 AI 工具來提供範例區分 2 者使用情境</h4><ol><li>商品篩選功能（Lazy Evaluation）</li></ol><p>功能描述：<br>假設我們在開發一個電子商務平台，頁面上有商品清單，並且允許用戶使用篩選器（例如「價格高於某個門檻」）動態查看符合條件的商品。<br>在這種場景中：<br>需求的重點：數據源可能隨時變更（例如新增、刪除商品），篩選結果需要即時反映最新的狀態。<br>適用解決方案：選擇「懶性執行」，讓查詢邏輯在每次迭代結果時重新評估數據源，確保結果始終是最新的。</p><ul><li>數據變更頻繁：例如，後端通過 API 新增商品，或者某些商品的價格被更新。</li><li>結果不需要重複使用：查詢邏輯只需要執行一次，為用戶提供實時的篩選結果即可。</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> products = <span class="keyword">new</span> List&lt;Product&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">new</span> Product &#123; Name = <span class="string">&quot;Laptop&quot;</span>, Price = <span class="number">150</span> &#125;,</span><br><span class="line">    <span class="keyword">new</span> Product &#123; Name = <span class="string">&quot;Mouse&quot;</span>, Price = <span class="number">50</span> &#125;,</span><br><span class="line">    <span class="keyword">new</span> Product &#123; Name = <span class="string">&quot;Keyboard&quot;</span>, Price = <span class="number">75</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定義篩選條件查詢</span></span><br><span class="line"><span class="keyword">var</span> expensiveProducts = products.Where(p =&gt; p.Price &gt; <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用戶動態新增商品</span></span><br><span class="line">products.Add(<span class="keyword">new</span> Product &#123; Name = <span class="string">&quot;Monitor&quot;</span>, Price = <span class="number">200</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在前端頁面看到的結果</span></span><br><span class="line">Console.WriteLine(<span class="string">&quot;篩選結果：&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> product <span class="keyword">in</span> expensiveProducts)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;product.Name&#125;</span> - $<span class="subst">&#123;product.Price&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>生成商品報表功能（ Eager Execution）</li></ol><p>功能描述：<br>另一個需求是生成商品的銷售報表，例如篩選出價格高於某個門檻的商品，並將結果存儲為報表文件或傳遞到其他業務模組進行處理。<br>在這種場景中：<br>需求的重點：查詢結果應保持穩定，不受數據源後續變更影響。<br>適用解決方案：選擇「急切執行」，將查詢結果存儲到集合中（如 <code>List&lt;T&gt;</code>），避免查詢邏輯重複執行，並確保報表數據的穩定性。</p><ul><li>數據變更不可預測：例如，商品清單可能會因用戶操作（新增、刪除）或外部系統影響（同步失敗）而改變。</li><li>結果需要重複使用：生成報表後，數據可能會被多次輸出或傳遞，存入集合可以避免多次執行查詢邏輯。</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> products = <span class="keyword">new</span> List&lt;Product&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">new</span> Product &#123; Name = <span class="string">&quot;Laptop&quot;</span>, Price = <span class="number">150</span> &#125;,</span><br><span class="line">    <span class="keyword">new</span> Product &#123; Name = <span class="string">&quot;Mouse&quot;</span>, Price = <span class="number">50</span> &#125;,</span><br><span class="line">    <span class="keyword">new</span> Product &#123; Name = <span class="string">&quot;Keyboard&quot;</span>, Price = <span class="number">75</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定義並執行查詢</span></span><br><span class="line"><span class="keyword">var</span> reportData = products.Where(p =&gt; p.Price &gt; <span class="number">100</span>).ToList(); </span><br><span class="line"></span><br><span class="line"><span class="comment">// 模擬後續新增商品</span></span><br><span class="line">products.Add(<span class="keyword">new</span> Product &#123; Name = <span class="string">&quot;Monitor&quot;</span>, Price = <span class="number">200</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成報表時使用緩存結果</span></span><br><span class="line">Console.WriteLine(<span class="string">&quot;\n報表篩選結果：&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> product <span class="keyword">in</span> reportData)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;product.Name&#125;</span> - $<span class="subst">&#123;product.Price&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>LINQ 提供了一種簡潔、強大的方式來查詢和操作各種資料來源。透過本篇文章，學習了 LINQ 的基本語法、查詢結構和延遲執行的概念。在後續的文章中，我們將會深入探討 LINQ 的進階運算子和更複雜的應用場景。</p><p><a href="https://learn.microsoft.com/zh-tw/dotnet/csharp/linq/get-started/introduction-to-linq-queries">C# 的 LINQ 查詢簡介</a><br><a href="https://github.com/dotnet/try-samples/blob/main/101-linq-samples/index.md">101 LINQ Samples</a></p>]]></content>
      
      
      <categories>
          
          <category> dotnet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dotnet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# - class 建立與使用</title>
      <link href="/2025/01/15/Net-learning-2/"/>
      <url>/2025/01/15/Net-learning-2/</url>
      
        <content type="html"><![CDATA[<p>class 是物件導向程式設計 (OOP) 語言的核心功能。它通過邏輯性地組織方法和屬性，來表示並封裝特定的問題概念。</p><h2 id="建立-class-與-instance"><a href="#建立-class-與-instance" class="headerlink" title="建立 class 與 instance"></a>建立 class 與 instance</h2><p>假設要建立一 person 的 class </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">Person person = <span class="keyword">new</span> Person();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="新增-Method-與-property"><a href="#新增-Method-與-property" class="headerlink" title="新增 Method 與 property"></a>新增 Method 與 property</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> LastName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetFullName</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;John Smith&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 建立 Person 類別的實例</span></span><br><span class="line">        Person person = <span class="keyword">new</span> Person();</span><br><span class="line">        <span class="comment">// 呼叫方法</span></span><br><span class="line">        animal.GetFullName();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="屬性-Properties-的-get-和-set-概念"><a href="#屬性-Properties-的-get-和-set-概念" class="headerlink" title="屬性(Properties)的 get 和 set 概念"></a>屬性(Properties)的 get 和 set 概念</h3><ol><li>get (讀取)</li></ol><ul><li>允許讀取屬性的值</li><li>當程式碼存取屬性值時，就會調用 get。</li><li>例如：當我們寫 <code>string sound = animal.Sound;</code> 時，就會調用 Sound 屬性的 get 存取器。</li><li>get 存取器必須返回與屬性相同類型的值</li></ul><ol start="2"><li>set (寫入)</li></ol><ul><li>允許賦值給屬性的值。</li><li>當程式碼賦值給屬性時，就會調用 set 存取器。</li><li>例如：當我們寫 <code>animal.Sound = &quot;Hiii&quot;;</code> 時，就會調用 Sound 屬性的 set。</li><li>set 有一個隱含的 value 參數，它代表賦予屬性的新值。在範例 <code>set &#123; sound = value; &#125;</code> 中，<code>value</code> 就是 <code>&quot;Hiii&quot;</code>。</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 1. 自動實作屬性寫法</span></span><br><span class="line">    <span class="comment">// 適合用在單純需要存取資料,不需要額外邏輯的情況</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 完整實作屬性寫法</span></span><br><span class="line">    <span class="comment">// 允許我們完全控制屬性的讀取和寫入邏輯。透過明確地定義 get 和 set，可以在存取屬性時執行額外的程式碼，例如驗證、轉換、通知等。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> firstName; <span class="comment">// 背景欄位</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FirstName   <span class="comment">// 屬性</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">return</span> firstName; &#125;<span class="comment">// 讀取值</span></span><br><span class="line">        <span class="keyword">set</span> &#123; firstName = <span class="keyword">value</span>; &#125;<span class="comment">// 設定值</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用方式：</span></span><br><span class="line">Person person = <span class="keyword">new</span> Person();</span><br><span class="line">person.FirstName = <span class="string">&quot;Hiii&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> nameData = person.FirstName;<span class="comment">// 調用 get</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="在-get-或-set-中加入額外邏輯"><a href="#在-get-或-set-中加入額外邏輯" class="headerlink" title="在 get 或 set 中加入額外邏輯"></a>在 get 或 set 中加入額外邏輯</h3><p>實現資料驗證、格式轉換、通知其他物件等功能。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ProductExample</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Product</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 私有字段</span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> name;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">decimal</span> price;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> stock;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 屬性 - 商品名稱</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Name</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> name; &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrWhiteSpace(<span class="keyword">value</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;Product name cannot be null or empty.&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                name = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 屬性 - 價格</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">decimal</span> Price</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> price; &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &lt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;Price cannot be negative.&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                price = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 屬性 - 庫存數量</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Stock</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> stock; &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &lt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(<span class="string">&quot;Stock cannot be negative.&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                stock = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只讀屬性 - 總價 (計算屬性)</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">decimal</span> TotalValue</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> price * stock; &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法 - 更新庫存</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateStock</span>(<span class="params"><span class="built_in">int</span> quantity</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (quantity &lt; <span class="number">0</span> &amp;&amp; Math.Abs(quantity) &gt; stock)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="string">&quot;Cannot reduce stock below zero.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            stock += quantity;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 建立 Product 物件</span></span><br><span class="line">                Product product = <span class="keyword">new</span> Product</span><br><span class="line">                &#123;</span><br><span class="line">                    Name = <span class="string">&quot;Laptop&quot;</span>,</span><br><span class="line">                    Price = <span class="number">1200.50</span>m,</span><br><span class="line">                    Stock = <span class="number">10</span></span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 顯示初始資料</span></span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;Product: <span class="subst">&#123;product.Name&#125;</span>&quot;</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;Price: <span class="subst">&#123;product.Price:C&#125;</span>&quot;</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;Stock: <span class="subst">&#123;product.Stock&#125;</span>&quot;</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;Total Value: <span class="subst">&#123;product.TotalValue:C&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 更新庫存</span></span><br><span class="line">                product.UpdateStock(<span class="number">-3</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;\nAfter selling 3 units:&quot;</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;Stock: <span class="subst">&#123;product.Stock&#125;</span>&quot;</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;Total Value: <span class="subst">&#123;product.TotalValue:C&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 嘗試設定無效價格</span></span><br><span class="line">                product.Price = <span class="number">-100</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;\nError: <span class="subst">&#123;ex.Message&#125;</span>&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="constructor-建構子"><a href="#constructor-建構子" class="headerlink" title="constructor 建構子"></a>constructor 建構子</h2><p>在建立類別的新實例 (instance) 時自動執行。它的主要目的是初始化物件的狀態，確保物件在建立後立即處於可用狀態。<br> <strong>建構子的宣告：</strong><br>    - <strong>名稱：</strong> <code>Person</code>（必須與類別名稱相同）。<br>    - <strong>關鍵字：</strong> 使用 <code>public</code> 讓建構子可以從外部訪問。<br>    - <strong>參數：</strong> 在小括號內定義建構子所需的參數（此例中為 <code>string firstName</code> 和 <code>string lastName</code>）。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 屬性定義</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> LastName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 建構子定義</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span>(<span class="params"><span class="built_in">string</span> firstName, <span class="built_in">string</span> lastName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 將傳入的參數值賦值給屬性</span></span><br><span class="line">        FirstName = firstName;</span><br><span class="line">        LastName = lastName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法定義</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Introduce</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Hi, my name is <span class="subst">&#123;FirstName&#125;</span> <span class="subst">&#123;LastName&#125;</span>.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 使用建構子創建 Person 類別的實例</span></span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="string">&quot;John&quot;</span>, <span class="string">&quot;Doe&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 呼叫方法</span></span><br><span class="line">        person.Introduce();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="建構子多載-Constructor-Overloading"><a href="#建構子多載-Constructor-Overloading" class="headerlink" title="建構子多載 (Constructor Overloading)"></a>建構子多載 (Constructor Overloading)</h3><p>這些建構子可以接受不同數量的參數或不同類型的參數，以提供不同的初始化方式。</p><p>另外，如果類別沒有明確定義任何建構子，C# 編譯器會自動產生一個預設建構子 (Default Constructor) 或無參數建構子 (Parameterless Constructor)。 這個預設建構子不接受任何參數，並且會將物件的欄位初始化為其預設值 (例如，int 為 0，string 為 null)。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 建構子 1：接受姓名和年齡</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span>(<span class="params"><span class="built_in">string</span> name, <span class="built_in">int</span> age</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Name = name;</span><br><span class="line">        Age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 建構子 2：只接受姓名 (使用建構子鏈結呼叫建構子 1)</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">Person</span>(<span class="params"><span class="built_in">string</span> personName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Name = personName;</span><br><span class="line">        Age = <span class="number">0</span>; <span class="comment">// 明確設定年齡為 0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 建構子 3：無參數建構子</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Name = <span class="string">&quot;Unknown&quot;</span>;</span><br><span class="line">        Age = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Person person1 = <span class="keyword">new</span> Person(<span class="string">&quot;John&quot;</span>, <span class="number">30</span>); <span class="comment">// 使用建構子 1</span></span><br><span class="line">        Person person2 = <span class="keyword">new</span> Person(<span class="string">&quot;Jane&quot;</span>);    <span class="comment">// 使用建構子 2</span></span><br><span class="line">        Person person3 = <span class="keyword">new</span> Person();        <span class="comment">// 使用建構子 3</span></span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;person1.Name&#125;</span>, <span class="subst">&#123;person1.Age&#125;</span>&quot;</span>); <span class="comment">// 輸出：John, 30</span></span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;person2.Name&#125;</span>, <span class="subst">&#123;person2.Age&#125;</span>&quot;</span>); <span class="comment">// 輸出：Jane, 0</span></span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;person3.Name&#125;</span>, <span class="subst">&#123;person3.Age&#125;</span>&quot;</span>); <span class="comment">// 輸出：Unknown, -1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>說明：<br>在這個範例中，Person 類別定義了三個建構子：一個接受姓名和年齡，一個只接受姓名，還有一個無參數建構子。</p><ul><li>注意，Constructor Overloading 是根據參數的 數量 和 類型 來區分的，而不是參數名稱。因此，若建構子具有相同的參數類型和數量，編譯器會認為它們是相同的，這就會導致編譯錯誤，因為它無法選擇其中一個構造函數來調用。</li></ul><p>參考資料：<br><a href="https://dotnetcademy.net/Learn/2036/Pages/13">dotnetcademy</a><br><a href="https://learn.microsoft.com/zh-tw/shows/c-fundamentals-for-absolute-beginners/17">適用於初學者的 C# 基礎知識</a></p>]]></content>
      
      
      <categories>
          
          <category> dotnet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dotnet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 變數與型別</title>
      <link href="/2025/01/12/Net-learning-1/"/>
      <url>/2025/01/12/Net-learning-1/</url>
      
        <content type="html"><![CDATA[<p>新的一年有機會在公司內部接觸一些些後端語言，公司的後端是 ASP.Net，所以開啟了 C# 學習之路<br>最最初階的學習資源，目前是來自：<br><a href="https://dotnetcademy.net/Learn/2036/Pages/13">dotnetcademy</a><br><a href="https://learn.microsoft.com/zh-tw/shows/c-fundamentals-for-absolute-beginners/17">適用於初學者的 C# 基礎知識</a></p><h2 id="宣告變數，需指定其類型並提供名稱"><a href="#宣告變數，需指定其類型並提供名稱" class="headerlink" title="宣告變數，需指定其類型並提供名稱"></a>宣告變數，需指定其類型並提供名稱</h2><p>C# 是 強型別語言 (Strongly Typed Language)，這表示每個變數 (Variable) 或常數 (Constant) 在使用之前都必須先明確定義其型別 (Type)。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> greeting;</span><br><span class="line"><span class="built_in">int</span> a, b, c;</span><br><span class="line">List&lt;<span class="built_in">double</span>&gt; xs;</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="Value-Types-與-Reference-Types"><a href="#Value-Types-與-Reference-Types" class="headerlink" title="Value Types 與 Reference Types"></a>Value Types 與 Reference Types</h2><h3 id="Value-Types"><a href="#Value-Types" class="headerlink" title="Value Types"></a>Value Types</h3><ul><li>直接存放值本身於變數的記憶體中。</li><li>當將 value type 變數的值指派給另一個變數時，是將該值<strong>複製</strong>一份，兩個變數之間完全獨立。</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">int</span> b = a;  <span class="comment">// b 複製了 a 的值，此時 b = 1</span></span><br><span class="line">b = <span class="number">2</span>;      <span class="comment">// 修改 b 的值，不影響 a</span></span><br><span class="line">Console.WriteLine(a); <span class="comment">// 輸出 1</span></span><br><span class="line">Console.WriteLine(b); <span class="comment">// 輸出 2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>型別</th><th>說明</th></tr></thead><tbody><tr><td><code>bool</code></td><td>布林值（<code>true</code> 或 <code>false</code>）</td></tr><tr><td><code>byte</code></td><td>8 位元整數</td></tr><tr><td><code>int</code></td><td>32 位元整數</td></tr><tr><td><code>decimal</code></td><td>高精度小數</td></tr><tr><td><code>double</code></td><td>雙精度浮點數</td></tr><tr><td><code>char</code></td><td>單一 Unicode 字元</td></tr><tr><td><code>struct</code></td><td>結構</td></tr><tr><td><code>enum</code></td><td>列舉</td></tr></tbody></table><h3 id="Reference-Types"><a href="#Reference-Types" class="headerlink" title="Reference Types"></a>Reference Types</h3><ul><li>存放的是記憶體中值的位址，而非值本身。</li><li>如果將 Reference Types 的變數指派給另一個變數，兩者會<strong>指向同一個記憶體位址</strong>，因此修改一個變數會影響另一個。</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person person1 = <span class="keyword">new</span> Person &#123; Name = <span class="string">&quot;Amy&quot;</span> &#125;;</span><br><span class="line">Person person2 = person1; <span class="comment">// person2 指向與 person1 相同的記憶體位置</span></span><br><span class="line">person2.Name = <span class="string">&quot;Nina&quot;</span>;    <span class="comment">// 修改 person2 的 Name</span></span><br><span class="line">Console.WriteLine(person1.Name); <span class="comment">// 輸出 Nina，因為兩者指向相同的物件</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>型別</th><th>說明</th></tr></thead><tbody><tr><td><code>string</code></td><td>字串（特例：不可變）</td></tr><tr><td><code>array</code></td><td>陣列</td></tr><tr><td><code>object</code></td><td>所有型別的基底型別</td></tr><tr><td><code>class</code></td><td>類別</td></tr><tr><td><code>interface</code></td><td>介面</td></tr><tr><td><code>delegate</code></td><td>委派</td></tr><tr><td><code>dynamic</code></td><td>動態型別</td></tr></tbody></table><h3 id="字串的特殊性"><a href="#字串的特殊性" class="headerlink" title="字串的特殊性"></a><strong>字串的特殊性</strong></h3><p>雖然 <code>string</code> 是參考型別，但它有一個特性：<strong>不可變性 (Immutable)</strong>。這表示：</p><ul><li>字串的值一旦建立就無法改變。</li><li>當改變字串的值時，其實是建立了一個新字串，並在新的記憶體位置中儲存。</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">string</span> a = <span class="string">&quot;Amy&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> b = a;  <span class="comment">// b 指向與 a 相同的值 &quot;Amy&quot;</span></span><br><span class="line">b = <span class="string">&quot;Nina&quot;</span>;    <span class="comment">// b 創建了一個新字串 &quot;Nina&quot;，與 a 無關</span></span><br><span class="line">Console.WriteLine(a); <span class="comment">// 輸出 Amy</span></span><br><span class="line">Console.WriteLine(b); <span class="comment">// 輸出 Nina</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Primitive-Types"><a href="#Primitive-Types" class="headerlink" title="Primitive Types"></a>Primitive Types</h2><ul><li>Value Types vs Reference Types 告訴我們數據在內存中如何存儲和傳遞</li><li>Primitive Types 則表示這些是語言內建的基本類型</li></ul><table><thead><tr><th>基本型別</th><th>別名型別</th></tr></thead><tbody><tr><td>sbyte</td><td>System.SByte</td></tr><tr><td>byte</td><td>System.Byte</td></tr><tr><td>short</td><td>System.Int16</td></tr><tr><td>ushort</td><td>System.UInt16</td></tr><tr><td>int</td><td>System.Int32</td></tr><tr><td>uint</td><td>System.UInt32</td></tr><tr><td>long</td><td>System.Int64</td></tr><tr><td>ulong</td><td>System.UInt64</td></tr><tr><td>char</td><td>System.Char</td></tr><tr><td>float</td><td>System.Single</td></tr><tr><td>double</td><td>System.Double</td></tr><tr><td>bool</td><td>System.Boolean</td></tr><tr><td>decimal</td><td>System.Decimal</td></tr></tbody></table><ul><li>注意：字串在 C# .NET 中並非基本型別，而是 System.String 類別的物件，屬於參考型別。而字串變數儲存的是字串在記憶體中的參考，並具有不可變性，此設計主要考量記憶體效率和彈性。</li></ul><h2 id="const-與-var"><a href="#const-與-var" class="headerlink" title="const 與 var"></a>const 與 var</h2><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><p>常數是編譯期間已知且在程式執行期間不會改變的不可變值。常數透過 const 關鍵字來宣告，並且必須在宣告時進行初始化。</p><ul><li>類型限制：C# 只允許內建型別（如數字類型、字串）作為常數。自定義型別（如類別、結構和陣列）無法作為常數，這些型別必須使用 readonly 修飾符來達到不可變效果。</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Calendar</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">int</span> Months = <span class="number">12</span>; <span class="comment">// 常數初始化為 12</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="const-不能賦予-class-實例？"><a href="#const-不能賦予-class-實例？" class="headerlink" title="const 不能賦予 class 實例？"></a>const 不能賦予 class 實例？</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onst Person person = <span class="keyword">new</span> Person(); <span class="comment">// 編譯錯誤</span></span><br></pre></td></tr></table></figure><p>因為 new Person() 是一個執行時創建的對象，無法在編譯期間確定。因此，無法將它賦值給 const。</p><p>如果想要保存某個物件或類別的實例，但又希望它不可變，應該使用 readonly，而不是 const。<br>readonly 變數在物件初始化時（例如在建構函數中）可以賦值，但一旦設定後便無法更改。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">readonly</span> Person person = <span class="keyword">new</span> Person(<span class="string">&quot;John&quot;</span>); <span class="comment">// 使用 readonly</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DisplayPerson</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(person.Name); <span class="comment">// 這個值是不可變的</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="var"><a href="#var" class="headerlink" title="var"></a>var</h3><p>主要用途是語言特性中的類型推斷。這意味著，當你使用 var 宣告變數時，編譯器會根據變數的初始值自動推斷出其類型，而不需要明確地指定變數的類型。</p><h3 id="1-使用-var-的基本示例"><a href="#1-使用-var-的基本示例" class="headerlink" title="1. 使用 var 的基本示例"></a>1. <strong>使用 <code>var</code> 的基本示例</strong></h3><p>假設你有以下程式碼，這是傳統的變數宣告方式：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> one = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">string</span> two = <span class="string">&quot;two&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在這裡，我們已經明確指定了 <code>one</code> 的類型為 <code>int</code>，<code>two</code> 的類型為 <code>string</code>。如果你使用 <code>var</code>，則可以省略顯式指定類型，讓編譯器自動推斷：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> one = <span class="number">1</span>;   <span class="comment">// 編譯器會推斷 one 是 int</span></span><br><span class="line"><span class="keyword">var</span> two = <span class="string">&quot;two&quot;</span>; <span class="comment">// 編譯器會推斷 two 是 string</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>這仍然是有效的 C# 程式碼，因為編譯器會根據賦值來推斷變數的類型。在這個例子中，<code>one</code> 的值是 <code>1</code>，編譯器推斷它是 <code>int</code>；<code>two</code> 的值是字串 <code>&quot;two&quot;</code>，所以編譯器推斷它是 <code>string</code>。</p><ol><li>使用 <code>var</code> 可以簡化程式碼，減少重複寫類型名稱的次數，特別是在處理泛型類型時。例如，以下是兩種不同寫法的比較：</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ConcurrentDictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt; dictionary = <span class="keyword">new</span> ConcurrentDictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt;(); </span><br><span class="line"><span class="keyword">var</span> dictionary = <span class="keyword">new</span> ConcurrentDictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt;(); </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在這裡，<code>var</code> 使得宣告變數時類型名稱變得簡潔，避免了重複書寫 <code>ConcurrentDictionary&lt;string, int&gt;</code>。</p><ol start="2"><li>支援匿名型別: 允許在不事先定義類別的情況下建立物件。匿名型別的宣告必須使用 var 關鍵字。<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> &#123; Name = <span class="string">&quot;John Smith&quot;</span> &#125;;</span><br></pre></td></tr></table></figure></li></ol><ul><li>建立了一個匿名型別的物件，其具有一個名為 Name 的屬性，值為 “John Smith”。由於匿名型別沒有明確的名稱，因此必須使用 var 來宣告變數。</li></ul><p>要注意，var 關鍵字在 C# 中提供了簡化程式碼和支援匿名型別的功能，使程式碼更簡潔、更具彈性。但需要注意的是，var 並非萬能，只有在編譯器可以明確推斷出類型的情況下才能使用。過度使用 var 可能會降低程式碼的可讀性，因此應謹慎使用。</p><p>參考資料：<br><a href="https://dotnetcademy.net/Learn/2036/Pages/13">dotnetcademy</a><br><a href="https://learn.microsoft.com/zh-tw/shows/c-fundamentals-for-absolute-beginners/17">適用於初學者的 C# 基礎知識</a></p>]]></content>
      
      
      <categories>
          
          <category> dotnet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dotnet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷題練習 - Cache with Time Limit</title>
      <link href="/2025/01/04/TimeLimitedCache/"/>
      <url>/2025/01/04/TimeLimitedCache/</url>
      
        <content type="html"><![CDATA[<p>Write a class that allows getting and setting key-value pairs, however a time until expiration is associated with each key.</p><p>The class has three public methods:</p><p><code>set(key, value, duration)</code>: accepts an integer <code>key</code>, an integer <code>value</code>, and a <code>duration</code> in milliseconds. Once the <code>duration</code> has elapsed, the key should be inaccessible. The method should return true if the same un-expired key already exists and false otherwise. Both the value and duration should be overwritten if the key already exists.</p><p><code>get(key)</code>: if an un-expired key exists, it should return the associated value. Otherwise it should return -1.</p><p><code>count()</code>: returns the count of un-expired keys.</p><h2 id="中文說明"><a href="#中文說明" class="headerlink" title="中文說明"></a>中文說明</h2><p><code>set(key, value, duration)</code>： 接受一個整數的 key、一個整數值 value，以及一個毫秒為單位的時間 duration。當持續時間結束後，這個鍵值對將不能被存取。如果相同且未過期的鍵存在，則回傳 true，若不存在則回傳 false。如果這個鍵已經存在，其值與持續時間都應該被新傳入的 value 與 duration 覆寫。<br><code>get(key)</code>：如果存在未過期的鍵，回傳其對應的值。若沒有相對應的鍵，則回傳 -1。<br><code>count()</code>：回傳現存未過期的鍵的總數量。</p><span id="more"></span><h2 id="解題思路："><a href="#解題思路：" class="headerlink" title="解題思路："></a>解題思路：</h2><p>1.理解題目需求：<br>  要做一個可以「設定時間限制」的快取（cache）。<br>  支援三個方法：<br>  set(key, value, duration)：設定一個緩存，並在 duration 毫秒後自動移除。<br>  get(key)：獲取緩存的值，若該緩存過期則返回 -1。<br>  count()：返回當前未過期的緩存數量。<br>2.使用 Map ，查找 (get) 和新增 (set) 都很快。</p><ul><li>可以存複雜的結構（像我們要存值和計時器 ID）</li></ul><h2 id="解題"><a href="#解題" class="headerlink" title="解題"></a>解題</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">TimeLimitedCache</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cache</span> = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">key</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">value</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; duration time until expiration in ms</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">boolean</span>&#125; if un-expired key already existed</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">TimeLimitedCache</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">set</span> = <span class="keyword">function</span>(<span class="params">key, value, duration</span>) &#123;</span><br><span class="line">    <span class="comment">// 先確認 key 是否存在</span></span><br><span class="line">    <span class="keyword">const</span> found = <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">has</span>(key);</span><br><span class="line">    <span class="comment">// 如果鍵已存在（未過期），清除舊的計時器，避免舊計時器的干擾</span></span><br><span class="line">    <span class="keyword">if</span>(found)&#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(<span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">get</span>(key).<span class="property">timerId</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 無論是否已有 key，都會設定新的值和計時器：</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">set</span>(key,&#123;</span><br><span class="line">        value,</span><br><span class="line">        <span class="attr">timerId</span>: <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span> <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">delete</span>(key),duration)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 此函式要回傳 boolean, if the same un-expired key already exists(true)</span></span><br><span class="line">    <span class="keyword">return</span> found</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">key</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125; value associated with key</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">TimeLimitedCache</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">get</span> = <span class="keyword">function</span>(<span class="params">key</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">has</span>(key))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">get</span>(key).<span class="property">value</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125; count of non-expired keys</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">TimeLimitedCache</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">count</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="property">size</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="補充說明"><a href="#補充說明" class="headerlink" title="補充說明"></a>補充說明</h3><ol><li>為什麼存在(found)時要 clearTimeout？<br>假設緩存中已有鍵 key，且其倒計時尚未結束：</li></ol><ul><li>如果直接覆蓋而不清除舊的 setTimeout 計時器，舊計時器仍然會在原定的時間觸發刪除操作。</li><li>清除舊的計時器 (clearTimeout) 可以避免多餘的操作，確保新的計時器能正確控制過期時間。</li></ul><ol start="2"><li>setTimeout 的參數作用是什麼？</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">timerId</span>: <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">delete</span>(key), duration)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>setTimeout 的參數是一個回調函數：</p><ul><li><code>() =&gt; this.cache.delete(key)</code>：當計時器觸發時，執行刪除操作。</li><li>duration：計時器的延遲時間（以毫秒為單位），指定在多長時間後執行該回調。</li><li>setTimeout 確保鍵在 duration 毫秒後自動過期並刪除。</li></ul><h2 id="可應用實際案例："><a href="#可應用實際案例：" class="headerlink" title="可應用實際案例："></a>可應用實際案例：</h2><p>特別適合需要管理短期數據的應用場景，例如緩存用戶會話、臨時配置或頻繁變化的數據</p><p>例如，可以使用 TimeLimitedCache 來緩存 API 的回應結果。這樣一來能減少對後端的請求次數。例如，當多個用戶請求相同數據時，可以快速返回緩存結果，而不必每次都發送請求。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useEffect, useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="comment">// 使用提供的 TimeLimitedCache</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TimeLimitedCache</span> <span class="keyword">from</span> <span class="string">&#x27;./timeLimitedCache.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化全局緩存實例</span></span><br><span class="line"><span class="keyword">const</span> apiCache = <span class="keyword">new</span> <span class="title class_">TimeLimitedCache</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 將判斷該取得後端 url 的 cache 處理，包為一函式</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fetchWithCache</span> = <span class="keyword">async</span> (<span class="params">url, ttl = <span class="number">5000</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> cachedResponse = apiCache.<span class="title function_">get</span>(url);</span><br><span class="line">    <span class="comment">// 檢查指定 URL 是否有未過期的緩存</span></span><br><span class="line">    <span class="comment">// 我們可以使用 TimeLimitedCache 中的 get 方法</span></span><br><span class="line">    <span class="keyword">if</span> (cachedResponse !== -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Fetching from cache:&#x27;</span>, url);</span><br><span class="line">        <span class="keyword">return</span> cachedResponse;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(url);</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">    <span class="comment">// 緩存 API 回應</span></span><br><span class="line">    apiCache.<span class="title function_">set</span>(url, data, ttl);</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// React 組件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> [data, setData] = <span class="title function_">useState</span>(<span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">const</span> [loading, setLoading] = <span class="title function_">useState</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">fetchData</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">            <span class="title function_">setLoading</span>(<span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">const</span> apiUrl = <span class="string">&#x27;https://jsonplaceholder.typicode.com/posts/1&#x27;</span>; <span class="comment">// 測試 API</span></span><br><span class="line">            <span class="comment">// 傳入 apiUrl 並設定時間</span></span><br><span class="line">            <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">fetchWithCache</span>(apiUrl, <span class="number">10000</span>); <span class="comment">// 10 秒 Time-to-Live</span></span><br><span class="line">            <span class="title function_">setData</span>(result);</span><br><span class="line">            <span class="title function_">setLoading</span>(<span class="literal">false</span>);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="title function_">fetchData</span>();</span><br><span class="line">    &#125;, []);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (loading) <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Loading...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Post Details<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Title:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> &#123;data.title&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Body:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> &#123;data.body&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="補充可以使用-class"><a href="#補充可以使用-class" class="headerlink" title="補充可以使用 class"></a>補充可以使用 class</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TimeLimitedCache</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cache</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">set</span>(<span class="params">key, value, duration</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> found = <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">has</span>(key);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (found) &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(<span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">get</span>(key).<span class="property">timerId</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">set</span>(key, &#123;</span><br><span class="line">      value,</span><br><span class="line">      value,</span><br><span class="line">      <span class="attr">timerId</span>: <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">delete</span>(key);</span><br><span class="line">      &#125;, duration),</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> found;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">get</span>(<span class="params">key</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">has</span>(key) ? <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">get</span>(key).<span class="property">value</span> : -<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">count</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="property">size</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>參考資料<br><a href="https://www.explainthis.io/zh-hant/swe/cache-with-time-limit">[Medium] LeetCode JS 30 - 2622. Cache with Time Limit</a><br><a href="https://ithelp.ithome.com.tw/m/articles/10329969">LeetCode JS30-Day17 | 2622. Cache With Time Limit 有時間限制的緩存Cache</a></p>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 安裝與環境</title>
      <link href="/2024/11/15/python-install/"/>
      <url>/2024/11/15/python-install/</url>
      
        <content type="html"><![CDATA[<h2 id="Python-的安裝步驟"><a href="#Python-的安裝步驟" class="headerlink" title="Python 的安裝步驟"></a>Python 的安裝步驟</h2><h3 id="為什麼要學習-Python？"><a href="#為什麼要學習-Python？" class="headerlink" title="為什麼要學習 Python？"></a>為什麼要學習 Python？</h3><p>最近發現 GitHub 上許多新專案都適用 Python 或是要使用的 AI 工具也會是使用 Python 開發，於是決定也來學學 Python！</p><h3 id="如何安裝-Python？"><a href="#如何安裝-Python？" class="headerlink" title="如何安裝 Python？"></a>如何安裝 Python？</h3><ul><li>前往 Python 的官方網站 下載安裝程式。</li><li>按照安裝程式的指示完成安裝。</li><li>安裝完成後，打開終端機（或命令提示字元），輸入以下指令確認安裝是否成功：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure></li><li>若您有多個專案需使用不同的 Python 版本，建議使用版本管理工具，例如 pyenv。</li></ul><span id="more"></span><h2 id="pyenv-入門：環境與基本安裝"><a href="#pyenv-入門：環境與基本安裝" class="headerlink" title="pyenv 入門：環境與基本安裝"></a>pyenv 入門：環境與基本安裝</h2><p>在開發過程中，不同專案可能需要不同版本的 Python，或是需要測試程式碼在不同版本的相容性。pyenv 能有效隔離環境，避免版本衝突，讓管理變得更加靈活。</p><h3 id="安裝-pyenv"><a href="#安裝-pyenv" class="headerlink" title="安裝 pyenv"></a>安裝 pyenv</h3><p>至 <a href="https://github.com/pyenv/pyenv?tab=readme-ov-file#homebrew-in-macos">pyenv GitHub</a> 頁面，根據你的作業系統進行安裝。<br>安裝完成後，重啟終端機，並輸入以下指令確認安裝：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv -v</span><br></pre></td></tr></table></figure><h2 id="pyenv-的常見指令"><a href="#pyenv-的常見指令" class="headerlink" title="pyenv 的常見指令"></a>pyenv 的常見指令</h2><h3 id="列出已安裝的-Python-版本"><a href="#列出已安裝的-Python-版本" class="headerlink" title="列出已安裝的 Python 版本"></a>列出已安裝的 Python 版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv versions</span><br></pre></td></tr></table></figure><h3 id="查看可安裝的-Python-版本"><a href="#查看可安裝的-Python-版本" class="headerlink" title="查看可安裝的 Python 版本"></a>查看可安裝的 Python 版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv install --list</span><br></pre></td></tr></table></figure><h3 id="安裝特定版本的-Python"><a href="#安裝特定版本的-Python" class="headerlink" title="安裝特定版本的 Python"></a>安裝特定版本的 Python</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv install 3.12.7</span><br></pre></td></tr></table></figure><h3 id="切換-Python-版本"><a href="#切換-Python-版本" class="headerlink" title="切換 Python 版本"></a>切換 Python 版本</h3><ul><li>臨時切換：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv shell 3.12.7</span><br></pre></td></tr></table></figure></li><li>永久切換（全域預設版本）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv global 3.12.7</span><br></pre></td></tr></table></figure></li></ul><h3 id="移除已安裝的-Python-版本"><a href="#移除已安裝的-Python-版本" class="headerlink" title="移除已安裝的 Python 版本"></a>移除已安裝的 Python 版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv uninstall 3.12.7</span><br></pre></td></tr></table></figure><h2 id="虛擬環境"><a href="#虛擬環境" class="headerlink" title="虛擬環境"></a>虛擬環境</h2><p>虛擬環境是 Python 開發中用來隔離專案依賴的工具，雖然它對於剛開始學習 Python 的新手不是必要的，但當專案規模逐漸擴大、需要處理多個專案或套件版本時，它的重要性會逐漸浮現。</p><h3 id="什麼是虛擬環境？"><a href="#什麼是虛擬環境？" class="headerlink" title="什麼是虛擬環境？"></a>什麼是虛擬環境？</h3><p>虛擬環境是 Python 提供的一種工具，讓你可以在同一台電腦上建立多個彼此獨立的 Python 環境，每個環境可以擁有不同的：</p><ul><li>Python 版本</li><li>已安裝的套件及其版本</li></ul><p>虛擬環境可以避免多個專案之間因套件衝突而導致問題。</p><p>以下幾種情境下特別建議使用：<br>1.需要管理不同的專案依賴：<br>假設專案 A 使用 Django 4.0，而專案 B 使用 Django 5.0，虛擬環境可以讓兩者共存，互不干擾。<br>2.避免污染全域環境：<br>在系統的 Python 安裝目錄安裝套件可能會對其他專案造成影響，虛擬環境能避免這種問題。</p><p>常見的虛擬環境工具</p><ol><li>內建工具 venv<br>Python 3.3 之後內建的工具，無需額外安裝。<br>適合大多數基本需求。</li><li>第三方工具 virtualenv<br>功能更完整，支援更多選項。<br>比 venv 更適合舊版 Python（如 Python 2.x）。</li><li>進階工具 Poetry<br>不僅管理虛擬環境，還能管理依賴套件和版本。<br>提供「一站式」解決方案，是目前非常流行的工具。</li></ol><p>以下我將以 <code>venv</code>, <code>Poetry</code> 介紹</p><h2 id="使用內建的-venv-工具"><a href="#使用內建的-venv-工具" class="headerlink" title="使用內建的 venv 工具"></a>使用內建的 venv 工具</h2><ol><li>建立虛擬環境：</li></ol><ul><li>注意：要在專案目錄下執行以下命令</li><li>myenv 是虛擬環境的名稱，可以替換成其他名字。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m venv myenv</span><br></pre></td></tr></table></figure><ol start="2"><li>啟動虛擬環境 (macOS)</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source myenv/<span class="built_in">bin</span>/activate</span><br></pre></td></tr></table></figure><ul><li>啟動後，命令列會顯示 (myenv)，代表已進入虛擬環境。</li></ul><p>接續在虛擬環境，可以執行專案內需要的套件安裝</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests beautifulsoup4</span><br></pre></td></tr></table></figure><ol start="3"><li>退出虛擬環境</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><h2 id="使用-Poetry"><a href="#使用-Poetry" class="headerlink" title="使用 Poetry"></a>使用 Poetry</h2><ol><li>安裝 Poetry（建議用 pipx 安裝）：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pipx install poetry</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>建立新專案：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">poetry new myproject</span><br><span class="line"><span class="built_in">cd</span> myproject</span><br></pre></td></tr></table></figure><ul><li>預設會生成 pyproject.toml 作為專案配置檔案。</li></ul><ol start="3"><li>啟動虛擬環境：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poetry shell</span><br></pre></td></tr></table></figure><p>或直接在虛擬環境中運行程式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poetry run python my_script.py</span><br></pre></td></tr></table></figure><ol start="4"><li>添加 dependency：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poetry add django</span><br></pre></td></tr></table></figure><ul><li>poetry.lock 和 pyproject.toml 會自動更新，鎖定依賴版本。</li></ul><ol start="5"><li>群組化依賴（開發用套件）：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poetry add --group dev pytest</span><br></pre></td></tr></table></figure><ol start="6"><li>安裝全部依賴： 當其他人下載專案時，只需執行：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poetry install</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scroll snap</title>
      <link href="/2024/10/30/scroll-snap/"/>
      <url>/2024/10/30/scroll-snap/</url>
      
        <content type="html"><![CDATA[<p>CSS Scroll Snap 是一種用於控制滾動行為的 CSS 模組，允許開發者在使用者停止滾動時，自動將視圖對齊到特定的元素。這種功能常用於創造更流暢的用戶體驗，例如分頁文章、圖片輪播等。</p><h2 id="主要由兩個屬性來控制："><a href="#主要由兩個屬性來控制：" class="headerlink" title="主要由兩個屬性來控制："></a>主要由兩個屬性來控制：</h2><p>scroll-snap-type：設置在滾動容器（父元素）上，用於定義滾動軸向和滾動對齊的行為。</p><p>格式為：scroll-snap-type: [軸向] [行為]<br>軸向可以是 x（水平滾動）、y（垂直滾動）或 both（同時支持水平與垂直）。<br>行為可以是 mandatory 或 proximity：<br>mandatory：滾動必須對齊到指定位置，確保每次停下來都會對齊。<br>proximity：當滾動接近某個指定的位置時，會進行對齊。<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.scroll-container &#123;</span><br><span class="line">  scroll-snap-type: y mandatory; /* 在垂直方向強制對齊 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scroll-snap-align：設置在滾動內容項目（子元素）上，定義這些元素在滾動容器中的對齊方式。</p><p>可選的值有 start、center、end，決定項目在滾動結束時如何與容器對齊。<br>例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.scroll-item</span> &#123;</span><br><span class="line">  <span class="attribute">scroll-snap-align</span>: start; <span class="comment">/* 將項目對齊到滾動容器的頂端 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>屬性</th><th>描述</th></tr></thead><tbody><tr><td><code>scroll-snap-type</code></td><td>定義滾動容器的捕捉行為，包括方向（x, y, both）和強制程度（mandatory, proximity）。</td></tr><tr><td><code>scroll-padding</code></td><td>設置容器內邊距，影響捕捉點的位置。</td></tr><tr><td><code>scroll-snap-align</code></td><td>定義子元素在容器中的對齊方式（start, center, end）。</td></tr><tr><td><code>scroll-snap-stop</code></td><td>控制是否在特定元素上停留，默認情況下僅在停止滾動時觸發。</td></tr></tbody></table><h2 id="使用時注意事項"><a href="#使用時注意事項" class="headerlink" title="使用時注意事項"></a>使用時注意事項</h2><ol><li>跨瀏覽器不一致性<br>雖然大多數現代瀏覽器都支持 Scroll Snap，但在行為上可能會有一些細微的差異。請務必在各種瀏覽器上測試你的實現，確保用戶能夠獲得一致的體驗。像是使用 <a href="https://caniuse.com/">cna I us</a> 確認支援。<br>對於某些舊版本仍然需要前綴。使用 WebKit 前綴來支持較舊的 Safari 和 Chrome。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.scroll-container</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">scroll-snap-type</span>: y mandatory; <span class="comment">/* 用於舊版 Safari 和 Chrome */</span></span><br><span class="line">  <span class="attribute">scroll-snap-type</span>: y mandatory; <span class="comment">/* 標準屬性 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 @supports 進行功能檢測：你可以使用 @supports 檢測瀏覽器是否支持 Scroll Snap，並提供相應的回退方案。例如，如果某些瀏覽器不支持，則可以使用 JavaScript 實現類似的行為。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">@supports</span> (<span class="attribute">scroll-snap-type</span>: y mandatory) &#123;</span><br><span class="line">  <span class="selector-class">.scroll-container</span> &#123;</span><br><span class="line">    <span class="attribute">scroll-snap-type</span>: y mandatory;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@supports</span> <span class="keyword">not</span> (<span class="attribute">scroll-snap-type</span>: y mandatory) &#123;</span><br><span class="line">  <span class="selector-class">.scroll-container</span> &#123;</span><br><span class="line">    <span class="comment">/* 恢復樣式，或提供 JavaScript 實現滾動行為 */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>預期外的滾動行為<br>如果發現未對齊正確，或者容器的尺寸設置不當，可能會出現預期外的滾動行為。<br>解決方案：<br>設置固定尺寸：確保滾動容器和子元素的尺寸設置正確。對於橫向滾動，應確保每個項目的寬度是明確的，對於縱向滾動，應設置每個項目的高度。例如：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">複製程式碼</span><br><span class="line"><span class="selector-class">.scroll-container</span> &#123;</span><br><span class="line">  <span class="attribute">overflow-x</span>: scroll; <span class="comment">/* 必須設置 overflow 屬性 */</span></span><br><span class="line">  <span class="attribute">scroll-snap-type</span>: x mandatory; <span class="comment">/* 水平捕捉點 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.scroll-item</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>; <span class="comment">/* 保證每個項目都佔據滾動區域 */</span></span><br><span class="line">  <span class="attribute">scroll-snap-align</span>: start; <span class="comment">/* scroll-snap-align 決定了子元素在滾動容器中如何對齊 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>性能影響</li></ol><p>當頁面內容繁多，或包含大量動畫和捕捉點時，可能會導致性能問題。這會導致滾動卡頓，特別是在移動設備上。</p><p>解決方案：<br>避免過度使用捕捉點：不要對每一個小元素都設置 scroll-snap-align，僅在核心內容（如頁面段落、關鍵節點）設置捕捉點。例如，圖片輪播或長段落之間可以有捕捉點，但不需要對每個小項目設置。</p><p>除此之外，可以嘗試 lazy load：對於圖片或大型內容，使用懶加載技術（如 Intersection Observer API）可以避免一次性渲染過多內容，從而減輕滾動過程中的性能負擔。</p><ul><li>使用 Intersection Observer 實現懶加載: 用來觀察（observe）當指定元素接觸到父層以上或者是視窗的方法。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> images = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.lazy-load&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(<span class="function"><span class="params">entries</span> =&gt;</span> &#123;</span><br><span class="line">  entries.<span class="title function_">forEach</span>(<span class="function"><span class="params">entry</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (entry.<span class="property">isIntersecting</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> img = entry.<span class="property">target</span>;</span><br><span class="line">      img.<span class="property">src</span> = img.<span class="property">dataset</span>.<span class="property">src</span>; <span class="comment">// 替換為真正的圖片</span></span><br><span class="line">      observer.<span class="title function_">unobserve</span>(img); <span class="comment">// 停止觀察</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">images.<span class="title function_">forEach</span>(<span class="function"><span class="params">image</span> =&gt;</span> &#123;</span><br><span class="line">  observer.<span class="title function_">observe</span>(image); <span class="comment">// 觀察每個懶加載圖片</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>減少不必要的動畫：過多的動畫和滾動事件監聽器會降低滾動性能，特別是如果動畫效果頻繁更新。例如，可以使用 requestAnimationFrame 來控制滾動動畫的頻率，避免過多的重排和重繪。或是嘗試，節流滾動事件：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> isScrolling;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="built_in">clearTimeout</span>(isScrolling);</span><br><span class="line">  isScrolling = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 在滾動結束後觸發的操作</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;滾動結束&#x27;</span>);</span><br><span class="line">  &#125;, <span class="number">66</span>); <span class="comment">// 節流時間間隔</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>參考文章：<br><a href="https://jim1105.coderbridge.io/2022/07/30/intersection-observer/">超好用的 Web API - Intersection Observer</a><br><a href="https://medium.com/@bogdanfromkyiv/no-js-required-you-can-do-this-with-css-e4635e40502c">No JS required — you can do this with CSS!</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自訂 Quasar 日期選擇器：實現 Year/Month 選擇功能</title>
      <link href="/2024/08/24/quasar-monthlyPicker/"/>
      <url>/2024/08/24/quasar-monthlyPicker/</url>
      
        <content type="html"><![CDATA[<p><img src="https://hackmd.io/_uploads/B1UukbOo0.png" alt="image"></p><p>在 Quasar 的日期選擇器，要使用 QInput + QDate 方式，可以參考文件 <a href="https://quasar.dev/vue-components/date/#with-qinput">Date Picker</a>。</p><p>但在此次功能需求，是讓使用者只能選擇年/月。所以首先依循查詢結果，找到 <a href="https://github.com/quasarframework/quasar/discussions/13101">monthpicker</a> ，在其中 <a href="https://codepen.io/metalsadman/pen/xxYBqMo">codepen - QDate: DATE YEAR/MONTH PICKER</a>，透過設置 setView 屬性，使得選擇器界面可以顯示年、月以及日的選擇視圖。</p><h2 id="自制-monthlyPicker"><a href="#自制-monthlyPicker" class="headerlink" title="自制 monthlyPicker"></a>自制 monthlyPicker</h2><p>因此參考上方的方式，建立一個 monthlyPicker 元件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;q-mr-md&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">q-input</span></span></span><br><span class="line"><span class="tag">      <span class="attr">dense</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-model</span>=<span class="string">&quot;monthValue&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">id</span>=<span class="string">&quot;date-input&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;single-month-picker&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">readonly</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:append</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">q-icon</span></span></span><br><span class="line"><span class="tag">          <span class="attr">name</span>=<span class="string">&quot;fa-regular fa-calendar&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;cursor-pointer&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">size</span>=<span class="string">&quot;1.1rem&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">q-popup-proxy</span> <span class="attr">cover</span> <span class="attr">transition-show</span>=<span class="string">&quot;scale&quot;</span> <span class="attr">transition-hide</span>=<span class="string">&quot;scale&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;q-date__header flex column items-start&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span> @<span class="attr">click</span>=<span class="string">&quot;handleToMonthView&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cursor-pointer&quot;</span></span></span><br><span class="line"><span class="tag">                &gt;</span>&#123;&#123; &quot;Year - Month&quot; &#125;&#125;&lt;/span</span><br><span class="line">              &gt;</span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text-h5 cursor-pointer&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleToYearView&quot;</span>&gt;</span></span><br><span class="line">                &#123;&#123; monthValue &#125;&#125;</span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">q-date</span></span></span><br><span class="line"><span class="tag">              <span class="attr">class</span>=<span class="string">&quot;date-disable-btn&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">dense</span></span></span><br><span class="line"><span class="tag">              <span class="attr">ref</span>=<span class="string">&quot;dateRef&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">v-model</span>=<span class="string">&quot;monthValue&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">default-view</span>=<span class="string">&quot;Years&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">emit-immediately</span></span></span><br><span class="line"><span class="tag">              @<span class="attr">update:model-value</span>=<span class="string">&quot;onUpdate&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">mask</span>=<span class="string">&quot;YYYY-MM&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">minimal</span></span></span><br><span class="line"><span class="tag">              <span class="attr">years-in-month-view</span></span></span><br><span class="line"><span class="tag">              <span class="attr">:navigation-min-year-month</span>=<span class="string">&quot;minYearMonth&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">:navigation-max-year-month</span>=<span class="string">&quot;maxYearMonth&quot;</span></span></span><br><span class="line"><span class="tag">            &gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row items-center justify-end date-action-btn&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">q-btn</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">dense</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">flat</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">v-close-popup</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">class</span>=<span class="string">&quot;btn--no-hover&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">label</span>=<span class="string">&quot;Close&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">color</span>=<span class="string">&quot;primary&quot;</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">q-date</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">q-popup-proxy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">q-icon</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">q-input</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=<span class="string">&quot;ts&quot;</span>&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; date, <span class="title class_">QDate</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;quasar&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;selectedDate&#x27;</span>])</span><br><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">    <span class="attr">month</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">        <span class="attr">required</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> monthValue = <span class="title function_">ref</span>(props.<span class="property">month</span>)</span><br><span class="line"><span class="keyword">const</span> dateRef = ref&lt;<span class="title class_">InstanceType</span>&lt;<span class="keyword">typeof</span> <span class="title class_">QDate</span>&gt; | <span class="literal">null</span>&gt;(<span class="literal">null</span>)</span><br><span class="line"><span class="keyword">const</span> currentView = ref&lt;<span class="string">&#x27;Years&#x27;</span> | <span class="string">&#x27;Months&#x27;</span> | <span class="string">&#x27;Days&#x27;</span>&gt;(<span class="string">&#x27;Years&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// computed</span></span><br><span class="line"><span class="keyword">const</span> minYearMonth = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> oneYearAgo = date.<span class="title function_">subtractFromDate</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(), &#123; <span class="attr">month</span>: <span class="number">13</span> &#125;)</span><br><span class="line">    <span class="keyword">return</span> date.<span class="title function_">formatDate</span>(oneYearAgo, <span class="string">&#x27;YYYY/MM&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> maxYearMonth = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> oneMonthAgo = date.<span class="title function_">subtractFromDate</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(), &#123; <span class="attr">month</span>: <span class="number">1</span> &#125;)</span><br><span class="line">    <span class="keyword">return</span> date.<span class="title function_">formatDate</span>(oneMonthAgo, <span class="string">&#x27;YYYY/MM&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onUpdate</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">emit</span>(<span class="string">&#x27;selectedDate&#x27;</span>, date.<span class="title function_">formatDate</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(monthValue.<span class="property">value</span>), <span class="string">&#x27;YYYY-MM&#x27;</span>))</span><br><span class="line">    <span class="title function_">setCalendarView</span>(<span class="string">&#x27;Months&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleToMonthView</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setCalendarView</span>(<span class="string">&#x27;Months&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleToYearView</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setCalendarView</span>(<span class="string">&#x27;Years&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">setCalendarView</span> = (<span class="params">view: <span class="string">&#x27;Years&#x27;</span> | <span class="string">&#x27;Months&#x27;</span></span>) =&gt; &#123;</span><br><span class="line">    currentView.<span class="property">value</span> = view</span><br><span class="line">    dateRef.<span class="property">value</span>?.<span class="title function_">setView</span>(view)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="簡要說明"><a href="#簡要說明" class="headerlink" title="簡要說明"></a>簡要說明</h3><ul><li>QDate 組件：設置 default-view 為 Years，讓選擇器初始顯示年份視圖。mask 設置為 YYYY-MM，確保輸出格式為年-月。</li><li>計算屬性：透過 minYearMonth 和 maxYearMonth 屬性，限制使用者只能選擇過去一年內的日期範圍。</li><li>視圖切換：通過 handleToMonthView 和 handleToYearView 函數來實現視圖切換，並且用 setCalendarView 函數來控制視圖變更。</li></ul><h2 id="外層使用該元件方式"><a href="#外層使用該元件方式" class="headerlink" title="外層使用該元件方式"></a>外層使用該元件方式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">monthly-picker</span> <span class="attr">:month</span>=<span class="string">&quot;selectedMonth&quot;</span> @<span class="attr">selectedDate</span>=<span class="string">&quot;handleDateSelected&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>你選擇的月份是：&#123;&#123; selectedMonth &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> <span class="title class_">MonthlyPicker</span> <span class="keyword">from</span> <span class="string">&quot;./components/MonthlyPicker.vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> selectedMonth = <span class="title function_">ref</span>(<span class="string">&quot;2024-08&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> <span class="title function_">handleDateSelected</span> = (<span class="params">date: string</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">    selectedMonth.<span class="property">value</span> = date;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Quasar </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> quasar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在前端實現文件下載：以 Excel 文件為例</title>
      <link href="/2024/08/18/download-file/"/>
      <url>/2024/08/18/download-file/</url>
      
        <content type="html"><![CDATA[<p>在前端開發中，有時需要從後端提供數據並生成文件提供用戶下載。以下將以下載 Excel 為例，介绍如何使用 axios 從後端取得文件，並在前端處理文件的下載過程。我们還會顯示如何從 HTTP header 中提取文件名，以 f 確保下載的文件命名正確。</p><h2 id="Api-設定"><a href="#Api-設定" class="headerlink" title="Api 設定"></a>Api 設定</h2><p>要記得設置告诉 axios 期望接收的類型為 blob，若是不設置，則會預設為 json，收到的資料會是亂碼。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_">exportFile</span>(<span class="params">searchData</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> axios.<span class="title function_">get</span>(<span class="string">&quot;/data/export&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: searchData,</span><br><span class="line">    <span class="attr">responseType</span>: <span class="string">&quot;blob&quot;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="前端處理文件下載"><a href="#前端處理文件下載" class="headerlink" title="前端處理文件下載"></a>前端處理文件下載</h2><p>獲取到後端返回的文件數據後，我們需要在前端將其轉換為可下載的文件格式。以下是一個完整的示例，展示瞭如何將 blob 數據生成 Excel 文件並觸發下載。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">handleExportFile</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">exportFile</span>(data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([res.<span class="property">data</span>], &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> downloadUrl = <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span><br><span class="line">    <span class="keyword">const</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    link.<span class="property">href</span> = downloadUrl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> fileName = <span class="string">&quot;export.xlsx&quot;</span>;</span><br><span class="line">    link.<span class="title function_">setAttribute</span>(<span class="string">&quot;download&quot;</span>, fileName);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(link);</span><br><span class="line">    link.<span class="title function_">click</span>();</span><br><span class="line">    link.<span class="title function_">remove</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">revokeObjectURL</span>(downloadUrl);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="new-Blob-res-data-type-…-做了什麼？"><a href="#new-Blob-res-data-type-…-做了什麼？" class="headerlink" title="new Blob([res.data], { type: … }) 做了什麼？"></a>new Blob([res.data], { type: … }) 做了什麼？</h3><p>這里，用 new Blob() 創建了一個 Blob 對象。<br>res.data 是從後端 API 接收到的文件數據。<br>我們將這個數據放入 Blob 中，同時指定了文件的類型，即 <code>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</code>，這是 Excel 文件的 MIME 類型。這樣瀏覽器就能識別出這是一個 Excel 文件。</p><h3 id="動態創建一個-lt-a-gt-標簽，並通過模擬點擊觸發文件下載。"><a href="#動態創建一個-lt-a-gt-標簽，並通過模擬點擊觸發文件下載。" class="headerlink" title="動態創建一個 &lt;a&gt; 標簽，並通過模擬點擊觸發文件下載。"></a>動態創建一個 <code>&lt;a&gt;</code> 標簽，並通過模擬點擊觸發文件下載。</h3><p>使用 window.URL.createObjectURL(blob) 創建了一個特殊的 URL，它指向我們剛才創建的 Blob 對象。<br>可以理解為它生成了一個臨時的下載地址，使用者可以透過這個地址下載文件。<br>接著 document.createElement(“a”) 創建 <code>&lt;a&gt;</code> 標籤，接下來要利用這個標籤來實現文件下載。<br>也就是 link.href = downloadUrl; 給 <code>&lt;a&gt;</code> 標籤賦值，將剛才生成的 downloadUrl 設定為這個 <code>&lt;a&gt;</code> 標籤的 link 地址 (href)，也就是說，點擊這個 link 會指向我們的 Blob 物件（即文件資料）。</p><h3 id="設定文件名並觸發下載"><a href="#設定文件名並觸發下載" class="headerlink" title="設定文件名並觸發下載"></a>設定文件名並觸發下載</h3><p>使用 setAttribute 方法給<code>&lt;a&gt;</code> 標籤添加一個 download 屬性，並設定文件名為 “export.xlsx”。這樣，當用戶點擊鏈接時，瀏覽器會提示下載文件，並自動將文件保存為 export.xlsx。<br>document.body.appendChild 將 <code>&lt;a&gt;</code> 標籤臨時加到 document 的 body 中。雖然使用者不會看到這個 link，但它在頁面上是存在的。<br>然後模擬一次使用者點擊這個連結 (link.click())，觸發文件的下載過程。<br>link.remove();下載操作完成後，我們把這個臨時創建的 <code>&lt;a&gt;</code> 標籤從頁面中移除。</p><span id="more"></span><h2 id="使用-header-的-content-disposition-取得檔名"><a href="#使用-header-的-content-disposition-取得檔名" class="headerlink" title="使用 header 的 content-disposition 取得檔名"></a>使用 header 的 content-disposition 取得檔名</h2><p>有時，後端會通過 Content-Disposition 頭信息傳遞文件名。為了確保下載時使用正確的文件名，我們可以從響應頭中解析文件名。<br>這時候要注意前端， axios 是如何處理 response (你能拿到的回傳內容是否有無 header)<br>需要從回傳的 response headers 取得檔名，這樣才能下載時有正確的檔名。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">headers</span>:&#123;</span><br><span class="line">    <span class="string">&quot;access-control-allow-origin&quot;</span>: <span class="string">&quot;http://localhost:5143&quot;</span>,</span><br><span class="line">    <span class="string">&quot;access-control-expose-headers&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;content-disposition&quot;</span>: <span class="string">&quot;attachment; filename=123123_202408.xlsx; filename*=UTF-8&#x27;&#x27;123123_202408.xlsx&quot;</span>,</span><br><span class="line">    <span class="string">&quot;content-length&quot;</span>: <span class="string">&quot;12111&quot;</span>,</span><br><span class="line">    <span class="string">&quot;content-type&quot;</span>: <span class="string">&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;</span>,</span><br><span class="line">     ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">handleExportFile</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    $q.<span class="property">loading</span>.<span class="title function_">show</span>();</span><br><span class="line">    <span class="keyword">const</span> data = &#123;</span><br><span class="line">      <span class="attr">sourceId</span>: <span class="title class_">Number</span>(route.<span class="property">params</span>.<span class="property">id</span>),</span><br><span class="line">      <span class="attr">month</span>: followQuery.<span class="property">month</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">getFollowMonthlySummaryDownload</span>(data);</span><br><span class="line">    $q.<span class="property">loading</span>.<span class="title function_">hide</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([res.<span class="property">data</span>], &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> downloadUrl = <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span><br><span class="line">    <span class="keyword">const</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    link.<span class="property">href</span> = downloadUrl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解析 content-disposition 來取得檔名</span></span><br><span class="line">    <span class="keyword">const</span> contentDisposition = res.<span class="property">headers</span>[<span class="string">&quot;content-disposition&quot;</span>];</span><br><span class="line">    <span class="keyword">let</span> fileName = <span class="string">&quot;default-filename.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (contentDisposition) &#123;</span><br><span class="line">      <span class="keyword">const</span> fileNameMatch = contentDisposition.<span class="title function_">match</span>(</span><br><span class="line">        <span class="regexp">/filename\*=UTF-8&#x27;&#x27;([^;]+)/</span></span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">if</span> (fileNameMatch) &#123;</span><br><span class="line">        <span class="comment">// 使用 decodeURIComponent 解碼 UTF-8 編碼的檔名</span></span><br><span class="line">        fileName = <span class="built_in">decodeURIComponent</span>(fileNameMatch[<span class="number">1</span>]);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 如果沒有 UTF-8 檔名，嘗試匹配普通檔名</span></span><br><span class="line">        <span class="keyword">const</span> fileNameSimpleMatch =</span><br><span class="line">          contentDisposition.<span class="title function_">match</span>(<span class="regexp">/filename=([^;]+)/</span>);</span><br><span class="line">        <span class="keyword">if</span> (fileNameSimpleMatch) &#123;</span><br><span class="line">          fileName = fileNameSimpleMatch[<span class="number">1</span>].<span class="title function_">trim</span>();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    link.<span class="title function_">setAttribute</span>(<span class="string">&quot;download&quot;</span>, fileName);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(link);</span><br><span class="line">    link.<span class="title function_">click</span>();</span><br><span class="line">    link.<span class="title function_">remove</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">revokeObjectURL</span>(downloadUrl);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Vue3 與 Tiptap 打造文字編輯器</title>
      <link href="/2024/07/19/vue-tiptap/"/>
      <url>/2024/07/19/vue-tiptap/</url>
      
        <content type="html"><![CDATA[<p>在現代網頁應用中，強大的文字編輯器是必不可少的。Tiptap 是一款基於 ProseMirror 的高擴展性編輯器。本文將介紹如何在 Vue3 中使用 Tiptap，並結合 Vuetify 實現文字編輯器。</p><h2 id="官網文件"><a href="#官網文件" class="headerlink" title="官網文件"></a>官網文件</h2><p>首先官網：<a href="https://tiptap.dev/docs/editor/getting-started/install/vue3">https://tiptap.dev/docs/editor/getting-started/install/vue3</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">editor-content</span> <span class="attr">:editor</span>=<span class="string">&quot;editor&quot;</span> /&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">import</span> &#123; useEditor, <span class="title class_">EditorContent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@tiptap/vue-3&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">import</span> <span class="title class_">StarterKit</span> <span class="keyword">from</span> <span class="string">&#x27;@tiptap/starter-kit&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">const</span> editor = <span class="title function_">useEditor</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">content</span>: <span class="string">&#x27;&lt;p&gt;I’m running Tiptap with Vue.js. 🎉&lt;/p&gt;&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">extensions</span>: [<span class="title class_">StarterKit</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>根據對應 EXTENSIONS 找出如何加入在編輯器，如：bold, italic</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">     &lt;button @click=<span class="string">&quot;editor.chain().focus().toggleBold().run()&quot;</span> :<span class="keyword">class</span>=<span class="string">&quot;&#123; &#x27;is-active&#x27;: editor.isActive(&#x27;bold&#x27;) &#125;&quot;</span>&gt;</span><br><span class="line">      <span class="title class_">Toggle</span> bold</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;editor.chain().focus().toggleItalic().run()&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; &#x27;is-active&#x27;: editor.isActive(&#x27;italic&#x27;) &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      Toggle italic</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br></pre></td></tr></table></figure><span id="more"></span><p>以此類推… 根據所需要的功能一步步加入</p><h2 id="專案內實踐"><a href="#專案內實踐" class="headerlink" title="專案內實踐"></a>專案內實踐</h2><p>以 vue3 為範例 + vuetify</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;editor-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;editor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;d-flex align-center flex-wrap toolbar&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v-menu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:activator</span>=<span class="string">&quot;&#123; props &#125;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">v-btn</span></span></span><br><span class="line"><span class="tag">            <span class="attr">density</span>=<span class="string">&quot;compact&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;mr-2 rounded&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">color</span>=<span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">icon</span>=<span class="string">&quot;mdi-format-size&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-bind</span>=<span class="string">&quot;props&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:variant</span>=<span class="string">&quot;currentFontSize ? &#x27;tonal&#x27; : &#x27;text&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span><span class="tag">&lt;/<span class="name">v-btn</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">v-list</span> <span class="attr">dense</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">v-list-item</span> @<span class="attr">click</span>=<span class="string">&quot;unsetFontSize()&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; t(&#x27;Shared.Default&#x27;) &#125;&#125;</span><br><span class="line">          <span class="tag">&lt;/<span class="name">v-list-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">v-list-item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-for</span>=<span class="string">&quot;size in fontSizes&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:key</span>=<span class="string">&quot;size&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:class</span>=<span class="string">&quot;&#123; &#x27;list-item-active&#x27; : editor.isActive(&#x27;textStyle&#x27;, &#123; fontSize: `$&#123;size&#125;px` &#125;)&#125;&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">click</span>=<span class="string">&quot;setFontSize(`$&#123;size&#125;px`)&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">v-list-item-title</span>&gt;</span>&#123;&#123; size &#125;&#125;<span class="tag">&lt;/<span class="name">v-list-item-title</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">v-list-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">v-list</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">v-menu</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">v-btn</span></span></span><br><span class="line"><span class="tag">        <span class="attr">density</span>=<span class="string">&quot;compact&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;mr-2 rounded&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:variant</span>=<span class="string">&quot;editor.isActive(&#x27;bold&#x27;) ? &#x27;tonal&#x27; : &#x27;text&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">color</span>=<span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">icon</span>=<span class="string">&quot;mdi-format-bold&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">&quot;editor.chain().focus().toggleBold().run()&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">v-btn</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v-btn</span></span></span><br><span class="line"><span class="tag">        <span class="attr">density</span>=<span class="string">&quot;compact&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;mr-2 rounded&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:variant</span>=<span class="string">&quot;editor.isActive(&#x27;italic&#x27;) ? &#x27;tonal&#x27; : &#x27;text&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">color</span>=<span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">icon</span>=<span class="string">&quot;mdi-format-italic&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">&quot;editor.chain().focus().toggleItalic().run()&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">v-btn</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v-btn</span></span></span><br><span class="line"><span class="tag">        <span class="attr">density</span>=<span class="string">&quot;compact&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;mr-2 rounded&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:variant</span>=<span class="string">&quot;editor.isActive(&#x27;bulletList&#x27;) ? &#x27;tonal&#x27; : &#x27;text&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">color</span>=<span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">icon</span>=<span class="string">&quot;mdi-format-list-bulleted&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">&quot;editor.chain().focus().toggleBulletList().run()&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">v-btn</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v-btn</span></span></span><br><span class="line"><span class="tag">        <span class="attr">density</span>=<span class="string">&quot;compact&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;mr-2 rounded&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:variant</span>=<span class="string">&quot;editor.isActive(&#x27;orderedList&#x27;) ? &#x27;tonal&#x27; : &#x27;text&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">color</span>=<span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">icon</span>=<span class="string">&quot;mdi-format-list-numbered&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">&quot;editor.chain().focus().toggleOrderedList().run()&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">v-btn</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 靠左/中/右 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v-btn</span></span></span><br><span class="line"><span class="tag">        <span class="attr">density</span>=<span class="string">&quot;compact&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;mr-2 rounded&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:variant</span>=<span class="string">&quot;editor.isActive(&#123; textAlign: `left` &#125;) ? &#x27;tonal&#x27; : &#x27;text&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">color</span>=<span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">icon</span>=<span class="string">&quot;mdi-format-align-left&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">&quot;editor.chain().focus().setTextAlign(&#x27;left&#x27;).run()&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">v-btn</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v-btn</span></span></span><br><span class="line"><span class="tag">        <span class="attr">density</span>=<span class="string">&quot;compact&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;mr-2 rounded&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:variant</span>=<span class="string">&quot;editor.isActive(&#123; textAlign: &#x27;center&#x27; &#125;) ? &#x27;tonal&#x27; : &#x27;text&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">color</span>=<span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">icon</span>=<span class="string">&quot;mdi-format-align-center&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">&quot;editor.chain().focus().setTextAlign(&#x27;center&#x27;).run()&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">v-btn</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v-btn</span></span></span><br><span class="line"><span class="tag">        <span class="attr">density</span>=<span class="string">&quot;compact&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;mr-2 rounded&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:variant</span>=<span class="string">&quot;editor.isActive(&#123; textAlign: `right` &#125;) ? &#x27;tonal&#x27; : &#x27;text&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">color</span>=<span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">icon</span>=<span class="string">&quot;mdi-format-align-right&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">&quot;editor.chain().focus().setTextAlign(&#x27;right&#x27;).run()&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">v-btn</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 顏色 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v-menu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:activator</span>=<span class="string">&quot;&#123; props &#125;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">v-btn</span></span></span><br><span class="line"><span class="tag">            <span class="attr">density</span>=<span class="string">&quot;compact&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;mr-2 rounded&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:color</span>=<span class="string">&quot;currentColor ? &#x27;white&#x27; : &#x27;black&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">icon</span>=<span class="string">&quot;mdi-format-color-text&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-bind</span>=<span class="string">&quot;props&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:variant</span>=<span class="string">&quot;currentColor ? &#x27;tonal&#x27; : &#x27;text&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:style</span>=<span class="string">&quot;&#123; &#x27;background-color&#x27;: currentColor &#125;&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span><span class="tag">&lt;/<span class="name">v-btn</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">v-list</span> <span class="attr">dense</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">v-list-item</span> @<span class="attr">click</span>=<span class="string">&quot;unsetColor()&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; t(&#x27;Shared.Default&#x27;) &#125;&#125;</span><br><span class="line">          <span class="tag">&lt;/<span class="name">v-list-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">v-list-item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-for</span>=<span class="string">&quot;color in textColor&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:key</span>=<span class="string">&quot;color&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;d-flex align-center justify-center&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">click</span>=<span class="string">&quot;setColor(color)&quot;</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">v-list-item-title</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:style</span>=<span class="string">&quot;&#123; &#x27;background-color&#x27;: color &#125;&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">class</span>=<span class="string">&quot;editor-color-container&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:class</span>=<span class="string">&quot;&#123; &#x27;list-colorPicker-active&#x27; : isColorActive(color) &#125;&quot;</span></span></span><br><span class="line"><span class="tag">              &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">v-list-item-title</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">v-list-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">v-list</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">v-menu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditorContent</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:editor</span>=<span class="string">&quot;editor&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;p-2 tiptap-container&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:style</span>=<span class="string">&quot;&#123; height: props.height, borderColor: hasError ? &#x27;red&#x27; : &#x27;&#x27; &#125;&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v-col</span> <span class="attr">v-if</span>=<span class="string">&quot;hasError&quot;</span> <span class="attr">class</span>=<span class="string">&quot;pt-1 pl-6 text-caption&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;text-red&quot;</span>&gt;</span>&#123;&#123; t(&#x27;CommonErrorMessage.Required&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">v-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=<span class="string">&quot;ts&quot;</span>&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useEditor, <span class="title class_">EditorContent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@tiptap/vue-3&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StarterKit</span> <span class="keyword">from</span> <span class="string">&#x27;@tiptap/starter-kit&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TextStyle</span> <span class="keyword">from</span> <span class="string">&#x27;@tiptap/extension-text-style&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontSize</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./fontSizeExtension&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TextAlign</span> <span class="keyword">from</span> <span class="string">&#x27;@tiptap/extension-text-align&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Color</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@tiptap/extension-color&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">    <span class="attr">modelValue</span>: <span class="title class_">String</span> <span class="keyword">as</span> <span class="title class_">PropType</span>&lt;string | <span class="literal">null</span>&gt;,</span><br><span class="line">    <span class="attr">height</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">String</span> <span class="keyword">as</span> <span class="title class_">PropType</span>&lt;string&gt;,</span><br><span class="line">        <span class="attr">default</span>: <span class="string">&#x27;12rem&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">isRequired</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">        <span class="attr">default</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> &#123; t &#125; = <span class="title function_">useI18n</span>();</span><br><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;update:modelValue&#x27;</span>]);</span><br><span class="line"><span class="keyword">const</span> hasError = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">const</span> fontSizes = <span class="title function_">ref</span>([<span class="string">&#x27;12&#x27;</span>, <span class="string">&#x27;14&#x27;</span>, <span class="string">&#x27;16&#x27;</span>, <span class="string">&#x27;18&#x27;</span>, <span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;24&#x27;</span>]);</span><br><span class="line"><span class="keyword">const</span> textColor = <span class="title function_">ref</span>([<span class="string">&#x27;#F44336&#x27;</span>, <span class="string">&#x27;#2196F3&#x27;</span>,<span class="string">&#x27;#FFC107&#x27;</span>, <span class="string">&#x27;#757575&#x27;</span>, <span class="string">&#x27;#BF360C&#x27;</span>, <span class="string">&#x27;#FF9800&#x27;</span>])</span><br><span class="line"><span class="keyword">const</span> currentColor = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> currentFontSize = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> editor = <span class="title function_">useEditor</span>(&#123;</span><br><span class="line">    <span class="attr">content</span>: props.<span class="property">modelValue</span>,</span><br><span class="line">    <span class="attr">onUpdate</span>: <span class="function">(<span class="params">&#123; editor &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> value = editor.<span class="property">isEmpty</span> ? <span class="string">&#x27;&#x27;</span> : editor.<span class="title function_">getHTML</span>();</span><br><span class="line">        <span class="keyword">if</span> (value) &#123;</span><br><span class="line">            <span class="title function_">validateContent</span>(value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">emit</span>(<span class="string">&#x27;update:modelValue&#x27;</span>, value);</span><br><span class="line">        <span class="title function_">updateToolbarState</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">onBlur</span>(<span class="params">&#123; editor &#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> value = editor.<span class="property">isEmpty</span> ? <span class="string">&#x27;&#x27;</span> : editor.<span class="title function_">getHTML</span>();</span><br><span class="line">        <span class="keyword">if</span> (!value &amp;&amp; props.<span class="property">isRequired</span>) &#123;</span><br><span class="line">            <span class="title function_">validateContent</span>(value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">extensions</span>: [</span><br><span class="line">        <span class="title class_">StarterKit</span>,</span><br><span class="line">        <span class="title class_">TextStyle</span>,</span><br><span class="line">        <span class="title class_">Color</span>,</span><br><span class="line">        <span class="title class_">FontSize</span>.<span class="title function_">configure</span>(&#123;</span><br><span class="line">            <span class="attr">types</span>: [<span class="string">&#x27;textStyle&#x27;</span>],</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="title class_">TextAlign</span>.<span class="title function_">configure</span>(&#123;</span><br><span class="line">            <span class="attr">types</span>: [<span class="string">&#x27;heading&#x27;</span>, <span class="string">&#x27;paragraph&#x27;</span>],</span><br><span class="line">        &#125;),</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">validateContent</span> = (<span class="params">content: string</span>) =&gt; &#123;</span><br><span class="line">    hasError.<span class="property">value</span> = !content;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">setFontSize</span> = (<span class="params">size: string</span>) =&gt; &#123;</span><br><span class="line">    currentFontSize.<span class="property">value</span> = size;</span><br><span class="line">    editor.<span class="property">value</span>?.<span class="title function_">chain</span>().<span class="title function_">focus</span>().<span class="title function_">setFontSize</span>(size).<span class="title function_">run</span>();</span><br><span class="line">    <span class="title function_">updateToolbarState</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">unsetFontSize</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    currentFontSize.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    editor.<span class="property">value</span>?.<span class="title function_">chain</span>().<span class="title function_">focus</span>().<span class="title function_">unsetFontSize</span>().<span class="title function_">run</span>();</span><br><span class="line">    <span class="title function_">updateToolbarState</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">setColor</span> = (<span class="params">color: string</span>) =&gt; &#123;</span><br><span class="line">    currentColor.<span class="property">value</span> = color;</span><br><span class="line">    editor.<span class="property">value</span>?.<span class="title function_">chain</span>().<span class="title function_">focus</span>().<span class="title function_">setColor</span>(color).<span class="title function_">run</span>();</span><br><span class="line">    <span class="title function_">updateToolbarState</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">unsetColor</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    currentColor.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    editor.<span class="property">value</span>?.<span class="title function_">chain</span>().<span class="title function_">focus</span>().<span class="title function_">unsetColor</span>().<span class="title function_">run</span>();</span><br><span class="line">    <span class="title function_">updateToolbarState</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateToolbarState</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    currentColor.<span class="property">value</span> = editor.<span class="property">value</span>?.<span class="title function_">getAttributes</span>(<span class="string">&#x27;textStyle&#x27;</span>).<span class="property">color</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    currentFontSize.<span class="property">value</span> = editor.<span class="property">value</span>?.<span class="title function_">getAttributes</span>(<span class="string">&#x27;textStyle&#x27;</span>).<span class="property">fontSize</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// active color</span></span><br><span class="line"><span class="keyword">const</span> isColorActive = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> <span class="function">(<span class="params">color: string</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> editor.<span class="property">value</span>?.<span class="title function_">isActive</span>(<span class="string">&#x27;textStyle&#x27;</span>, &#123; color &#125;) || <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">watch</span>(<span class="function">() =&gt;</span> props.<span class="property">modelValue</span>, <span class="function">(<span class="params">newValue</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (editor.<span class="property">value</span> &amp;&amp; newValue !== editor.<span class="property">value</span>.<span class="title function_">getHTML</span>()) &#123;</span><br><span class="line">        editor.<span class="property">value</span>.<span class="property">commands</span>.<span class="title function_">setContent</span>(newValue || <span class="string">&#x27;&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">onBeforeUnmount</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    editor.<span class="property">value</span>?.<span class="title function_">destroy</span>();</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://hackmd.io/_uploads/BJVzYNwdC.png" alt="image"></p><h3 id="編輯器功能項目"><a href="#編輯器功能項目" class="headerlink" title="編輯器功能項目"></a>編輯器功能項目</h3><p>我有加入的功能有：<br>文字大小、粗體、斜體、bulletList、orderedList、對齊(靠左、置中、靠右)、文字顏色</p><h3 id="文字編輯區塊"><a href="#文字編輯區塊" class="headerlink" title="文字編輯區塊:"></a>文字編輯區塊:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">EditorContent</span> :editor=<span class="string">&quot;editor&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;p-2 tiptap-container&quot;</span> :style=<span class="string">&quot;&#123; height: props.height, borderColor: hasError ? &#x27;red&#x27; : &#x27;&#x27; &#125;&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>綁定的 style 是:</p><p>1.height: 要彈性設置編輯區塊高度<br>2.borderColor: 因為考量所設置編輯器的頁面，須設置必填寫</p><h3 id="必填"><a href="#必填" class="headerlink" title="必填"></a>必填</h3><p>在 props 設置控制是否為必填寫</p><p>useEditor: 在 onUpdate、onBlur 兩動作去檢查是否有值，接著 hasError 取得檢查結果，分別會在邊框、以及區塊下方顯示提示訊息<br><img src="https://hackmd.io/_uploads/rJHjYVv_C.png" alt="image"></p><h3 id="text-align"><a href="#text-align" class="headerlink" title="text-align"></a>text-align</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">editor.<span class="title function_">chain</span>().<span class="title function_">focus</span>().<span class="title function_">setTextAlign</span>(<span class="string">&quot;left&quot;</span>).<span class="title function_">run</span>();</span><br></pre></td></tr></table></figure><p><a href="https://tiptap.dev/docs/editor/extensions/functionality/textalign">https://tiptap.dev/docs/editor/extensions/functionality/textalign</a></p><h3 id="fontSize"><a href="#fontSize" class="headerlink" title="fontSize"></a>fontSize</h3><p>是額外撰寫一個 fontSizeExtension.ts<br>透過 addGlobalAttributes 設置 html 樣式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">parseHTML</span>: <span class="function">(<span class="params">element</span>) =&gt;</span> element.<span class="property">style</span>.<span class="property">fontSize</span>.<span class="title function_">replace</span>(<span class="regexp">/[&#x27;&quot;]+/g</span>, <span class="string">&quot;&quot;</span>),</span><br></pre></td></tr></table></figure><p>HTML 元素中解析出屬性值，從元素的 style 屬性中提取 font-size，並移取代(“”)，目的是將 HTML 中的 font-size 樣式轉換為内部使用的屬性值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">renderHTML</span>: <span class="function">(<span class="params">attributes</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!attributes.<span class="property">fontSize</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">style</span>: <span class="string">`font-size: <span class="subst">$&#123;attributes.fontSize&#125;</span>`</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>若屬性沒有 fontSize 則為空物件，否則，會回傳包含 style 屬性的物件。</p><p><code>addCommands</code> 用於定義可在編輯器中執行的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">addCommands</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">setFontSize</span>:</span><br><span class="line">            <span class="function">(<span class="params">fontSize</span>) =&gt;</span></span><br><span class="line">                <span class="function">(<span class="params">&#123; chain &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">chain</span>().<span class="title function_">setMark</span>(<span class="string">&quot;textStyle&quot;</span>, &#123; fontSize &#125;).<span class="title function_">run</span>();</span><br><span class="line">            &#125;,</span><br><span class="line">        <span class="attr">unsetFontSize</span>:</span><br><span class="line">            <span class="function">() =&gt;</span></span><br><span class="line">            <span class="function">(<span class="params">&#123; chain &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_">chain</span>()</span><br><span class="line">                    .<span class="title function_">setMark</span>(<span class="string">&quot;textStyle&quot;</span>, &#123; <span class="attr">fontSize</span>: <span class="literal">null</span> &#125;)</span><br><span class="line">                    .<span class="title function_">removeEmptyTextStyle</span>()</span><br><span class="line">                    .<span class="title function_">run</span>();</span><br><span class="line">            &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>setFontSize: 設置內文文字大小</li><li>unsetFontSize: 取消內文文字大小的設置</li></ol><p>在使用時，用下拉選單可以選擇 fontSize 項目</p><p><img src="https://hackmd.io/_uploads/B1INtrPdR.png" alt="image"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">v-menu</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:activator</span>=<span class="string">&quot;&#123; props &#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v-btn</span></span></span><br><span class="line"><span class="tag">      <span class="attr">density</span>=<span class="string">&quot;compact&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;mr-2 rounded&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">color</span>=<span class="string">&quot;black&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">icon</span>=<span class="string">&quot;mdi-format-size&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-bind</span>=<span class="string">&quot;props&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:variant</span>=<span class="string">&quot;currentFontSize ? &#x27;tonal&#x27; : &#x27;text&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">v-btn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">v-list</span> <span class="attr">dense</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v-list-item</span> @<span class="attr">click</span>=<span class="string">&quot;unsetFontSize()&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; t(&#x27;Shared.Default&#x27;) &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">v-list-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v-list-item</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-for</span>=<span class="string">&quot;size in fontSizes&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:key</span>=<span class="string">&quot;size&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:class</span>=<span class="string">&quot;&#123; &#x27;list-item-active&#x27; : editor.isActive(&#x27;textStyle&#x27;, &#123; fontSize: `$&#123;size&#125;px` &#125;)&#125;&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">click</span>=<span class="string">&quot;setFontSize(`$&#123;size&#125;px`)&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v-list-item-title</span>&gt;</span>&#123;&#123; size &#125;&#125;<span class="tag">&lt;/<span class="name">v-list-item-title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">v-list-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">v-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">v-menu</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=<span class="string">&quot;ts&quot;</span>&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useEditor, <span class="title class_">EditorContent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@tiptap/vue-3&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StarterKit</span> <span class="keyword">from</span> <span class="string">&#x27;@tiptap/starter-kit&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TextStyle</span> <span class="keyword">from</span> <span class="string">&#x27;@tiptap/extension-text-style&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontSize</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./fontSizeExtension&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TextAlign</span> <span class="keyword">from</span> <span class="string">&#x27;@tiptap/extension-text-align&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Color</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@tiptap/extension-color&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">    <span class="attr">modelValue</span>: <span class="title class_">String</span> <span class="keyword">as</span> <span class="title class_">PropType</span>&lt;string | <span class="literal">null</span>&gt;,</span><br><span class="line">    <span class="attr">height</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">String</span> <span class="keyword">as</span> <span class="title class_">PropType</span>&lt;string&gt;,</span><br><span class="line">        <span class="attr">default</span>: <span class="string">&#x27;12rem&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">isRequired</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">        <span class="attr">default</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> &#123; t &#125; = <span class="title function_">useI18n</span>();</span><br><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;update:modelValue&#x27;</span>]);</span><br><span class="line"><span class="keyword">const</span> hasError = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">const</span> fontSizes = <span class="title function_">ref</span>([<span class="string">&#x27;12&#x27;</span>, <span class="string">&#x27;14&#x27;</span>, <span class="string">&#x27;16&#x27;</span>, <span class="string">&#x27;18&#x27;</span>, <span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;24&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> currentFontSize = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> editor = <span class="title function_">useEditor</span>(&#123;</span><br><span class="line">    <span class="attr">content</span>: props.<span class="property">modelValue</span>,</span><br><span class="line">    <span class="attr">onUpdate</span>: <span class="function">(<span class="params">&#123; editor &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> value = editor.<span class="property">isEmpty</span> ? <span class="string">&#x27;&#x27;</span> : editor.<span class="title function_">getHTML</span>();</span><br><span class="line">        <span class="keyword">if</span> (value) &#123;</span><br><span class="line">            <span class="title function_">validateContent</span>(value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">emit</span>(<span class="string">&#x27;update:modelValue&#x27;</span>, value);</span><br><span class="line">        <span class="title function_">updateToolbarState</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">onBlur</span>(<span class="params">&#123; editor &#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> value = editor.<span class="property">isEmpty</span> ? <span class="string">&#x27;&#x27;</span> : editor.<span class="title function_">getHTML</span>();</span><br><span class="line">        <span class="keyword">if</span> (!value &amp;&amp; props.<span class="property">isRequired</span>) &#123;</span><br><span class="line">            <span class="title function_">validateContent</span>(value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">extensions</span>: [</span><br><span class="line">        <span class="title class_">StarterKit</span>,</span><br><span class="line">        <span class="title class_">TextStyle</span>,</span><br><span class="line">        <span class="title class_">Color</span>,</span><br><span class="line">        <span class="title class_">FontSize</span>.<span class="title function_">configure</span>(&#123;</span><br><span class="line">            <span class="attr">types</span>: [<span class="string">&#x27;textStyle&#x27;</span>],</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="title class_">TextAlign</span>.<span class="title function_">configure</span>(&#123;</span><br><span class="line">            <span class="attr">types</span>: [<span class="string">&#x27;heading&#x27;</span>, <span class="string">&#x27;paragraph&#x27;</span>],</span><br><span class="line">        &#125;),</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">validateContent</span> = (<span class="params">content: string</span>) =&gt; &#123;</span><br><span class="line">    hasError.<span class="property">value</span> = !content;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">setFontSize</span> = (<span class="params">size: string</span>) =&gt; &#123;</span><br><span class="line">    currentFontSize.<span class="property">value</span> = size;</span><br><span class="line">    editor.<span class="property">value</span>?.<span class="title function_">chain</span>().<span class="title function_">focus</span>().<span class="title function_">setFontSize</span>(size).<span class="title function_">run</span>();</span><br><span class="line">    <span class="title function_">updateToolbarState</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">unsetFontSize</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    currentFontSize.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    editor.<span class="property">value</span>?.<span class="title function_">chain</span>().<span class="title function_">focus</span>().<span class="title function_">unsetFontSize</span>().<span class="title function_">run</span>();</span><br><span class="line">    <span class="title function_">updateToolbarState</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateToolbarState</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    currentColor.<span class="property">value</span> = editor.<span class="property">value</span>?.<span class="title function_">getAttributes</span>(<span class="string">&#x27;textStyle&#x27;</span>).<span class="property">color</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    currentFontSize.<span class="property">value</span> = editor.<span class="property">value</span>?.<span class="title function_">getAttributes</span>(<span class="string">&#x27;textStyle&#x27;</span>).<span class="property">fontSize</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">watch</span>(<span class="function">() =&gt;</span> props.<span class="property">modelValue</span>, <span class="function">(<span class="params">newValue</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (editor.<span class="property">value</span> &amp;&amp; newValue !== editor.<span class="property">value</span>.<span class="title function_">getHTML</span>()) &#123;</span><br><span class="line">        editor.<span class="property">value</span>.<span class="property">commands</span>.<span class="title function_">setContent</span>(newValue || <span class="string">&#x27;&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">onBeforeUnmount</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    editor.<span class="property">value</span>?.<span class="title function_">destroy</span>();</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>參考資料：<br><a href="https://github.com/ueberdosis/tiptap/issues/2730">https://github.com/ueberdosis/tiptap/issues/2730</a><br><a href="https://gist.github.com/gregveres/64ec1d8a733feb735b7dd4c46331abae">https://gist.github.com/gregveres/64ec1d8a733feb735b7dd4c46331abae</a></p><h3 id="設置文字顏色"><a href="#設置文字顏色" class="headerlink" title="設置文字顏色"></a>設置文字顏色</h3><p>使用顏色設置方法<br><code>currentColor</code> 用來決定顯示該項目被選擇</p><ol><li>:variant: 用來設置按鈕風格樣式，tonal 為按鈕有背景色，而 text 為文字有顏色但沒有背景色。</li><li>在下拉選單的顏色綁定陣列設置的色彩，並透過 setColor 決定顏色</li></ol><p><img src="https://hackmd.io/_uploads/rke5W8vuR.png" alt="image"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">v-menu</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:activator</span>=<span class="string">&quot;&#123; props &#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v-btn</span></span></span><br><span class="line"><span class="tag">      <span class="attr">density</span>=<span class="string">&quot;compact&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;mr-2 rounded&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:color</span>=<span class="string">&quot;currentColor ? &#x27;white&#x27; : &#x27;black&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">icon</span>=<span class="string">&quot;mdi-format-color-text&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-bind</span>=<span class="string">&quot;props&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:variant</span>=<span class="string">&quot;currentColor ? &#x27;tonal&#x27; : &#x27;text&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:style</span>=<span class="string">&quot;&#123; &#x27;background-color&#x27;: currentColor &#125;&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">v-btn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">v-list</span> <span class="attr">dense</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v-list-item</span> @<span class="attr">click</span>=<span class="string">&quot;unsetColor()&quot;</span>&gt;</span> &#123;&#123; t(&#x27;Shared.Default&#x27;) &#125;&#125; <span class="tag">&lt;/<span class="name">v-list-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">v-list-item</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-for</span>=<span class="string">&quot;color in textColor&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:key</span>=<span class="string">&quot;color&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;d-flex align-center justify-center&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">click</span>=<span class="string">&quot;setColor(color)&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">v-list-item-title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:style</span>=<span class="string">&quot;&#123; &#x27;background-color&#x27;: color &#125;&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;editor-color-container&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:class</span>=<span class="string">&quot;&#123; &#x27;list-colorPicker-active&#x27; : isColorActive(color) &#125;&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">v-list-item-title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">v-list-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">v-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">v-menu</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=<span class="string">&quot;ts&quot;</span>&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useEditor, <span class="title class_">EditorContent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@tiptap/vue-3&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StarterKit</span> <span class="keyword">from</span> <span class="string">&#x27;@tiptap/starter-kit&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TextStyle</span> <span class="keyword">from</span> <span class="string">&#x27;@tiptap/extension-text-style&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TextAlign</span> <span class="keyword">from</span> <span class="string">&#x27;@tiptap/extension-text-align&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Color</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@tiptap/extension-color&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">    <span class="attr">modelValue</span>: <span class="title class_">String</span> <span class="keyword">as</span> <span class="title class_">PropType</span>&lt;string | <span class="literal">null</span>&gt;,</span><br><span class="line">    <span class="attr">height</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">String</span> <span class="keyword">as</span> <span class="title class_">PropType</span>&lt;string&gt;,</span><br><span class="line">        <span class="attr">default</span>: <span class="string">&#x27;12rem&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">isRequired</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">        <span class="attr">default</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> &#123; t &#125; = <span class="title function_">useI18n</span>();</span><br><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;update:modelValue&#x27;</span>]);</span><br><span class="line"><span class="keyword">const</span> hasError = <span class="title function_">ref</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">const</span> textColor = <span class="title function_">ref</span>([<span class="string">&#x27;#F44336&#x27;</span>, <span class="string">&#x27;#2196F3&#x27;</span>,<span class="string">&#x27;#FFC107&#x27;</span>, <span class="string">&#x27;#757575&#x27;</span>, <span class="string">&#x27;#BF360C&#x27;</span>, <span class="string">&#x27;#FF9800&#x27;</span>])</span><br><span class="line"><span class="keyword">const</span> currentColor = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> currentFontSize = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> editor = <span class="title function_">useEditor</span>(&#123;</span><br><span class="line">    <span class="attr">content</span>: props.<span class="property">modelValue</span>,</span><br><span class="line">    <span class="attr">onUpdate</span>: <span class="function">(<span class="params">&#123; editor &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> value = editor.<span class="property">isEmpty</span> ? <span class="string">&#x27;&#x27;</span> : editor.<span class="title function_">getHTML</span>();</span><br><span class="line">        <span class="keyword">if</span> (value) &#123;</span><br><span class="line">            <span class="title function_">validateContent</span>(value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">emit</span>(<span class="string">&#x27;update:modelValue&#x27;</span>, value);</span><br><span class="line">        <span class="title function_">updateToolbarState</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">onBlur</span>(<span class="params">&#123; editor &#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> value = editor.<span class="property">isEmpty</span> ? <span class="string">&#x27;&#x27;</span> : editor.<span class="title function_">getHTML</span>();</span><br><span class="line">        <span class="keyword">if</span> (!value &amp;&amp; props.<span class="property">isRequired</span>) &#123;</span><br><span class="line">            <span class="title function_">validateContent</span>(value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">extensions</span>: [</span><br><span class="line">        <span class="title class_">StarterKit</span>,</span><br><span class="line">        <span class="title class_">TextStyle</span>,</span><br><span class="line">        <span class="title class_">Color</span>,</span><br><span class="line">        <span class="title class_">FontSize</span>.<span class="title function_">configure</span>(&#123;</span><br><span class="line">            <span class="attr">types</span>: [<span class="string">&#x27;textStyle&#x27;</span>],</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="title class_">TextAlign</span>.<span class="title function_">configure</span>(&#123;</span><br><span class="line">            <span class="attr">types</span>: [<span class="string">&#x27;heading&#x27;</span>, <span class="string">&#x27;paragraph&#x27;</span>],</span><br><span class="line">        &#125;),</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">validateContent</span> = (<span class="params">content: string</span>) =&gt; &#123;</span><br><span class="line">    hasError.<span class="property">value</span> = !content;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">setColor</span> = (<span class="params">color: string</span>) =&gt; &#123;</span><br><span class="line">    currentColor.<span class="property">value</span> = color;</span><br><span class="line">    editor.<span class="property">value</span>?.<span class="title function_">chain</span>().<span class="title function_">focus</span>().<span class="title function_">setColor</span>(color).<span class="title function_">run</span>();</span><br><span class="line">    <span class="title function_">updateToolbarState</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">unsetColor</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    currentColor.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    editor.<span class="property">value</span>?.<span class="title function_">chain</span>().<span class="title function_">focus</span>().<span class="title function_">unsetColor</span>().<span class="title function_">run</span>();</span><br><span class="line">    <span class="title function_">updateToolbarState</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateToolbarState</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    currentColor.<span class="property">value</span> = editor.<span class="property">value</span>?.<span class="title function_">getAttributes</span>(<span class="string">&#x27;textStyle&#x27;</span>).<span class="property">color</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    currentFontSize.<span class="property">value</span> = editor.<span class="property">value</span>?.<span class="title function_">getAttributes</span>(<span class="string">&#x27;textStyle&#x27;</span>).<span class="property">fontSize</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// active color</span></span><br><span class="line"><span class="keyword">const</span> isColorActive = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> <span class="function">(<span class="params">color: string</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> editor.<span class="property">value</span>?.<span class="title function_">isActive</span>(<span class="string">&#x27;textStyle&#x27;</span>, &#123; color &#125;) || <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">watch</span>(<span class="function">() =&gt;</span> props.<span class="property">modelValue</span>, <span class="function">(<span class="params">newValue</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (editor.<span class="property">value</span> &amp;&amp; newValue !== editor.<span class="property">value</span>.<span class="title function_">getHTML</span>()) &#123;</span><br><span class="line">        editor.<span class="property">value</span>.<span class="property">commands</span>.<span class="title function_">setContent</span>(newValue || <span class="string">&#x27;&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">onBeforeUnmount</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    editor.<span class="property">value</span>?.<span class="title function_">destroy</span>();</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>本文介紹了如何使用 Tiptap 在 Vue3 中實現具有多項功能的文字編輯器。通過靈活的擴展，您可以輕鬆添加所需功能。希望透過範例和解釋能幫助更好地理解和使用 Tiptap。如果您有更多需求，請參考官方文檔進行進一步探索。</p>]]></content>
      
      
      
        <tags>
            
            <tag> vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vitest-i18n</title>
      <link href="/2024/04/27/vitest-i18n/"/>
      <url>/2024/04/27/vitest-i18n/</url>
      
        <content type="html"><![CDATA[<p>最近嘗試在專案內加入測試，詢問朋友後建議先從 utils 中共用的邏輯函式開始，而在共用的邏輯函式中，會有幾個是 i18n 相關的函式。<br>因為頁面中常會用到將數值，轉換為顯示在畫面上的文字，如下：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getType</span> = (<span class="params"><span class="keyword">type</span>: <span class="built_in">number</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">switch</span> (<span class="keyword">type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">t</span>(<span class="string">&#x27;Type.Auto&#x27;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">t</span>(<span class="string">&#x27;Type.Manual&#x27;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">t</span>(<span class="string">&#x27;Type.Mix&#x27;</span>)</span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在進行測試時，總想說是否要先選定一語系，如中文\英文，然後確認他轉換的是否為該文字<br>但是經過嘗試後，覺得或許不應該是檢查轉換後的文字，應該要以對應 key 來檢查。<br>參考 <a href="https://stackoverflow.com/questions/72260793/how-to-mock-stub-vue-i18n">overflow</a></p><ul><li>因此專案是使用 quasar，所以在 i18n.t 方法，引入的位置是 boot/i18n.ts</li><li>在測試中，可以執行測試函式，帶入對應數值，並檢查是否回傳對應的 key</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 在測試中覆寫模擬 i18n.t 方法</span></span><br><span class="line">vi.<span class="title function_">mock</span>(<span class="string">&#x27;../../../src/boot/i18n&#x27;</span>, <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">i18n</span>: &#123;</span><br><span class="line">        <span class="attr">global</span>: &#123;</span><br><span class="line">            <span class="attr">t</span>: <span class="function">(<span class="params">key: <span class="built_in">string</span></span>) =&gt;</span> key, <span class="comment">// 提供模擬的 t 函式</span></span><br><span class="line">            <span class="attr">locale</span>: <span class="string">&#x27;en&#x27;</span> <span class="comment">// 假設默認的 locale 值</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;getType&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">it</span>(<span class="string">&#x27;should return the correct string for type 0&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">expect</span>(<span class="title function_">getTradingType</span>(<span class="number">0</span>)).<span class="title function_">toBe</span>(<span class="string">&#x27;Type.Auto&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="title function_">it</span>(<span class="string">&#x27;should return the correct string for type 1&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">expect</span>(<span class="title function_">getTradingType</span>(<span class="number">1</span>)).<span class="title function_">toBe</span>(<span class="string">&#x27;Type.Manual&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="title function_">it</span>(<span class="string">&#x27;should return the correct string for type 2&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">expect</span>(<span class="title function_">getTradingType</span>(<span class="number">2</span>)).<span class="title function_">toBe</span>(<span class="string">&#x27;Type.Mix&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="title function_">it</span>(<span class="string">&#x27;should return null for an unknown type&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">expect</span>(<span class="title function_">getTradingType</span>(<span class="number">999</span>)).<span class="title function_">toBeNull</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="小結上述方式："><a href="#小結上述方式：" class="headerlink" title="小結上述方式："></a>小結上述方式：</h3><p>使用全局模擬，vi.mock 全局模擬 i18n.t 方法，並提供模擬的 t 函式，這樣就可以在測試中，直接檢查是否回傳對應的 key，而不用檢查轉換後的文字。</p><p>另外，在跨頁面也會有共用的下拉選單，將此下拉選單的選項，也提取出來，並進行測試。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> directionOpt = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> ([</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="title function_">t</span>(<span class="string">&#x27;Shared.right&#x27;</span>), <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="title function_">t</span>(<span class="string">&#x27;Shared.wrong&#x27;</span>), <span class="attr">value</span>: <span class="number">1</span> &#125;</span><br><span class="line">]))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>原本也想是否直接檢查 key 是否正確即可。但基於困惑，就嘗試丟 chatGpt 詢問</p><span id="more"></span><ul><li>給予 mockT 方法，並提供對應的 key，並檢查是否有被呼叫</li><li>定義 directionOpt，並檢查是否回傳對應的 key</li><li>但此方式卻 directionOpt 撰寫於測試檔案中</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mockT = vi.<span class="title function_">fn</span>(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> translations = &#123;</span><br><span class="line">        <span class="string">&#x27;Shared.right&#x27;</span>: <span class="string">&#x27;正確&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Shared.wrong&#x27;</span>: <span class="string">&#x27;錯誤&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> translations[key]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 定義 directionOpt</span></span><br><span class="line"><span class="keyword">const</span> directionOpt = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> ([</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="title function_">mockT</span>(<span class="string">&#x27;Shared.right&#x27;</span>), <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">label</span>: <span class="title function_">mockT</span>(<span class="string">&#x27;Shared.wrong&#x27;</span>), <span class="attr">value</span>: <span class="number">1</span> &#125;</span><br><span class="line">]))</span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;directionOpt&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">it</span>(<span class="string">&#x27;should return the correct options&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> options = directionOpt.<span class="property">value</span></span><br><span class="line"></span><br><span class="line">        <span class="title function_">expect</span>(options).<span class="title function_">toEqual</span>([</span><br><span class="line">            &#123; <span class="attr">label</span>: <span class="string">&#x27;正確&#x27;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">label</span>: <span class="string">&#x27;錯誤&#x27;</span>, <span class="attr">value</span>: <span class="number">1</span> &#125;</span><br><span class="line">        ])</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 确保模拟的 t 函数被正确调用</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;mock&#x27;</span>, mockT)</span><br><span class="line">        <span class="title function_">expect</span>(mockT).<span class="title function_">toHaveBeenCalledWith</span>(<span class="string">&#x27;Shared.right&#x27;</span>)</span><br><span class="line">        <span class="title function_">expect</span>(mockT).<span class="title function_">toHaveBeenCalledWith</span>(<span class="string">&#x27;Shared.wrong&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>後來，我回歸我想測試的目標在於，原函式 computed 是否使用這些 key，因此，就以以下方式進行測試</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">describe</span>(<span class="string">&quot;directionOpt&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;should return the correct options&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> options = directionOpt.<span class="property">value</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// t 函式直接反回 key 值，驗證 computed 是否使用这些 key</span></span><br><span class="line">    <span class="title function_">expect</span>(options).<span class="title function_">toEqual</span>([</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;Shared.right&quot;</span>, <span class="attr">value</span>: <span class="number">0</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;Shared.wrong&quot;</span>, <span class="attr">value</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    ]);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css-grid</title>
      <link href="/2024/01/06/css-grid/"/>
      <url>/2024/01/06/css-grid/</url>
      
        <content type="html"><![CDATA[<p>在 Youtube 看到 Kevin Powell 介紹使用 grid 來作為 wrapper，以自適應網頁的縮放。</p><p>首先基本常用 grid 方式</p><ul><li>創建一個包含三欄等寬的網格布局</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content-grid</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加入使用 using named grid lines，定義出欄的 content 範圍</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content-grid</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr [content-start] <span class="number">1</span>fr [content-end] <span class="number">1</span>fr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>設計一個 class 給他，如果在 content-grid 以下的元素，會將以下的元素放在 content 之間</p><ul><li>應用到 <code>.content-grid</code> 內部的每一個直接子元素</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content-grid</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr [content-start] <span class="number">1</span>fr [content- end] <span class="number">1</span>fr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content-grid</span> &gt; * &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: content;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Layout-grid-可以先設置："><a href="#Layout-grid-可以先設置：" class="headerlink" title="Layout grid 可以先設置："></a>Layout grid 可以先設置：</h3><ul><li>就可以看到 content 範圍<br><img src="https://hackmd.io/_uploads/HyCjULL_p.png" alt="image"><br><img src="https://hackmd.io/_uploads/HkJWv8UO6.png" alt="image"></li></ul><span id="more"></span><h2 id="設置-breakout"><a href="#設置-breakout" class="headerlink" title="設置 breakout"></a>設置 breakout</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content-grid</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">100px</span> [breakout-start] <span class="number">100px</span> [content-start] <span class="number">1</span>fr [content-end] <span class="number">100px</span> [breakout-end] <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content-grid</span> &gt; * &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content-grid</span> &gt; <span class="selector-class">.breakout</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: breakout;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://hackmd.io/_uploads/HycvDLIO6.png" alt="image"></p><h2 id="不可缺的-full-width"><a href="#不可缺的-full-width" class="headerlink" title="不可缺的 full-width"></a>不可缺的 full-width</h2><ul><li>利用網格線的 最左側以及最右側 grid line</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content-grid</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: [full-width-start] <span class="number">100px</span> [breakout-start] <span class="number">100px</span> [content-start] <span class="number">1</span>fr [content-end] <span class="number">100px</span> [breakout-end] <span class="number">100px</span> [full-width-end];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content-grid</span> &gt; * &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content-grid</span> &gt; <span class="selector-class">.breakout</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: breakout;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content-grid</span> &gt; <span class="selector-class">.full-width</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: full-width;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>希望區塊的背景可以 full-with 但內容符合文章(content)寬度<br><code>.content-grid &gt; .full-width</code></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content-grid</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">grid-template-columns</span>: [full-width-start] <span class="number">100px</span> [breakout-start] <span class="number">100px</span> [content-start] <span class="number">1</span>fr [content-end] <span class="number">100px</span> [breakout-end] <span class="number">100px</span> [full-width-end];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content-grid</span> &gt; <span class="selector-pseudo">:not</span>(<span class="selector-class">.breakout</span>, <span class="selector-class">.full-width</span>),</span><br><span class="line"><span class="selector-class">.full-width</span> &gt; <span class="selector-pseudo">:not</span>(<span class="selector-class">.breakout</span>, <span class="selector-class">.full-width</span>) &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content-grid</span> &gt; <span class="selector-class">.breakout</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: breakout;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content-grid</span> &gt; <span class="selector-class">.full-width</span> &#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: full-width;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: inherit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更細微的調整，設置變數以符合-responsive"><a href="#更細微的調整，設置變數以符合-responsive" class="headerlink" title="更細微的調整，設置變數以符合 responsive"></a>更細微的調整，設置變數以符合 responsive</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.content-grid</span>&#123;</span><br><span class="line"> <span class="attr">--padding-inline</span>: <span class="number">2rem</span> ;</span><br><span class="line"> <span class="attr">--content-max-width</span>: <span class="number">70ch</span>;</span><br><span class="line"> <span class="attr">--breakout-max-width</span>: <span class="number">85ch</span></span><br><span class="line">--breakout-size: <span class="built_in">calc</span>(</span><br><span class="line">(<span class="built_in">var</span>(--breakout-max-width) - <span class="built_in">var</span>(--content-max-width)) / <span class="number">2</span></span><br><span class="line">);</span><br><span class="line"><span class="attribute">display</span>: grid;</span><br><span class="line"></span><br><span class="line"><span class="attribute">grid-template-columns</span>:</span><br><span class="line">[full-width-start] <span class="built_in">minmax</span>(<span class="built_in">var</span>(--padding-inline), <span class="number">1</span>fr)</span><br><span class="line">[breakout-start] <span class="built_in">minmax</span>(<span class="number">0</span>, <span class="built_in">var</span>(--breakout-size))</span><br><span class="line">[content-start] <span class="built_in">min</span>(<span class="number">100%</span> - (<span class="built_in">var</span>(--padding-inline) * <span class="number">2</span> ), <span class="built_in">var</span>(--content-max-width)) [content-end] <span class="built_in">minmax</span>(<span class="number">0</span>, <span class="built_in">var</span>(--breakout-size)) [breakout-end]</span><br><span class="line"><span class="built_in">minmax</span>(<span class="built_in">var</span>(--padding-inline), <span class="number">1</span>fr) [full-width-end];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>–padding-inline : 設計整體頁面 padding</li><li>ch：CSS3 加入了 ch 這個單位，廣義來說就是『一個字元』，相當於用來呈現的字體裡『0』這個字形的步進度量 (advance measure)</li></ol><ul><li>這裡，70ch 意味著最大寬度是當前字體「0」字符寬度的 70 倍。</li></ul><ol start="3"><li>breakout-size: 計算為 breakout 的最大寬與 content 最大寬度 之差的一半，用來設定邊界</li><li>整體 grid-template-columns 的設計</li></ol><ul><li>full-width-start 網格的起始</li><li>minmax(var(–padding-inline), 1fr) : 設置到 full-width 最大大小為 1fr, 最小則會保有 padding-inline 間距</li><li>[breakout-start] 是下一個網格線的名稱: 大小設置為從 0 到 var(–breakout-size)</li><li><code>[content-start] min(100% - (var(--padding-inline) * 2 ), var(--content-max-width)) [content-end]</code>: 標記了內容區域的開始和結束，–content-max-width 是 70ch , 如果寬度小於 70ch ，就會使用<code>100% - (var(--padding-inline) * 2</code>, 如果大於 70ch , 就會使用 content-max-width</li></ul><ol start="5"><li>在 content 後，接續 breakout-end, full-width-end 同樣相對 start 的區間</li></ol><h3 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h3><p>在未來可以嘗試應用此 grid template 作為整體網頁 layout 設計，且套用方式可以修改以下變數即可彈性變動整體的寬度以及斷點。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--padding-inline: 2rem;</span><br><span class="line">--content-max-width: 70ch;</span><br><span class="line">--breakout-max-width: 85ch;</span><br></pre></td></tr></table></figure><h3 id="補充介紹-min-minmax"><a href="#補充介紹-min-minmax" class="headerlink" title="補充介紹 min(), minmax()"></a>補充介紹 <code>min()</code>, <code>minmax()</code></h3><p><code>minmax()</code><br>minmax() 函數在 CSS Grid 布局中常用來定義網格軌道（列或行）的大小範圍。這個函數接受兩個參數：最小值和最大值，用來設置一個軌道的最小和最大大小。當網格容器調整大小時，這個軌道的實際大小會在這個範圍內變化。</p><p>例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">grid-template-columns</span>: <span class="built_in">minmax</span>(<span class="number">100px</span>, <span class="number">1</span>fr);</span><br></pre></td></tr></table></figure><p>這裡，該列的最小寬度設為 100 像素，最大寬度設為 1fr（即可用空間的一個分數單位）。如果容器的寬度大於 100 像素，該列將擴展以佔用更多可用空間，但不會小於 100 像素。</p><p><code>min()</code><br>min() 函數在 CSS 中用於選擇一組值中的最小值。在網格佈局中，它可以用來確保某個軌道的大小不會超過一系列可能值中的最小值。</p><p>例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">grid-template-columns</span>: <span class="built_in">min</span>(<span class="number">100%</span>, <span class="number">500px</span>);</span><br></pre></td></tr></table></figure><p>這裡，該列的寬度將被設置為 100% 和 500 像素中的較小值。這意味著，如果容器的寬度超過 500 像素，該列的寬度將被限制在 500 像素；如果容器的寬度小於 500 像素，則該列的寬度將等於容器的寬度。</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout/Grid_layout_using_named_grid_lines">MDN-Grid layout</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>製作簽名面板元件</title>
      <link href="/2023/12/23/signaturePad-component/"/>
      <url>/2023/12/23/signaturePad-component/</url>
      
        <content type="html"><![CDATA[<p>因工作需求需要製作簽名面板，查看套件使用度較高 <a href="https://www.npmjs.com/package/signature_pad">signature_pad</a></p><ol><li>在專案內安裝 signature_pad 套件 <code>npm i signature_pad</code></li><li>嘗試將引入的簽名套件包成可以重複使用的元件。</li></ol><p>initializeSignaturePad : 進行初始化，如尺寸大小、筆的顏色、畫布背景色等。這邊將這些設置放在 props 讓使用時可以保有一些彈性空間。<br>resizeCanvas : 用於調整畫布的大小，目的是確保畫布的大小能夠適應不同的設備和螢幕解析度。<br>saveSignature\ clearSignature: 顧名思義就是儲存、清除簽名<br>注意：因為將簽名功能包成元件，使用 emit 將儲存的簽名傳到外層。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">class</span>=<span class="string">&quot;signature-pad&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:style</span>=<span class="string">&quot;&#123; width: props.width, height: props.height &#125;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">ref</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;clearSignature&quot;</span>&gt;</span>清除簽名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;saveSignature&quot;</span>&gt;</span>儲存簽名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; onMounted, ref, watch, onUnmounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">SignaturePad</span> <span class="keyword">from</span> <span class="string">&quot;signature_pad&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">width</span>: &#123; <span class="attr">type</span>: <span class="title class_">String</span>, <span class="attr">default</span>: <span class="string">&quot;100%&quot;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">height</span>: &#123; <span class="attr">type</span>: <span class="title class_">String</span>, <span class="attr">default</span>: <span class="string">&quot;300px&quot;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">penColor</span>: &#123; <span class="attr">type</span>: <span class="title class_">String</span>, <span class="attr">default</span>: <span class="string">&quot;black&quot;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">backgroundColor</span>: &#123; <span class="attr">type</span>: <span class="title class_">String</span>, <span class="attr">default</span>: <span class="string">&quot;white&quot;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">options</span>: &#123; <span class="attr">type</span>: <span class="title class_">Object</span>, <span class="attr">default</span>: <span class="function">() =&gt;</span> (&#123;&#125;) &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> canvas = <span class="title function_">ref</span>(<span class="literal">null</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">let</span> signaturePad = <span class="literal">null</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> <span class="title function_">initializeSignaturePad</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">if</span> (canvas.<span class="property">value</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    signaturePad = <span class="keyword">new</span> <span class="title class_">SignaturePad</span>(canvas.<span class="property">value</span>, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      ...props.<span class="property">options</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">penColor</span>: props.<span class="property">penColor</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">backgroundColor</span>: props.<span class="property">backgroundColor</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> <span class="title function_">resizeCanvas</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">//window.devicePixelRatio 來獲取設備的像素密度，如果無法獲取到，則將ratio設為1。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">const</span> ratio = <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span> || <span class="number">1</span>, <span class="number">1</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">//根據畫布元素的寬度和高度，乘以ratio，來設定畫布的寬度和高度。為了確保畫布在高像素密度的設備上顯示正確。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  canvas.<span class="property">value</span>.<span class="property">width</span> = canvas.<span class="property">value</span>.<span class="property">offsetWidth</span> * ratio;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  canvas.<span class="property">value</span>.<span class="property">height</span> = canvas.<span class="property">value</span>.<span class="property">offsetHeight</span> * ratio;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">//獲取畫布的2D繪圖上下文，並使用scale方法將繪圖上下文的縮放比例設為ratio。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  canvas.<span class="property">value</span>.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>).<span class="title function_">scale</span>(ratio, ratio);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  signaturePad.<span class="title function_">clear</span>(); <span class="comment">// Clears any existing drawing</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&quot;clear&quot;</span>, <span class="string">&quot;save&quot;</span>]);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> <span class="title function_">saveSignature</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">if</span> (signaturePad) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> signatureImage = signaturePad.<span class="title function_">toDataURL</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">emit</span>(<span class="string">&quot;save&quot;</span>, signatureImage);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">return</span> <span class="literal">null</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> <span class="title function_">clearSignature</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">if</span> (signaturePad) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    signaturePad.<span class="title function_">clear</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">emit</span>(<span class="string">&quot;clear&quot;</span>); <span class="comment">// 發射清除事件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// Initialize and resize canvas</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">initializeSignaturePad</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, resizeCanvas);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">resizeCanvas</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">onUnmounted</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&quot;resize&quot;</span>, resizeCanvas);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// Watch for prop changes</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">watch</span>(</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="function">() =&gt;</span> [props.<span class="property">penColor</span>, props.<span class="property">backgroundColor</span>, props.<span class="property">options</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">initializeSignaturePad</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#123; <span class="attr">deep</span>: <span class="literal">true</span> &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="參考資料："><a href="#參考資料：" class="headerlink" title="參考資料："></a>參考資料：</h3><p><a href="https://github.com/WangShayne/vue3-signature">https://github.com/WangShayne/vue3-signature</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vueTest - Vue test util (2)</title>
      <link href="/2023/08/05/vueTest-3/"/>
      <url>/2023/08/05/vueTest-3/</url>
      
        <content type="html"><![CDATA[<p>延續上次介紹常用的 Vue test util 語法，今天要再多介紹幾個。</p><h2 id="text-與-html"><a href="#text-與-html" class="headerlink" title=".text() 與 .html()"></a><code>.text()</code> 與 <code>.html()</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hello&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      For a guide and recipes on how to configure / customize this project,<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      check out the</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://cli.vuejs.org&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;noopener&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        vue-cli documentation</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>使用 <code>html</code> 若直接 console 出會將 template 呈現出來</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">html=&gt; &lt;div class=&quot;hello&quot;&gt;</span><br><span class="line">      &lt;p&gt; For a guide and recipes on how to configure / customize this project,&lt;br&gt; check out the &lt;a href=&quot;https://cli.vuejs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; vue-cli documentation &lt;/a&gt;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>在測試當中，可以直接抓取該斷落的內容進行比對</p><ol><li>取得該段的 html</li><li>取得該 DOM 元素，並進行 html 的比對</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; shallowMount &#125; <span class="keyword">from</span> <span class="string">&quot;@vue/test-utils&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HelloWorld</span> <span class="keyword">from</span> <span class="string">&quot;./HelloWorld.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&quot;HelloWorld.vue&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;html &amp; text&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> wrapper = <span class="title function_">shallowMount</span>(<span class="title class_">HelloWorld</span>);</span><br><span class="line">    <span class="comment">// console.log(&quot;html=&gt;&quot;, wrapper.html());</span></span><br><span class="line">    <span class="comment">// console.log(&quot;text=&gt;&quot;, wrapper.text());</span></span><br><span class="line">    <span class="title function_">expect</span>(wrapper.<span class="title function_">html</span>()).<span class="title function_">toMatch</span>(</span><br><span class="line">      <span class="string">`&lt;a href=&quot;https://cli.vuejs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; vue-cli documentation &lt;/a&gt;`</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;aLink_&gt;&quot;</span>, wrapper.<span class="title function_">find</span>(<span class="string">&#x27;a&#x27;</span>).<span class="title function_">html</span>())</span><br><span class="line">    <span class="title function_">expect</span>(wrapper.<span class="title function_">find</span>(<span class="string">&#x27;a&#x27;</span>).<span class="title function_">html</span>()).<span class="title function_">toMatch</span>(</span><br><span class="line">      <span class="string">`&lt;a href=&quot;https://cli.vuejs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; vue-cli documentation &lt;/a&gt;`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="component-的簡易測試"><a href="#component-的簡易測試" class="headerlink" title="component 的簡易測試"></a>component 的簡易測試</h2><p>如課程範例為一個卡片，裡面有一個圖片元件(ImageBox)、內文元件(Content)</p><p><img src="https://hackmd.io/_uploads/ryWgDUjoh.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;CardBox&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">ImageBox</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Content</span> <span class="attr">v-if</span>=<span class="string">&quot;isOpenContent&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>test goal: 檢查 component 是否有隨狀態而成功渲染與否。</p><h3 id="findComponent"><a href="#findComponent" class="headerlink" title="findComponent"></a>findComponent</h3><p>判斷 component 是否有存在<br>首先要如何抓元件？</p><ol><li>因頁面中是掛載組件，所以這邊使用 mount</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mount &#125; <span class="keyword">from</span> <span class="string">&quot;@vue/test-utils&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CardBox</span> <span class="keyword">from</span> <span class="string">&quot;./index.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ImageBox</span> <span class="keyword">from</span> <span class="string">&quot;./ImageBox.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Content</span> <span class="keyword">from</span> <span class="string">&quot;./Content.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&quot;CardBox.vue&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;findComponent function test&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> wrapper = <span class="title function_">mount</span>(<span class="title class_">CardBox</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">expect</span>(wrapper.<span class="title function_">findComponent</span>(<span class="title class_">ImageBox</span>).<span class="title function_">exists</span>()).<span class="title function_">toBe</span>(<span class="literal">true</span>);</span><br><span class="line">    <span class="title function_">expect</span>(wrapper.<span class="title function_">findComponent</span>(<span class="title class_">Content</span>).<span class="title function_">exists</span>()).<span class="title function_">toBe</span>(<span class="literal">true</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>findComponent(‘.class’)</li><li>findComponent({name: a}) 組建名稱</li><li>findComponent({ref: ‘ref’}) 組件實體：綁在 DOM 上的 ref</li><li>findComponent(component) 取得組件：抓取導入的組件</li></ul><h3 id="findAllComponents"><a href="#findAllComponents" class="headerlink" title="findAllComponents"></a>findAllComponents</h3><ul><li>此方式是會回傳陣列，要使用 <code>at()</code></li><li>不支援 ref 查找</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">expect</span>(wrapper.<span class="title function_">findAllComponents</span>(<span class="title class_">ImageBox</span>).<span class="title function_">at</span>(<span class="number">0</span>).<span class="title function_">exists</span>()).<span class="title function_">toBe</span>(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Using find to search for a Component is deprecated and will be removed. Use findComponent instead. The find method will continue to work for finding elements using any valid selector（tag selectors (div, foo, bar), attribute selectors ([foo], [foo=&quot;bar&quot;])...）.</span><br></pre></td></tr></table></figure><h2 id="測試-class-and-attribute"><a href="#測試-class-and-attribute" class="headerlink" title="測試 class and attribute"></a>測試 class and attribute</h2><p>可以使用在狀態的切換或是驗證資料的對錯，可以用 class 存在與否驗證。</p><h3 id="attribute"><a href="#attribute" class="headerlink" title="attribute"></a>attribute</h3><ul><li>資料在渲染的時候，是否有正確的塞入到 attribute。</li><li>在做資料的渲然，將拿到的內容塞入 attribute 中，如 a link 的 href, img src</li></ul><p>範例題目延續上述使用得內文元件(Content)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;@vue/reactivity&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">styleColor</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">default</span>: <span class="string">&quot;red&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      props,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">:class</span>=<span class="string">&quot;[&#x27;card_title&#x27;, props.styleColor]&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      Vue  vue-test-utils</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>click<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;card_text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      Vue Test Utils (VTU) is a set of utility functions aimed to simplify testing Vue.js components. It provides some methods to mount and interact with Vue components in an isolated manner!</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>test goal: 測試 <code>&lt;h1&gt;</code> 有沒有存在 styleColor</p><ul><li>使用 <code>class()</code> 帶入參數，就會去檢查該 class 是否存在<br>測試架構：</li></ul><ol><li>先確定該元件有被渲染出來</li><li>找到 h1 tag 並查看是否有 styleColor 傳入</li><li>元件內的 a link 放入 href</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; shallowMount &#125; <span class="keyword">from</span> <span class="string">&quot;@vue/test-utils&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Content</span> <span class="keyword">from</span> <span class="string">&quot;./Content.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&quot;Content.vue&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;find component&quot;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> wrapper = <span class="title function_">shallowMount</span>(<span class="title class_">Content</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">expect</span>(wrapper.<span class="title function_">find</span>(<span class="string">&#x27;.card_title&#x27;</span>).<span class="title function_">exists</span>()).<span class="title function_">toBe</span>(<span class="literal">true</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;check h1 tag have red class&quot;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> wrapper = <span class="title function_">shallowMount</span>(<span class="title class_">Content</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">expect</span>(wrapper.<span class="title function_">find</span>(<span class="string">&#x27;h1&#x27;</span>).<span class="title function_">classes</span>(<span class="string">&#x27;red&#x27;</span>)).<span class="title function_">toBe</span>(<span class="literal">true</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;button is disabled attr&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> wrapper = <span class="title function_">shallowMount</span>(<span class="title class_">Content</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;red&#x27;</span>, wrapper.<span class="title function_">find</span>(<span class="string">&#x27;a&#x27;</span>).<span class="title function_">attributes</span>(<span class="string">&quot;href&quot;</span>))</span><br><span class="line">    <span class="title function_">expect</span>(wrapper.<span class="title function_">find</span>(<span class="string">&#x27;a&#x27;</span>).<span class="title function_">attributes</span>(<span class="string">&quot;href&quot;</span>)).<span class="title function_">toBe</span>(<span class="string">&quot;javascript:;&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>練習方式，聽完講師分享的操作之後，寫下測試目標的結構，就可以嘗試自己撰寫看看！</p><h2 id="檢查是否可見-isVisible-amp-exists"><a href="#檢查是否可見-isVisible-amp-exists" class="headerlink" title="檢查是否可見 isVisible &amp; exists"></a>檢查是否可見 isVisible &amp; exists</h2><p>前面的範例練習，就可以看檔有使用 exists<br>在 vue template 中，有使用 <code>v-if</code>, <code>v-show</code> 來處理 div 顯示與否。<br><code>v-show</code> 會存在於 DOM 上。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; shallowMount &#125; <span class="keyword">from</span> <span class="string">&quot;@vue/test-utils&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PhotoItem</span> <span class="keyword">from</span> <span class="string">&quot;./index.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&quot;PhotoItem.vue&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;DOM is v-if or v-show hide&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> wrapper = <span class="title function_">shallowMount</span>(<span class="title class_">PhotoItem</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// exists 用來查看是否存在</span></span><br><span class="line">    <span class="title function_">expect</span>(wrapper.<span class="title function_">find</span>(<span class="string">&quot;#box1&quot;</span>).<span class="title function_">exists</span>()).<span class="title function_">toBe</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="comment">// isVisible 用來判斷DOM是否給 v-show 隱藏起來</span></span><br><span class="line">    <span class="title function_">expect</span>(wrapper.<span class="title function_">find</span>(<span class="string">&quot;#box2&quot;</span>).<span class="title function_">isVisible</span>()).<span class="title function_">toBe</span>(<span class="literal">false</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-isComponent</title>
      <link href="/2023/08/03/vue-isComponent/"/>
      <url>/2023/08/03/vue-isComponent/</url>
      
        <content type="html"><![CDATA[<p>因工作需求研究 Tab 切換，要使用 router 或是 製作組件 <code>v-if</code>, <code>v-else</code> 切換。<br>這裡的範例，建議可以使用 <code>isComponent</code> 方式，透過點擊頁籤按鈕執行元件的改變，並且使用 <code>keep-alive</code> 儲存資料</p><p>資料來源：<a href="https://dev.to/reynoldadade/dynamic-components-a-vuejs-superpower-2olk">https://dev.to/reynoldadade/dynamic-components-a-vuejs-superpower-2olk</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cypress 學習筆記 - Assertion</title>
      <link href="/2023/06/03/assert/"/>
      <url>/2023/06/03/assert/</url>
      
        <content type="html"><![CDATA[<h2 id="implicit-assertion（隱含斷言）"><a href="#implicit-assertion（隱含斷言）" class="headerlink" title="implicit assertion（隱含斷言）"></a>implicit assertion（隱含斷言）</h2><p>常用的 <code>should</code> 關鍵字：</p><ol><li><code>be.visible</code>：確保元素在畫面上可見。</li><li><code>be.hidden</code>：確保元素在畫面上隱藏。</li><li><code>be.checked</code>：確保複選框或單選框元素被選中。</li><li><code>be.disabled</code>：確保元素被禁用。</li><li><code>have.text</code>：檢查元素的文字內容是否符合預期。</li><li><code>have.value</code>：檢查輸入元素的值是否符合預期。</li><li><code>have.attr</code>：檢查元素的特定屬性值是否符合預期。</li><li><code>have.class</code>：檢查元素是否具有特定的類名。</li><li><code>contain</code>：檢查元素是否包含指定的文字內容。</li></ol><p>可根據具體需求進行選擇和使用<br><a href="https://docs.cypress.io/guides/references/assertions">keywords</a></p><h3 id="這裡的練習範例，驗證當前網址（URL）的斷言方法。"><a href="#這裡的練習範例，驗證當前網址（URL）的斷言方法。" class="headerlink" title="這裡的練習範例，驗證當前網址（URL）的斷言方法。"></a>這裡的練習範例，驗證當前網址（URL）的斷言方法。</h3><p>include：確保當前網址包含特定的子字串。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cy.<span class="title function_">url</span>().<span class="title function_">should</span>(<span class="string">&#x27;include&#x27;</span>, <span class="string">&#x27;/login&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>eq：確保當前網址與預期值完全相等。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cy.<span class="title function_">url</span>().<span class="title function_">should</span>(<span class="string">&#x27;eq&#x27;</span>, <span class="string">&#x27;https://example.com/dashboard&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>contain：檢查當前網址是否包含特定的字串。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cy.<span class="title function_">url</span>().<span class="title function_">should</span>(<span class="string">&#x27;contain&#x27;</span>, <span class="string">&#x27;example.com&#x27;</span>);</span><br></pre></td></tr></table></figure><p>這些斷言方法可用於驗證當前網址是否符合預期，從而確保導航或操作正確導致了預期的網址變化。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">describe</span>(<span class="string">&quot;Assertion practice&quot;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&quot;explicit&quot;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">cy.<span class="title function_">visit</span>(<span class="string">&#x27;https://opensource-demo.orangehrmlive.com/web/index.php/auth/login&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//should + keyword end</span></span><br><span class="line"></span><br><span class="line">cy.<span class="title function_">url</span>().<span class="title function_">should</span>(<span class="string">&#x27;include&#x27;</span>, <span class="string">&#x27;orangehrmlive.com&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cy.<span class="title function_">url</span>().<span class="title function_">should</span>(<span class="string">&#x27;eq&#x27;</span>, <span class="string">&#x27;https://opensource-demo.orangehrmlive.com/web/index.php/auth/login&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cy.<span class="title function_">url</span>().<span class="title function_">should</span>(<span class="string">&#x27;contain&#x27;</span>, <span class="string">&#x27;orangehrmlive&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>可以看到上述，有連續使用到 <code>url()</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cy.<span class="title function_">url</span>().<span class="title function_">should</span>(<span class="string">&#x27;include&#x27;</span>, <span class="string">&#x27;orangehrmlive.com&#x27;</span>)</span><br><span class="line"></span><br><span class="line">.<span class="title function_">should</span>(<span class="string">&#x27;eq&#x27;</span>, <span class="string">&#x27;https://opensource-demo.orangehrmlive.com/web/index.php/auth/login&#x27;</span>)</span><br><span class="line"></span><br><span class="line">.<span class="title function_">should</span>(<span class="string">&#x27;contain&#x27;</span>, <span class="string">&#x27;orangehrmlive&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cy.<span class="title function_">url</span>().<span class="title function_">should</span>(<span class="string">&#x27;include&#x27;</span>, <span class="string">&#x27;orangehrmlive.com&#x27;</span>)</span><br><span class="line"></span><br><span class="line">.<span class="title function_">and</span>(<span class="string">&#x27;eq&#x27;</span>, <span class="string">&#x27;https://opensource-demo.orangehrmlive.com/web/index.php/auth/login&#x27;</span>)</span><br><span class="line"></span><br><span class="line">.<span class="title function_">and</span>(<span class="string">&#x27;contain&#x27;</span>, <span class="string">&#x27;orangehrmlive&#x27;</span>)</span><br></pre></td></tr></table></figure><p>另外可以檢查進到頁面 logo 圖示的顯示</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&quot;Assertion practice&quot;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;explicit&quot;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">    cy.<span class="title function_">visit</span>(<span class="string">&#x27;https://opensource-demo.orangehrmlive.com/web/index.php/auth/login&#x27;</span>)</span><br><span class="line">      <span class="comment">//check logo 呈現與否</span></span><br><span class="line">    cy.<span class="title function_">get</span>(<span class="string">&#x27;.orangehrm-login-branding &gt; img&#x27;</span>).<span class="title function_">should</span>(<span class="string">&#x27;be.visible&#x27;</span>)</span><br><span class="line">    .<span class="title function_">and</span>(<span class="string">&#x27;exist&#x27;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>使用者輸入框</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&quot;Assertion practice&quot;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;explicit&quot;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">    cy.<span class="title function_">visit</span>(<span class="string">&#x27;https://opensource-demo.orangehrmlive.com/web/index.php/auth/login&#x27;</span>)</span><br><span class="line">   </span><br><span class="line">    <span class="comment">//檢查 username 得輸入</span></span><br><span class="line">    <span class="comment">//取得 username 的輸入框,並且確保輸入的值</span></span><br><span class="line">    cy.<span class="title function_">get</span>(<span class="string">&quot;input[placeholder=&#x27;Username&#x27;]&quot;</span>).<span class="title function_">type</span>(<span class="string">&quot;Admin&quot;</span>)</span><br><span class="line">    cy.<span class="title function_">get</span>(<span class="string">&quot;input[placeholder=&#x27;Username&#x27;]&quot;</span>).<span class="title function_">should</span>(<span class="string">&quot;have.value&quot;</span>, <span class="string">&quot;Admin&quot;</span>)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="explicit-assertion"><a href="#explicit-assertion" class="headerlink" title="explicit assertion"></a>explicit assertion</h2><p>（顯式斷言）」是指明確使用斷言方法來檢查特定的條件或預期結果。<br>與隱含斷言不同，顯式斷言需要您明確指定斷言方法來進行驗證。</p>]]></content>
      
      
      <categories>
          
          <category> E2E </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> cypress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cypress 學習筆記 - css Locator</title>
      <link href="/2023/06/03/cypress-2/"/>
      <url>/2023/06/03/cypress-2/</url>
      
        <content type="html"><![CDATA[<p>有空就找找實作影片來練習一下～</p><p>而今天的實作練習，訪問 momoshop 取得搜尋框元素 -&gt; 輸入搜尋的關鍵字(“雨傘”) -&gt; 點擊搜尋 -&gt;<br>查看搜尋後的項目是否包含關鍵字。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;CSSLocators&#x27;</span>,<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;csslocators&quot;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">    cy.<span class="title function_">visit</span>(<span class="string">&quot;https://www.momoshop.com.tw/main/Main.jsp?momo=1&amp;gclid=CjwKCAjwpuajBhBpEiwA_ZtfhU9MqvxnVs7Kh8LTNDbmKzFsmDxY16QIaP7lci98eVgfRoNz8ychuRoCao0QAvD_BwE&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//尋找某些關鍵字</span></span><br><span class="line">    cy.<span class="title function_">get</span>(<span class="string">&#x27;[name=&quot;keyword&quot;]&#x27;</span>).<span class="title function_">type</span>(<span class="string">&quot;雨傘&quot;</span>)</span><br><span class="line">    <span class="comment">//點擊搜尋按鈕</span></span><br><span class="line">    cy.<span class="title function_">get</span>(<span class="string">&quot;[title = &#x27;搜尋&#x27;]&quot;</span>).<span class="title function_">click</span>()  <span class="comment">//attribute</span></span><br><span class="line">    cy.<span class="title function_">get</span>(<span class="string">&#x27;.prdName&#x27;</span>).<span class="title function_">contains</span>(<span class="string">&#x27;傘&#x27;</span>)</span><br><span class="line">    cy.<span class="title function_">get</span>(<span class="string">&#x27;.prdName&#x27;</span>).<span class="title function_">contains</span>(<span class="string">&#x27;羽絨&#x27;</span>) <span class="comment">//Assertion</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://hackmd.io/_uploads/BytHdzdU2.png" alt=""></p><p>在此文章主要針對取得 <code>css Locator</code> 進行系列操作。<br>可以使用 <code>#idName</code>, <code>.cssName</code>, <code>[title = &#39;搜尋&#39;]</code>, <code>[name = &#39;search&#39;]</code> 等方式<br>其實 cypress 官方網站也滿容易讀，可以根據我們想要在網頁上進行何種操作，搜尋相應的功能。<br>例如: Assertion <a href="https://docs.cypress.io/guides/references/assertions">cypress-assertions</a></p><p>小補充另一個取得定位的方式：<br>XPath：<br>  XPath是一種用於導航XML文件的語言，同樣也適用於HTML文件。它提供了一種根據元素在文檔層次結構中的路徑選擇元素的方法。XPath表達式非常強大且靈活，可以根據元素的屬性、文本內容等條件進行選擇。</p><p>在Cypress中，您可以使用XPath選擇器，只需將選擇器字符串以 xpath 為前綴添加到命令中。例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cy.<span class="title function_">xpath</span>(<span class="string">&#x27;//button[@id=&quot;submit-btn&quot;]&#x27;</span>).<span class="title function_">click</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> E2E </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> cypress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自動化測試 E2E - cypress</title>
      <link href="/2023/05/07/cypress-1/"/>
      <url>/2023/05/07/cypress-1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/AE7iJQ1.png" alt=""></p><p>每次在交付完成的任務給 PM 之前，總是會先自行反覆點擊測驗過才提能安心提供。但除了自己點擊之外，是否有其他更為簡易的方式可以進行測試呢？Cypress 是一個用於編寫端對端測試的 JavaScript 測試框架。他可以幫助我們做到基礎的自動化測試，今天就先來認識看看吧～</p><h2 id="建立專案"><a href="#建立專案" class="headerlink" title="建立專案"></a>建立專案</h2><p>在本地建立一個 cypress-project 資料夾，進入該檔案夾<br><code>npm init -y</code><br><code>npm install cypress</code></p><ul><li>安裝完後<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;cypress-project-1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;main&quot;</span>: <span class="string">&quot;index.js&quot;</span>,</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;keywords&quot;</span>: [],</span><br><span class="line">  <span class="string">&quot;author&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;license&quot;</span>: <span class="string">&quot;ISC&quot;</span>,</span><br><span class="line">  <span class="string">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;cypress&quot;</span>: <span class="string">&quot;^12.11.0&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="實作測試功能"><a href="#實作測試功能" class="headerlink" title="實作測試功能"></a>實作測試功能</h2><ul><li>訪問 google 頁面</li><li>進行關鍵字搜尋</li></ul><p><img src="https://i.imgur.com/2FOKkBZ.png" alt=""></p><h3 id="測試語法"><a href="#測試語法" class="headerlink" title="測試語法"></a>測試語法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;google search&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//visit 進入不同網站</span></span><br><span class="line">  cy.<span class="title function_">visit</span>(<span class="string">&#x27;https://www.google.com.tw/?hl=zh_TW&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  cy.<span class="title function_">get</span>(<span class="string">&#x27;#APjFqb&#x27;</span>).<span class="title function_">type</span>(<span class="string">&#x27;what is cypress.io&#123;Enter&#125;&#x27;</span>)</span><br><span class="line">  <span class="comment">//除了點擊搜尋按鈕之外，一般也會按下 enter鍵觸發</span></span><br><span class="line">  <span class="comment">// cy.contains(&#x27;Google 搜尋&#x27;).click()</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="測試操作"><a href="#測試操作" class="headerlink" title="測試操作"></a>測試操作</h3><p><code>npx cypress open</code> 進入測試介面，選擇 E2E</p><p><img src="https://i.imgur.com/rmkiayJ.png" alt=""></p><ul><li>選擇要測試的檔案：</li></ul><p><img src="https://i.imgur.com/W6yP5nu.png" alt=""></p><ul><li>透過選取器可以找到相對應的元素，並針對該元素下指令<ul><li>這邊我們就是拿到 搜尋框，並進行關鍵字的輸入<br><img src="https://i.imgur.com/RZ5EjKZ.png" alt=""></li></ul></li></ul><h3 id="測試結果呈現"><a href="#測試結果呈現" class="headerlink" title="測試結果呈現"></a>測試結果呈現</h3><ul><li>會進到 google 頁面</li><li>在輸入框輸入 what is cypress.io ,點擊 Enter 搜尋</li></ul><p><img src="https://i.imgur.com/a37BYX1.png" alt=""></p><p><img src="https://i.imgur.com/8QbuLdQ.jpg" alt=""></p><p>小結：</p><p>cy.visit(url)：訪問指定網址。<br>cy.get()：使用 cy.get() 方法選擇元素。我們可以使用不同的選擇器（如：CSS 選擇器）來指向特定元素。<br>type()： 使用 type() 方法在輸入框中輸入內容。<br>click()：使用 cy.get() 定位到這些元素，然後使用 click() 方法模擬點擊操作。</p>]]></content>
      
      
      <categories>
          
          <category> E2E </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> cypress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vueTest - Vue test util (1)</title>
      <link href="/2023/01/31/vueTest-2/"/>
      <url>/2023/01/31/vueTest-2/</url>
      
        <content type="html"><![CDATA[<ul><li>測試 App.vue<ul><li>引入 <code>@vue/test-utils</code> 使用 shallowMount 方法</li><li>shallowMount 可以渲染出組件<h2 id="shallowMount-mount"><a href="#shallowMount-mount" class="headerlink" title="shallowMount , mount"></a>shallowMount , mount</h2>shallowMount : 只會渲染該元件當層的資料內容<br>mount : 深度渲染，會將元件內所包含的其他元件一起都渲染出</li></ul></li><li>例如以下範例: 在 App.vue 中有包含數個元件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> //App.vue</span><br><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;img class=&quot;logo&quot; alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;Test demo&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;AddCount /&gt;</span><br><span class="line"></span><br><span class="line">&lt;HelloWorld /&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;itemFlex&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;CardBox v-for=&quot;i in 4&quot; :key=&quot;i&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;UserList /&gt;</span><br><span class="line"></span><br><span class="line">&lt;PhotoItem /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ul><li>測試元件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; shallowMount, mount &#125; <span class="keyword">from</span> <span class="string">&quot;@vue/test-utils&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;@/App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;App.vue test&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;測試組件 1&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染出 App 元件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> wrapper = <span class="title function_">shallowMount</span>(<span class="title class_">App</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(wrapper.<span class="title function_">text</span>())</span><br><span class="line"></span><br><span class="line"><span class="title function_">expect</span>(wrapper.<span class="title function_">text</span>()).<span class="title function_">toMatch</span>(<span class="string">&quot;Test demo&quot;</span>)</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;測試組件2&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> wrapper = <span class="title function_">mount</span>(<span class="title class_">App</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(wrapper.<span class="title function_">text</span>())</span><br><span class="line"></span><br><span class="line"><span class="title function_">expect</span>(wrapper.<span class="title function_">text</span>()).<span class="title function_">toMatch</span>(<span class="string">&quot;若你是寫過 Vue 但沒有寫過單元測試的工程師&quot;</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/BcvGwlI.png" alt=""></p><p>get 與 find 差異</p><ul><li>抓取某個元件中 DOM 元素</li><li>兩者差異在於<ul><li>使用 get ，如果找不到元素會報錯，並且直接中斷測試的運行</li><li>使用 find 會依據 <code>exists()</code> 回傳布林值</li></ul></li></ul><p><code>&lt;button id=&quot;add&quot; class=&quot;add-btn&quot; @click=&quot;add&quot;&gt;add 按鈕&lt;/button&gt;</code></p><p><img src="https://i.imgur.com/TWuFWX3.png" alt=""></p><ul><li>測試按鈕存不存在<ul><li>exists : 驗證某元素是否存在</li><li><a href="https://test-utils.vuejs.org/api/#exists"> exists</a></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;AddCount.vue&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;test 1 &#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> wrapper = <span class="title function_">shallowMount</span>(<span class="title class_">AddCount</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(wrapper.<span class="title function_">find</span>(<span class="string">&#x27;.add-btn&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="title function_">expect</span>(wrapper.<span class="title function_">find</span>(<span class="string">&#x27;.add-btn&#x27;</span>).<span class="title function_">exists</span>()).<span class="title function_">toBe</span>(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/0sBL0t6.png" alt=""></p><p><img src="https://i.imgur.com/htkF4X5.png" alt=""></p><h3 id="在情境應用"><a href="#在情境應用" class="headerlink" title="在情境應用"></a>在情境應用</h3><ul><li>在 AddCount 加入 <code>isOpen=ref(false)</code> 來判斷 button 是否在一開始要呈現</li><li>而再測試文件中就是要測試該按鈕在一開始並不會出現</li></ul><p><img src="https://i.imgur.com/YkBK6Ry.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; shallowMount &#125; <span class="keyword">from</span> <span class="string">&#x27;@vue/test-utils&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AddCount</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/AddCount.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;AddCount.vue&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;test 1 &#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> wrapper = <span class="title function_">shallowMount</span>(<span class="title class_">AddCount</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(wrapper.<span class="title function_">find</span>(<span class="string">&#x27;.add-btn&#x27;</span>))</span><br><span class="line"><span class="comment">// 找不到，並且回傳 false</span></span><br><span class="line"><span class="title function_">expect</span>(wrapper.<span class="title function_">find</span>(<span class="string">&#x27;.add-btn-err&#x27;</span>).<span class="title function_">exists</span>()).<span class="title function_">toBe</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="find-與-findAll"><a href="#find-與-findAll" class="headerlink" title="find 與 findAll"></a>find 與 findAll</h2><p>以 v-for list 的範例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">import data from &quot;./data.json&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">setup() &#123;</span><br><span class="line"></span><br><span class="line">const employeeItem = ref(data);</span><br><span class="line"></span><br><span class="line">return &#123;</span><br><span class="line"></span><br><span class="line">employeeItem,</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul class=&quot;item&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;li class=&quot;user_list&quot; v-for=&quot;item in employeeItem&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;員工編號: &#123;&#123; item.userId &#125;&#125;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;姓名: &#123;&#123; item.username &#125;&#125;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/li&gt;</span><br><span class="line"></span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/dqts5eV.png" alt=""></p><p><img src="https://i.imgur.com/PXPy1as.png" alt=""></p><p>如果是要抓元件中 list 有幾筆<br><code>wrapper.findAll(&#39;.user_list&#39;)</code> : 他會是一個陣列資料，其中包含好幾個 DOM wrapper </p><p><img src="https://i.imgur.com/I5lNSRX.png" alt=""></p><p>注意：<br>    <code>TypeError: wrapper.findAll(...).text is not a function</code></p><ul><li>搭配使用 <code>at()</code> 用於找尋其中某一個物件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; shallowMount &#125; <span class="keyword">from</span> <span class="string">&#x27;@vue/test-utils&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UserList</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/UserList.vue&#x27;</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;test UserList&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;test Dom&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> wrapper = <span class="title function_">shallowMount</span>(<span class="title class_">UserList</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(wrapper.findAll(&#x27;.user_list&#x27;).at(0).text())</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">expect</span>(wrapper.<span class="title function_">findAll</span>(<span class="string">&#x27;.user_list&#x27;</span>).<span class="title function_">at</span>(<span class="number">0</span>).<span class="title function_">text</span>()).<span class="title function_">toMatch</span>(<span class="string">&#x27;員工編號: 399&#x27;</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="另也可以測試所拿到的資料長度"><a href="#另也可以測試所拿到的資料長度" class="headerlink" title="另也可以測試所拿到的資料長度"></a>另也可以測試所拿到的資料長度</h3><ul><li>測試 DOM 資料長度</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; shallowMount &#125; <span class="keyword">from</span> <span class="string">&#x27;@vue/test-utils&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UserList</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/UserList.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;test UserList&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;test Dom&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> wrapper = <span class="title function_">shallowMount</span>(<span class="title class_">UserList</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(wrapper.findAll(&#x27;.user_list&#x27;).at(0).text())</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">expect</span>(wrapper.<span class="title function_">findAll</span>(<span class="string">&#x27;.user_list&#x27;</span>).<span class="title function_">at</span>(<span class="number">0</span>).<span class="title function_">text</span>()).<span class="title function_">toMatch</span>(<span class="string">&#x27;員工編號: 399&#x27;</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;test List length&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> wrapper = <span class="title function_">shallowMount</span>(<span class="title class_">UserList</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(wrapper.<span class="title function_">findAll</span>(<span class="string">&#x27;.user_list&#x27;</span>).<span class="property">length</span>)</span><br><span class="line"></span><br><span class="line"><span class="title function_">expect</span>(wrapper.<span class="title function_">findAll</span>(<span class="string">&#x27;.user_list&#x27;</span>).<span class="property">length</span>).<span class="title function_">toBe</span>(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 單元測試 - 基礎入門</title>
      <link href="/2023/01/28/vueTest-1/"/>
      <url>/2023/01/28/vueTest-1/</url>
      
        <content type="html"><![CDATA[<p>為了不斷建立以及加深自己的技能，即便目前工作上未能使用，還是可以提前做些準備，之前看到 Mike 老師推出的 vue 單元測試，就先入手～<br>趁近期有空先來奠定下測試的基礎，未來可以在專案內練習撰寫！</p><p><img src="https://i.imgur.com/xhxaYa1.jpg" alt=""></p><h2 id="專案創建"><a href="#專案創建" class="headerlink" title="專案創建"></a>專案創建</h2><p>若一開始專案沒有選擇 jest 或加入測試 要如何在現有專案加入？</p><ul><li>可以進入該專案進行安裝<br><code>vue add unit-jest</code></li></ul><p>這裡創建的專案是使用 vue-cli 創建，並且在自選項目加入 unit test </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create my-project</span><br></pre></td></tr></table></figure><h2 id="執行-test"><a href="#執行-test" class="headerlink" title="執行 test"></a>執行 test</h2><p><code>npm run test:unit</code></p><h2 id="更改預設的測試檔案位置"><a href="#更改預設的測試檔案位置" class="headerlink" title="更改預設的測試檔案位置"></a>更改預設的測試檔案位置</h2><p>component 與 測試的檔案，可以放在同一個資料夾中，以方便找尋</p><ol><li>建立 <code>jest.config.js</code> 來設定 jest </li></ol><ul><li>testMatch: 指定從 src 資料夾開始找尋與 spec 相關的檔案</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line"></span><br><span class="line">  <span class="attr">preset</span>: <span class="string">&quot;@vue/cli-plugin-unit-jest&quot;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">testMatch</span>: [<span class="string">&quot;**/src/**/*.spec.[jt]s?(x)&quot;</span>],</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>**`</p><h2 id="測試的基本架構"><a href="#測試的基本架構" class="headerlink" title="測試的基本架構"></a>測試的基本架構</h2><ul><li>describe : 類似群組概念，可以包一個或多個相關的測試。</li><li>it 與 test 一樣：其內容為測試的單位，裏面撰寫測試內容</li><li>第一個參數，用來表示該測試的敘述（”Test to do list”, “Test to do 1”, “Test to do 2” ）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&quot;Test to do list&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;Test to do 1&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  <span class="title function_">test</span>(<span class="string">&quot;Test to do 2&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>it 也可以單獨另外撰寫</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;這是test case&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>執行測試呈現的樣子</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; shallowMount &#125; <span class="keyword">from</span> <span class="string">&#x27;@vue/test-utils&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HelloWorld</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/HelloWorld.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;HelloWorld.vue&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_">it</span>(<span class="string">&#x27;renders props.msg when passed&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> msg = <span class="string">&#x27;new message&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> wrapper = <span class="title function_">shallowMount</span>(<span class="title class_">HelloWorld</span>, &#123;</span><br><span class="line"></span><br><span class="line"><span class="attr">props</span>: &#123; msg &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">expect</span>(wrapper.<span class="title function_">text</span>()).<span class="title function_">toMatch</span>(msg)</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>wrapper 是指 HelloWorld 這個 component</li><li>wrapper.text() : 會顯示此元件中所包含的文字</li><li><code>expect(wrapper.text()).toMatch(msg)</code>: <ul><li>toMatch 有合乎</li></ul></li></ul><p><img src="https://i.imgur.com/ejvXWQF.png" alt=""></p><h2 id="expext-與斷言"><a href="#expext-與斷言" class="headerlink" title="expext 與斷言"></a>expext 與斷言</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&quot;Test to do list&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;Test to do 1&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">expect</span>(<span class="number">1</span> + <span class="number">1</span>).<span class="title function_">toBe</span>(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&quot;Test to do 2&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">expect</span>(<span class="number">4</span> - <span class="number">1</span>).<span class="title function_">toBe</span>(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>expect: 預期需要匹配的項目，如放入變數、component、function</li><li>toBe(百分之百準確): 斷言，用什麼方式來匹配，這裡使用 toBe 函式</li></ul><h2 id="其他備註"><a href="#其他備註" class="headerlink" title="其他備註"></a>其他備註</h2><p>而官方網站已建議若要創建新專案可以使用 vite 為基礎的專案。所以新開的專案都是使用 Vitest (之後有機會再使用新專案來開看看)。<br>這邊因先根據教學來進行，故先使用 vue-test-utils + jest </p><p><img src="https://i.imgur.com/yrD2UW0.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TS - Generics 泛型</title>
      <link href="/2023/01/25/TS-Generics/"/>
      <url>/2023/01/25/TS-Generics/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/xGK5aDO.png" alt=""></p><h2 id="資料整理"><a href="#資料整理" class="headerlink" title="資料整理"></a>資料整理</h2><p>例如有兩個 interface 屬性一樣，差異在於 型別內容</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">DataA</span> &#123;</span><br><span class="line">  <span class="attr">key</span>:<span class="built_in">string</span></span><br><span class="line">  <span class="attr">key2</span>:<span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">DataB</span> &#123;</span><br><span class="line">  <span class="attr">key</span>:<span class="built_in">string</span></span><br><span class="line">  <span class="attr">key2</span>:<span class="built_in">boolean</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>使用 泛型 整理</li><li>將 T 部分，設為傳入的變數，可以依據宣告得變數所符合的型別進行設定<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">GenericsObj</span>&lt;T&gt; = &#123;</span><br><span class="line">  <span class="attr">key</span>:<span class="built_in">string</span></span><br><span class="line">  <span class="attr">key2</span>:T</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">DataA</span> = <span class="title class_">GenericsObj</span>&lt;<span class="built_in">number</span>&gt;;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">DataB</span> = <span class="title class_">GenericsObj</span>&lt;<span class="built_in">boolean</span>&gt;;</span><br><span class="line"><span class="comment">//以上的 DataA、DataB 的型別會與剛剛 interface 的設定一樣</span></span><br></pre></td></tr></table></figure></li></ul><p>範例2：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">KeyPair</span>&lt;T, U&gt; &#123;</span><br><span class="line">  <span class="attr">key</span>: T;</span><br><span class="line">  <span class="attr">value</span>: U;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">kp1</span>: <span class="title class_">KeyPair</span>&lt;<span class="built_in">number</span>, <span class="built_in">string</span>&gt; = &#123; <span class="attr">key</span>: <span class="number">1</span>, <span class="attr">value</span>: <span class="string">&quot;str&quot;</span>&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">kp2</span>: <span class="title class_">KeyPair</span>&lt;<span class="built_in">string</span>, <span class="built_in">number</span>&gt; = &#123; <span class="attr">key</span>: <span class="string">&quot;str&quot;</span>, <span class="attr">value</span>: <span class="number">123</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">arr</span>:<span class="built_in">number</span>[] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="attr">arrTwo</span>:<span class="title class_">Array</span>&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure><h2 id="payload-應用"><a href="#payload-應用" class="headerlink" title="payload 應用"></a>payload 應用</h2><ul><li>這邊以 redux 中整理的 action 為範例</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> userDataPayload = &#123;</span><br><span class="line">  <span class="attr">userId</span>: <span class="built_in">string</span>,</span><br><span class="line">  <span class="attr">data</span>:<span class="built_in">any</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//負責生成 action 的函式</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">setUserDataAction</span> = (<span class="params">payload:userDataPayload </span>)=&gt;(&#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;SET_USER_DATA&#x27;</span>,</span><br><span class="line">  payload</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">resetUserDataAction</span> =(<span class="params"></span>)=&gt;(&#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;RESET_USER_DATA&#x27;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">CartDataPayload</span> = &#123;</span><br><span class="line">  <span class="attr">product</span>: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">setCartDataAction</span> =(<span class="params">payload:CartDataPayload</span>)=&gt;(&#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;SET_CART_DATA&#x27;</span>,</span><br><span class="line">  payload</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">SetUserDataAction</span> = &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;SET_USER_DATA&#x27;</span>,</span><br><span class="line">  <span class="attr">payload</span>:userDataPayload</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">ResetUserDataAction</span> = &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;RESET_USER_DATA&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">SetCartDataAction</span> = &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;SET_CART_DATA&#x27;</span>,</span><br><span class="line">  <span class="attr">payload</span>:<span class="title class_">CartDataPayload</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>由上可以觀察到 SetUserDataAction、ResetUserDataAction、SetCartDataAction 整理為一個</li><li>將 action 的型別整理，其key為type 與 payload</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Action</span>&lt;T,P&gt; = &#123;</span><br><span class="line">  <span class="attr">type</span>: T,</span><br><span class="line">  <span class="attr">payload</span>:P</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">ActionWithoutPayload</span>&lt;T&gt; = &#123;</span><br><span class="line">  <span class="attr">type</span>: T</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">SetUserDataAction</span> = <span class="title class_">Action</span>&lt;<span class="string">&#x27;SET_USER_DATA&#x27;</span>,userDataPayload&gt;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">SetCartDataAction</span> = <span class="title class_">Action</span>&lt;<span class="string">&#x27;SET_CART_DATA&#x27;</span>,<span class="title class_">CartDataPayload</span>&gt;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">ResetUserDataAction</span> = <span class="title class_">ActionWithoutPayload</span>&lt;<span class="string">&#x27;RESET_USER_DATA&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以將action 中的 type 進行聚合</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Actions</span> = <span class="variable constant_">SET_USER_DATA</span> | <span class="variable constant_">SET_CART_DATA</span> | <span class="variable constant_">RESET_USER_DATA</span>;</span><br></pre></td></tr></table></figure><ul><li>以下，進一步再將 Action 和 ActionWithoutPayload 進行整合，他們差異在與 payload </li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Action</span>&lt;T, P = <span class="literal">null</span>&gt; = p <span class="keyword">extends</span> &#123;&#125; ? &#123;<span class="attr">type</span>: T, <span class="attr">payload</span>: P&#125; : &#123;<span class="attr">type</span>: T&#125;;</span><br></pre></td></tr></table></figure><p>型別參數動態生成不同型別</p><h2 id="函式的泛型"><a href="#函式的泛型" class="headerlink" title="函式的泛型"></a>函式的泛型</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fn = (<span class="attr">param</span>: <span class="built_in">string</span> | <span class="built_in">number</span>):(<span class="built_in">string</span>|<span class="built_in">number</span>)[]=&gt;[param];</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>);<span class="comment">//number 陣列 number[];</span></span><br><span class="line"><span class="title function_">fn</span>(<span class="string">&#x27;hello&#x27;</span>) <span class="comment">//string[]</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/QZCK4Em.png" alt=""></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fn = &lt;T&gt;(<span class="attr">param</span>: T):(T)[]=&gt;[param];</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>);<span class="comment">//number 陣列 number[];</span></span><br><span class="line"><span class="title function_">fn</span>(<span class="string">&#x27;hello&#x27;</span>) <span class="comment">//string[]</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Yeeuum6.png" alt=""></p><ul><li>function 改寫方式</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> fn&lt;T&gt;(<span class="attr">param</span>:T):T[]&#123;</span><br><span class="line">  <span class="keyword">return</span> [param]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="type-的泛型"><a href="#type-的泛型" class="headerlink" title="type 的泛型"></a>type 的泛型</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//共用模板</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">GenericList</span>&lt;T&gt; = T[];</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">StrList</span> = <span class="title class_">GenericList</span>&lt;<span class="built_in">string</span>&gt;;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">BoolList</span> = <span class="title class_">GenericList</span>&lt;<span class="built_in">boolean</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">GenericValObj</span>&lt;T&gt; = &#123;[<span class="attr">key</span>:<span class="built_in">string</span>]:T&#125; </span><br><span class="line"><span class="keyword">type</span> <span class="title class_">NumValObj</span> = <span class="title class_">GenericValObj</span>&lt;<span class="built_in">number</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">numValObj</span>:<span class="title class_">NumValObj</span> = &#123;</span><br><span class="line">  <span class="attr">img_res_200</span>:<span class="number">200</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/sJFzEUg.png" alt=""></p><p><img src="https://i.imgur.com/7P1MnFL.png" alt=""></p><ul><li>嘗試聚合資料</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">GenericUnion</span>&lt;T,U&gt; = T | U | T[] | U[];</span><br><span class="line"><span class="keyword">type</span> strNumUnion = <span class="title class_">GenericUnion</span>&lt;<span class="built_in">string</span>,<span class="built_in">number</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">val</span>:strNumUnion = <span class="string">&quot;123&quot;</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">val2</span>:strNumUnion = [<span class="string">&quot;123&quot;</span>]</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/y5Vl8M9.png" alt=""></p><h2 id="將函式改寫為-共用的泛型型別"><a href="#將函式改寫為-共用的泛型型別" class="headerlink" title="將函式改寫為 共用的泛型型別"></a>將函式改寫為 共用的泛型型別</h2><ul><li>將type 拉出來獨立撰寫，可以重複使用</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fn = &lt;T&gt;(<span class="attr">param</span>: T):(T)[]=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> [param]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上面的函式也可以用於</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Props</span> &#123;</span><br><span class="line">  <span class="attr">onFn</span>: <span class="keyword">typeof</span> fn</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//rewrite</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">GenericFn</span> = &lt;T&gt;<span class="function">(<span class="params">param: T</span>) =&gt;</span> T[]</span><br><span class="line"><span class="keyword">const</span> <span class="attr">fn</span>:<span class="title class_">GenericFn</span> = <span class="function">(<span class="params">param</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> [param]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//共用，如下有個 interface 其中有個屬性的型別與 GenericFn 一樣，則可以共用</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Props</span> &#123;</span><br><span class="line">  <span class="attr">onFn</span>:<span class="title class_">GenericFn</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> fn&lt;T&gt;(<span class="attr">param</span>:T):T[]&#123;</span><br><span class="line">  <span class="keyword">return</span> [param]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//產生型別泛型</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">FnType</span> = <span class="keyword">typeof</span> fn ;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/yxsVm1s.png" alt=""></p><p><img src="https://i.imgur.com/zYtwh7H.png" alt=""><br><img src="https://i.imgur.com/tPHEDZ7.png" alt=""></p><h3 id="比較-lt-T-gt-位置差異"><a href="#比較-lt-T-gt-位置差異" class="headerlink" title="比較&lt;T&gt;位置差異"></a>比較<code>&lt;T&gt;</code>位置差異</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">FnTypeA</span> = &lt;T&gt;<span class="function">(<span class="params">param: T</span>) =&gt;</span> T[]</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">FnTypeB</span>&lt;T&gt; = <span class="function">(<span class="params">param: T</span>) =&gt;</span> T[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">fn1</span>:<span class="title class_">FnTypeA</span> = <span class="function">(<span class="params">param</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> [param]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//必須指定好型別的 argument</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">fn2</span>:<span class="title class_">FnTypeB</span>&lt;<span class="built_in">string</span>&gt; = <span class="function">(<span class="params">param</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> [param]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//兩個函式在使用上會有差異：</span></span><br><span class="line"><span class="title function_">fn1</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_">fn2</span>(<span class="string">&#x27;Hi&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/J3zJs2Y.png" alt=""></p><p><img src="https://i.imgur.com/0wxPZk9.png" alt=""></p><ul><li>fn1 可以填入任何內容、可以動態填入型別<br><img src="https://i.imgur.com/pwfnIjO.png" alt=""><br><img src="https://i.imgur.com/6B8gtAc.png" alt=""><br><img src="https://i.imgur.com/OgPatHZ.png" alt=""></li><li>fn2 只能填入 string 內容<br><img src="https://i.imgur.com/cwmVA5b.png" alt=""></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> <span class="title class_">ClickFn</span> = &lt;<span class="title class_">Event</span>&gt;<span class="function">(<span class="params">e:Event</span>) =&gt;</span> <span class="built_in">any</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用 function 會無法重複使用寫好的型別</span></span><br><span class="line"><span class="comment">// 引用</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">handleClick</span>:<span class="title class_">ClickFn</span> = <span class="function">(<span class="params">e</span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="interface-的泛型"><a href="#interface-的泛型" class="headerlink" title="interface 的泛型"></a>interface 的泛型</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">GenericI</span>&lt;T&gt;&#123;</span><br><span class="line">  [<span class="attr">key</span>:<span class="built_in">string</span>]: T</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">type</span> <span class="title class_">NumValObj</span> =  <span class="title class_">GenericI</span>&lt;<span class="built_in">number</span>&gt;;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">numberValObj</span>:<span class="title class_">NumValObj</span> = &#123;</span><br><span class="line">  <span class="attr">res</span>:<span class="number">123</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//type寫法也可以一樣</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> <span class="title class_">GenericT</span>&lt;T&gt; = &#123;</span><br><span class="line">  [<span class="attr">key</span>:<span class="built_in">string</span>]: T</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//API 的應用！！！</span></span><br><span class="line"><span class="comment">//注意：in 寫法只用於 type 中</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> <span class="title class_">GenericKeyValObj</span>&lt;T <span class="keyword">extends</span>  keyof <span class="built_in">any</span>,P&gt; = &#123;</span><br><span class="line">  [key <span class="keyword">in</span> T ]: P</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以應用於 API </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">ApiKey</span> = <span class="string">&#x27;user&#x27;</span> | <span class="string">&#x27;id&#x27;</span> | <span class="string">&#x27;password&#x27;</span>; <span class="comment">//將欄位值設定好</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UserApiData</span> = <span class="title class_">GenericKeyValObj</span>&lt;<span class="title class_">ApiKey</span>, <span class="built_in">string</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/dceV8io.png" alt=""></p><ul><li><p>可以很快的生成 API 的資料型別<br><img src="https://i.imgur.com/Vv3lVDC.png" alt=""></p></li><li><p>其他範例</p></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//類似呼叫API的函式</span></span><br><span class="line"><span class="comment">//Params : 參數</span></span><br><span class="line"><span class="comment">//Res result : 回傳值</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">GenericApiFn</span>&lt;<span class="title class_">Params</span>, <span class="title class_">Res</span>&gt; = <span class="function">(<span class="params">params:Params</span>)=&gt;</span> <span class="title class_">Res</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//組合其他泛型使用，也可以將原本泛型參數自己使用</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ApiContainerProps</span>&lt;<span class="title class_">Params</span>, <span class="title class_">Res</span>&gt; &#123;</span><br><span class="line">  <span class="attr">initData</span>: <span class="title class_">Res</span>;</span><br><span class="line">  <span class="attr">onAsyncCb</span>: <span class="title class_">GenericApiFn</span>&lt;<span class="title class_">Params</span>, <span class="title class_">Res</span>&gt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>interface 與 type 的泛型寫法</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//interface 寫函式</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">FnI</span> &#123;</span><br><span class="line">  &lt;T&gt;(<span class="attr">param</span>: T): T[]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//同等於</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">FnT</span> = &lt;T&gt;<span class="function">(<span class="params">param:T</span>)=&gt;</span>T[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">fn</span>:<span class="title class_">FnT</span> = <span class="function">(<span class="params">param</span>)=&gt;</span>[param]</span><br></pre></td></tr></table></figure><ul><li><code>&lt;T&gt;</code>位置的調動</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&lt;T&gt; 會影響整個 interface</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">GenericFnI</span>&lt;T&gt; &#123;</span><br><span class="line">  (<span class="attr">param</span>: T): T[]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">fn2</span>: <span class="title class_">GenericFnI</span>&lt;<span class="built_in">string</span>&gt;= <span class="function">(<span class="params">param</span>)=&gt;</span>[param]</span><br></pre></td></tr></table></figure><p>過去都未曾注意到泛型可以抽成共用還有 <code>&lt;T&gt;</code> 的位置所放的位置，會影響宣告，透過此次的教學，讓我對泛型可以應用於實際情況的案例，同樣未來在訂定 type 或 interface 時可以加以注意，思考是否可以改寫為泛型加以使用。</p><p>參考資料<br><a href="https://www.youtube.com/watch?v=9hZbfX_Atpc&t=44s">成為進階TS開發者的第一哩路 — 泛型簡介與基礎(1)</a><br><a href="https://www.youtube.com/watch?v=7yA4ALLoSxY">成為進階TS開發者的第一哩路 — 泛型的函式, type和interface寫法一次說清楚！</a></p>]]></content>
      
      
      <categories>
          
          <category> TypeScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript - interface 使用</title>
      <link href="/2023/01/25/TS-interface/"/>
      <url>/2023/01/25/TS-interface/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/xGK5aDO.png" alt=""></p><p>最近在複習使用 TypeScript 發現還有些部分可以做紀錄並且重新回憶的區塊，藉此再紀錄於部落格。</p><h2 id="TS-interface的基礎宣告"><a href="#TS-interface的基礎宣告" class="headerlink" title="TS interface的基礎宣告"></a>TS interface的基礎宣告</h2><ul><li>將複雜系統簡化的結果叫做介面</li><li>介面一般首字母大寫</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Eva</span>: <span class="title class_">Person</span> = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Eva&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">25</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="函式與介面"><a href="#函式與介面" class="headerlink" title="函式與介面"></a>函式與介面</h2><ul><li>以下範例宣告 AddFunction 的介面</li><li>並將此型別應用於 add 這個變數的方法中</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">AddFunction</span> &#123;</span><br><span class="line">  (<span class="attr">a</span>: <span class="built_in">number</span>, <span class="attr">b</span>: <span class="built_in">number</span>): <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">add</span>: <span class="title class_">AddFunction</span> = <span class="keyword">function</span>(<span class="params">a, b</span>) &#123; <span class="keyword">return</span> a + b; &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="class與介面"><a href="#class與介面" class="headerlink" title="class與介面"></a>class與介面</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">CatInterface</span> &#123;</span><br><span class="line"><span class="comment">//普通成員變數的規格</span></span><br><span class="line"><span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="attr">breed</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="attr">noise</span>: <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//普通成員方法的規格，使用函式型別格式</span></span><br><span class="line"><span class="title function_">makeNoise</span>(): <span class="built_in">void</span>;</span><br><span class="line"><span class="title function_">feed</span>(<span class="attr">something</span>: <span class="built_in">string</span>): <span class="built_in">void</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>若類別想要實踐此介面，必須用 <code>implements</code> 這個關鍵字</li><li>如果類別實踐介面的規格中，任何一個成員不見或沒有實踐時，會出現提醒訊息。</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">implements</span> <span class="title class_">CatInterface</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="attr">breed</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="attr">noise</span>: <span class="built_in">string</span> = <span class="string">&#x27;Meow meow!&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">name:<span class="built_in">string</span>, breed:<span class="built_in">string</span></span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">breed</span> = breed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">makeNoise</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">noise</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">feed</span>(<span class="params">something: <span class="built_in">string</span></span>)&#123;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is eating <span class="subst">$&#123;something&#125;</span>...`</span>)</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="搭配-interface-常用的方法"><a href="#搭配-interface-常用的方法" class="headerlink" title="搭配 interface 常用的方法"></a>搭配 interface 常用的方法</h2><ol><li>extends</li></ol><ul><li>以 <code>PersonalInfo</code> 為例</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">PersonalInfo</span>&#123;</span><br><span class="line"><span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line"><span class="attr">interesting</span>: <span class="built_in">string</span>[];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>假設今天想宣告一個新的使用者帳戶的介面為 <code>UserAccount</code><ul><li>除了有一些和客戶相關的規格屬性外，還要包含介面 <code>PersonalInfo</code> 裡的規格</li></ul></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">UserAccount</span> <span class="keyword">extends</span> <span class="title class_">PersonalInfo</span>&#123;</span><br><span class="line"><span class="attr">email</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="attr">password</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="attr">subscribed</span>: <span class="built_in">boolean</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>上面的撰寫方式，等同於</li><li>透過使用 extends 延展可以將功用的屬性、型別整理一起</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">UserAccount</span>&#123;</span><br><span class="line"><span class="attr">email</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="attr">password</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="attr">subscribed</span>: <span class="built_in">boolean</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//從PersonalInfo延展而來</span></span><br><span class="line"><span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line"><span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line"><span class="attr">interesting</span>: <span class="built_in">string</span>[];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外若需要再合併新的型別，也可以透過逗號方式加以延伸</p><ul><li>此外還能再多新增 <code>SocialLinks</code></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">SocialLinks</span> &#123;</span><br><span class="line">facebook?: <span class="built_in">string</span>;</span><br><span class="line">twitter?: <span class="built_in">string</span>;</span><br><span class="line">linkedin?: <span class="built_in">string</span>;</span><br><span class="line">website?: (&#123;<span class="attr">name</span>:<span class="built_in">string</span>; <span class="attr">url</span>:<span class="built_in">string</span>&#125;)[]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>同時延展:透過逗號再加入新的</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">UserAccount</span> <span class="keyword">extends</span> <span class="title class_">PersonalInfo</span>, <span class="title class_">SocialLinks</span>&#123;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="pick"><a href="#pick" class="headerlink" title="pick"></a>pick</h2><p>Picking Items with <code>Pick&lt;Type, Keys&gt;</code></p><ul><li>挑選想要的屬性(key)做使用</li><li>注意 pick 只能在 type 宣告使用</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">completed</span>: <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TodoPreview</span> = <span class="title class_">Pick</span>&lt;<span class="title class_">Todo</span>, <span class="string">&quot;title&quot;</span> | <span class="string">&quot;completed&quot;</span>&gt;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="attr">todo</span>: <span class="title class_">TodoPreview</span> = &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;Clean room&quot;</span>,</span><br><span class="line">  <span class="attr">completed</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(todo.<span class="property">title</span>); <span class="comment">// &quot;Clean room&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(todo.<span class="property">description</span>); <span class="comment">// undefined</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>注意 pick 只能在 type 宣告使用<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> todo = <span class="title class_">Pick</span>&lt;<span class="title class_">Todo</span>, &quot;title&quot; | &quot;completed&quot;&gt;;</span><br><span class="line">// &#x27;<span class="title class_">Pick</span>&#x27; only refers to a type, but is being used as a value here.</span><br></pre></td></tr></table></figure></li></ul><h2 id="omit"><a href="#omit" class="headerlink" title="omit"></a>omit</h2><p><code>Omit&lt;Type, Keys&gt;</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Todo</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">description</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">completed</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">createdAt</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TodoPreview</span> = <span class="title class_">Omit</span>&lt;<span class="title class_">Todo</span>, <span class="string">&quot;description&quot;</span>&gt;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="attr">todo</span>: <span class="title class_">TodoPreview</span> = &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;Clean room&quot;</span>,</span><br><span class="line">  <span class="attr">completed</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">createdAt</span>: <span class="number">1615544252770</span>,</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>參考資料<br><a href="https://refine.dev/blog/typescript-pick-utility-type/">A Detailed Guide on TypeScript Pick Type</a></p>]]></content>
      
      
      <categories>
          
          <category> TypeScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode rotate-image</title>
      <link href="/2022/12/21/rotate-image/"/>
      <url>/2022/12/21/rotate-image/</url>
      
        <content type="html"><![CDATA[<p>一開始看到題目，看到2維陣列就會有些緊張，想著是否要拆開，或是要如何從圖示去轉陣列，寫得很亂又雜還是解不出來。<br>看完其他教學才知道可以從斜對角開始調換，最後再將左右做調換。</p><p>You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).</p><p>You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.</p><p> <img src="https://i.imgur.com/0khxyek.png" alt=""></p><p><img src="https://i.imgur.com/LjKoWWh.jpg" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> rotate = <span class="keyword">function</span> (<span class="params">matrix</span>) &#123;</span><br><span class="line">  <span class="comment">//斜對角</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; matrix.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; matrix.<span class="property">length</span>; j++) &#123;</span><br><span class="line">      <span class="keyword">let</span> temp = matrix[i][j];</span><br><span class="line">      matrix[i][j] = matrix[j][i];</span><br><span class="line">      matrix[j][i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//reverse</span></span><br><span class="line">  <span class="comment">// Secondly Make Reflected Image Of Matrix</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; matrix.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      <span class="comment">//最左和最右調換，為兩兩調換，所以j的長度為matrix長度除以2</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; matrix.<span class="property">length</span> / <span class="number">2</span>; j++) &#123;</span><br><span class="line">      <span class="keyword">var</span> <span class="title class_">Temp</span> = matrix[i][j]</span><br><span class="line">      <span class="comment">//右側最後的值為長度-1</span></span><br><span class="line">      matrix[i][j] = matrix[i][matrix.<span class="property">length</span> - <span class="number">1</span> - j]</span><br><span class="line">      matrix[i][matrix.<span class="property">length</span> - <span class="number">1</span> - j] = <span class="title class_">Temp</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> matrix;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>參考資料：<br><a href="https://www.youtube.com/watch?v=swlO6KKh8yk">Rotate Image - LeetCode 48 - JavaScript</a></p>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redux Toolkit - RTK Query中間層非同步Fetch API的處理</title>
      <link href="/2022/12/01/React-Middleware/"/>
      <url>/2022/12/01/React-Middleware/</url>
      
        <content type="html"><![CDATA[<p>當發起 dispatch 到 UI 更新之間做什麼事情</p><ul><li><p>希望 dispath 有能力可以再去做其他事情（所以會在過程中去做一些邏輯）</p></li><li><p>希望過程中可以再做些事情（UI 從 dispatch 到真正渲染之間）</p><p><img src="https://i.imgur.com/FROBvmD.png" alt=""><br><a href="https://redux.js.org/understanding/history-and-design/middleware">Middleware</a></p></li><li><p>實際上是一個 function</p></li><li><p>next 是 dispatch 的意思，next 所代表的是傳入 action ，會調用下一個 dispatch 來執行所傳入的這個 action </p></li></ul><p>以官網範例：</p><ul><li>他是 3 個函式包在一起</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">logger</span> = store =&gt; <span class="function"><span class="params">nextDispatch</span> =&gt;</span> <span class="function"><span class="params">action</span> =&gt;</span> &#123;  </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;dispatching&#x27;</span>, action)  </span><br><span class="line"><span class="keyword">let</span> result = <span class="title function_">nextDispatch</span>(action)  </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;next state&#x27;</span>, store.<span class="title function_">getState</span>())  </span><br><span class="line"><span class="keyword">return</span> result  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在專案建立<br>位置：src / middleware</p><h3 id="簡易說明"><a href="#簡易說明" class="headerlink" title="簡易說明"></a>簡易說明</h3><p>在 return 最後的 function 之前，第二個 function 就是將原有的 dispatch 丟到最後的 function 中，再 return 出去。<br>在取的 dispatch 之前，會再拿到 store 也是使用 api 時候會回傳進來的東西。<br>當 middleware 建立好之後，要到 store 當案進行宣告</p><h3 id="combineReducers"><a href="#combineReducers" class="headerlink" title="combineReducers"></a>combineReducers</h3><ul><li>建立的 slice夾中可能會有多個 reducer，例如 todoReducer, friendReducer, phoneReduce…</li></ul><p>Middleware 與 store 的建立<br><img src="https://i.imgur.com/H7EOAfX.png" alt=""></p><p>在 middleware 去寫功能的時後，主要分為兩個部分</p><ol><li>在 dispach 之前要做什麼事情</li><li>在 dispach 之後要做什麼事情</li></ol><h2 id="RTK-Query"><a href="#RTK-Query" class="headerlink" title="RTK Query"></a>RTK Query</h2><p>使用 middileware 去定義我們的 reducers 會分成多個階段</p><ul><li>pedding</li><li>success</li><li>error<br>針對每一次 API 取資料，加入到  reducers 中，此方式會使得 reducer 變得龐大、複雜。<br>RTK Query 協助將所有關於 call API 或是 獲取資料過程的功能，將他包裝成一個攻能，並且完全獨立於 reducer 或 redux 的邏輯</li><li>可以使用 RTK Query 中的 hook 去獲取當前 data , error 狀態等<br><a href="https://redux-toolkit.js.org/rtk-query/overview">官方文件</a></li></ul><h2 id="建立-api"><a href="#建立-api" class="headerlink" title="建立 api"></a>建立 api</h2><p>educerPath =&gt; 最後會產生 reducer ，所包含內容會有 pedding, success,error 等狀態<br>baseQuery =&gt; 就是放入 baseUrl<br>endpoint =&gt; 放入 query 資訊<br>    any : 表示會回傳一個 any 結果<br>    string : 需要傳入 string 的 input </p><p>json placeholder</p><p><img src="https://i.imgur.com/40MQaiu.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApi, fetchBaseQuery &#125; <span class="keyword">from</span> <span class="string">&#x27;@reduxjs/toolkit/query/react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> todoApiService = <span class="title function_">createApi</span>(&#123;</span><br><span class="line"></span><br><span class="line"><span class="attr">reducerPath</span>: <span class="string">&#x27;todoApi&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="attr">baseQuery</span>: <span class="title function_">fetchBaseQuery</span>(&#123; <span class="attr">baseUrl</span>: <span class="string">&#x27;https://jsonplaceholder.typicode.com/&#x27;</span> &#125;),</span><br><span class="line"></span><br><span class="line"><span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// getPokemonByName: builder.query&lt;Pokemon, string&gt;(&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// query: (name) =&gt; `pokemon/$&#123;name&#125;`,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#125;),</span></span><br><span class="line"></span><br><span class="line"><span class="attr">getTodoApi</span>: builder.<span class="property">query</span>&lt;any, string&gt;(&#123;</span><br><span class="line"></span><br><span class="line"><span class="attr">query</span>: <span class="function">(<span class="params">id</span>) =&gt;</span> <span class="string">`todos/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;),</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// Export hooks for usage in functional components, which are  </span></span><br><span class="line"><span class="comment">// auto-generated based on the defined endpoints </span></span><br><span class="line"><span class="comment">// 以下會自動對應產生</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123; useGetTodoApiQuery &#125; = todoApiService</span><br></pre></td></tr></table></figure><h2 id="至-store-新增-todoAPI"><a href="#至-store-新增-todoAPI" class="headerlink" title="至  store 新增 todoAPI"></a>至  store 新增 todoAPI</h2><p><img src="https://i.imgur.com/ChMTJOz.png" alt=""></p><h2 id="引用-API-hook"><a href="#引用-API-hook" class="headerlink" title="引用 API hook"></a>引用 API hook</h2><p><code>import &#123; useGetTodoApiQuery &#125; from &#39;./services/todoApi&#39;;</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&#x27;styled-components&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useAppSelector, useAppDispatch &#125; <span class="keyword">from</span> <span class="string">&#x27;./hooks&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; addTodo, addTimestamp &#125; <span class="keyword">from</span> <span class="string">&#x27;./slice/todo&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useGetTodoApiQuery &#125; <span class="keyword">from</span> <span class="string">&#x27;./services/todoApi&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Wrapper</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  padding: 1.5rem;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Title</span> = styled.<span class="property">h2</span><span class="string">`</span></span><br><span class="line"><span class="string">  font-weight: 900;</span></span><br><span class="line"><span class="string">  margin-top: 2rem;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">NoteInput</span> = styled.<span class="property">input</span><span class="string">`</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  height: 40px;</span></span><br><span class="line"><span class="string">  border-radius: 10px;</span></span><br><span class="line"><span class="string">  padding-left: .5rem;</span></span><br><span class="line"><span class="string">  box-sizing: border-box;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SubmitBtn</span> = styled.<span class="property">button</span><span class="string">`</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  box-sizing: border-box;</span></span><br><span class="line"><span class="string">  height: 40px;</span></span><br><span class="line"><span class="string">  background: #000;</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  justify-content: center;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">  color: #fff;</span></span><br><span class="line"><span class="string">  border-radius: 10px;</span></span><br><span class="line"><span class="string">  border: 0;</span></span><br><span class="line"><span class="string">  font-weight: 900;</span></span><br><span class="line"><span class="string">  margin-top: 1rem;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  :active &#123;</span></span><br><span class="line"><span class="string">    background: #000000be;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Item</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  margin-top: 1rem;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &gt; b &#123;</span></span><br><span class="line"><span class="string">    margin-right: .5rem;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> todoReducer = <span class="title function_">useAppSelector</span>(<span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">todoReducer</span>)</span><br><span class="line">  <span class="keyword">const</span> todoList = todoReducer.<span class="property">todoList</span></span><br><span class="line">  <span class="keyword">const</span> dispatch = <span class="title function_">useAppDispatch</span>()</span><br><span class="line">  <span class="keyword">const</span> [text, setText] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> &#123; data, error, isLoading &#125; = <span class="title function_">useGetTodoApiQuery</span>(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">  <span class="comment">//api 獲取資料</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;data:&#x27;</span>, data)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;error:&#x27;</span>, error)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isLoading:&#x27;</span>, isLoading)</span><br><span class="line"></span><br><span class="line">  <span class="comment">//處裡 data 可能 undefined 的問題</span></span><br><span class="line">  <span class="keyword">const</span> &#123; userId = <span class="string">&#x27;N/A&#x27;</span>, title = <span class="string">&#x27;N/A&#x27;</span> &#125; = data || &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Wrapper</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Title</span>&gt;</span>TODO LIST<span class="tag">&lt;/<span class="name">Title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">NoteInput</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&#123;text&#125;</span> <span class="attr">onChange</span>=<span class="string">&#123;(e:</span> <span class="attr">React.ChangeEvent</span>&lt;<span class="attr">HTMLInputElement</span>&gt;</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">        setText(e.target.value)</span></span><br><span class="line"><span class="language-xml">      &#125;&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SubmitBtn</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">        if (text === &#x27;&#x27;) &#123;</span></span><br><span class="line"><span class="language-xml">          alert(&#x27;請輸入TODO內容&#x27;)</span></span><br><span class="line"><span class="language-xml">          return</span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml">        dispatch(addTodo(text))</span></span><br><span class="line"><span class="language-xml">        setText(&#x27;&#x27;)</span></span><br><span class="line"><span class="language-xml">      &#125;&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        Submit</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SubmitBtn</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SubmitBtn</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">        dispatch(addTimestamp())</span></span><br><span class="line"><span class="language-xml">      &#125;&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        Record Timestamp</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SubmitBtn</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Title</span>&gt;</span>List<span class="tag">&lt;/<span class="name">Title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;</span></span><br><span class="line"><span class="language-xml">        todoList.map((todo, index) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">          return <span class="tag">&lt;<span class="name">Item</span> <span class="attr">key</span>=<span class="string">&#123;todo&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;index + 1&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;todo&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#125;)</span></span><br><span class="line"><span class="language-xml">      &#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Title</span>&gt;</span>List2<span class="tag">&lt;/<span class="name">Title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;</span></span><br><span class="line"><span class="language-xml">        isLoading &amp;&amp; <span class="tag">&lt;<span class="name">p</span>&gt;</span> 正在載入資料...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#125;</span></span><br><span class="line"><span class="language-xml">      &#123;</span></span><br><span class="line"><span class="language-xml">        !isLoading &amp;&amp;</span></span><br><span class="line"><span class="language-xml">        (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;/* <span class="tag">&lt;<span class="name">p</span>&gt;</span>User ID:&#123;data?.userId&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Usr Title:&#123;data?.title&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span> */&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>User ID:&#123;userId&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Usr Title:&#123;title&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        )</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Wrapper</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  );</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">export default App;</span></span><br><span class="line"><span class="language-xml"></span></span><br></pre></td></tr></table></figure><p>若是使用 react thunk </p><ul><li>這裡的 middleware 的 reducer 中的 status 要自己去定義</li><li>優點：可以完全掌控自己 reducer 的內容</li><li>但相對也會較為繁瑣</li></ul>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redux Toolkit</title>
      <link href="/2022/12/01/ReduxToolkit/"/>
      <url>/2022/12/01/ReduxToolkit/</url>
      
        <content type="html"><![CDATA[<p>安裝：<br><a href="https://redux.js.org/introduction/installation">官網安裝</a></p><p>此範例來自 Bruce 前端課程，使用 todoList 來練習</p><ul><li>從官網學習基礎設定</li></ul><ol><li>建立 store 同時，撰寫 reducer(會自動產生出對應 reducer 的 action)<ol><li>action 如同 dispatch 所送出的包裹</li><li>reducer 會去拆解包裹，以了解用戶想做的事<br>應用於 todo-list</li></ol></li><li>store 中會存有幾條備忘錄，幾條 todo視像要做</li><li>建立資料夾 src / slice ，此 slice 中包含 reducer, action<br><a href="https://redux.js.org/tutorials/typescript-quick-start">TS-設立tool-kit</a><br>建立 store 的方式，要先建立 reducer</li></ol><h3 id="src-slice-todo-ts"><a href="#src-slice-todo-ts" class="headerlink" title="src / slice / todo.ts"></a>src / slice / todo.ts</h3><ul><li>建立 slice，並注意要傳入三個參數<ul><li>name : slice 的名字</li><li>initialState 初始化的 state，建立初始狀態得值以及型別</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createSlice &#125; <span class="keyword">from</span> <span class="string">&#x27;@reduxjs/toolkit&#x27;</span></span><br><span class="line"><span class="comment">// Define a type for the slice state  </span></span><br><span class="line">interface todoState &#123;  </span><br><span class="line">  <span class="attr">todoList</span>: <span class="title class_">Array</span>&lt;string&gt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">initialState</span>: todoState = &#123;  </span><br><span class="line">  <span class="attr">todoList</span>: []  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> todoSlice = <span class="title function_">createSlice</span>(&#123;  </span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;todo&#x27;</span>,</span><br><span class="line">initialState,</span><br><span class="line"><span class="attr">reducers</span>:&#123;</span><br><span class="line"><span class="comment">//state:當下狀態</span></span><br><span class="line"><span class="comment">//action:對應的動作</span></span><br><span class="line"><span class="attr">addTodo</span>: <span class="function">(<span class="params">state,action</span>)=&gt;</span>&#123;</span><br><span class="line">state.<span class="property">todoList</span>.<span class="title function_">push</span>(action.<span class="property">payload</span>)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">addTimestamp</span>:<span class="function">(<span class="params">state</span>)=&gt;</span>&#123;</span><br><span class="line">state.<span class="property">todoList</span>.<span class="title function_">push</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>().<span class="title function_">toString</span>())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在此範例中會有兩個 dispatch</p><ol><li>submit</li><li>record timestamp</li></ol><ul><li>dispatch 會發出上面兩個 action </li><li>reducer 要兩個事件接收<br>最後的 export todoSlice</li><li>todoSlice 中會包含 actions , reducer , 以及其他 API</li></ul><h2 id="建立-store"><a href="#建立-store" class="headerlink" title="建立 store"></a>建立 store</h2><ol><li>位置 src / store.ts<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; configureStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@reduxjs/toolkit&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><p><img src="https://i.imgur.com/41RnyWT.png" alt=""></p><p>從上面過程，可以看到我們 store, action , reducer 都撰寫完成</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li>回到 UI 觸發狀態改變的地方 </li><li><ol><li>index.tsx 裝入 store<ul><li>像是 context 的概念作為 context provider 的內容</li></ul></li></ol></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Provider</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-redux&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Provider</span> <span class="attr">store</span>=<span class="string">&#123;store&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">Provider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">React.StrictMode</span>&gt;</span></span>,</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>拿到 store 中的 todoList 來使用渲染於畫面</p><ul><li>要如何拿到 store ? 使用 useSelector</li><li>在這裡要注意因為使用 TS 所以會有類型定義問題！<ul><li>src / hooks.tsx</li></ul></li></ul><ol><li>型別首先要來自於 store 檔案</li></ol><ul><li>ReturnType: 幫我們將 store 中的內容，直接導出對應的 type</li></ul><p><code>export type RootState = ReturnType&lt;typeof store.getState&gt;</code></p><ol start="2"><li>回到 hooks 建立定義好型別的 API</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="attr">useAppSelector</span>: <span class="title class_">TypedUseSelectorHook</span>&lt;<span class="title class_">RootState</span>&gt; = useSelector</span><br></pre></td></tr></table></figure><ol start="3"><li>可以 到 App 檔案或相關的子組件都可以調用 store 的內容<ul><li>可以拿到預設的 state </li></ul></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useAppSelector &#125; <span class="keyword">from</span> <span class="string">&#x27;./hooks&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> todoReducer = <span class="title function_">useAppSelector</span>(<span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">todoReducer</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> todoList = todoReducer.<span class="property">todoList</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Wrapper</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Title</span>&gt;</span>TODO LIST<span class="tag">&lt;/<span class="name">Title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">NoteInput</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">SubmitBtn</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">Submit</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">SubmitBtn</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">SubmitBtn</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">Record Timestamp</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">SubmitBtn</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Title</span>&gt;</span>List<span class="tag">&lt;/<span class="name">Title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#123;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">todoList.map((todo, index) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">return <span class="tag">&lt;<span class="name">Item</span> <span class="attr">key</span>=<span class="string">&#123;todo&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;index + 1&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#123;todo&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">Item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#125;)</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">Wrapper</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><h3 id="狀態更新"><a href="#狀態更新" class="headerlink" title="狀態更新"></a>狀態更新</h3><ul><li>使用 dispatch 一些 action</li><li>定義 useDispatch </li></ul><ol><li>hooks<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">TypedUseSelectorHook</span>, useDispatch, useSelector &#125; <span class="keyword">from</span> <span class="string">&#x27;react-redux&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> type &#123; <span class="title class_">RootState</span>, <span class="title class_">AppDispatch</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//自定義 hook</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Use throughout your app instead of plain `useDispatch` and `useSelector`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="attr">useAppDispatch</span>: <span class="function">() =&gt;</span> <span class="title class_">AppDispatch</span> = useDispatch</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="attr">useAppSelector</span>: <span class="title class_">TypedUseSelectorHook</span>&lt;<span class="title class_">RootState</span>&gt; = useSelector</span><br></pre></td></tr></table></figure></li><li>store.ts</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; configureStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@reduxjs/toolkit&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> todoReducer <span class="keyword">from</span> <span class="string">&#x27;./slice/todo&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">configureStore</span>(&#123;</span><br><span class="line"></span><br><span class="line"><span class="attr">reducer</span>: &#123;</span><br><span class="line"></span><br><span class="line">todoReducer</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Infer the `RootState` and `AppDispatch` types from the store itself</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//匯出對應的類型</span></span><br><span class="line"><span class="keyword">export</span> type <span class="title class_">RootState</span> = <span class="title class_">ReturnType</span>&lt;<span class="keyword">typeof</span> store.<span class="property">getState</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> type <span class="title class_">AppDispatch</span> = <span class="keyword">typeof</span> store.<span class="property">dispatch</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><p>到 App.tsx 使用 dispatch</p><ul><li>宣告 dispatch</li><li>設置 setState 的值</li><li>綁定於 input 並讓 input onchange 時去觸發值得改變</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&#x27;styled-components&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useAppSelector, useAppDispatch &#125; <span class="keyword">from</span> <span class="string">&#x27;./hooks&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; addTodo, addTimestamp &#125; <span class="keyword">from</span> <span class="string">&#x27;./slice/todo&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> todoReducer = <span class="title function_">useAppSelector</span>(<span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">todoReducer</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> todoList = todoReducer.<span class="property">todoList</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dispatch = <span class="title function_">useAppDispatch</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> [text, setText] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Wrapper</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Title</span>&gt;</span>TODO LIST<span class="tag">&lt;/<span class="name">Title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">NoteInput</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&#123;text&#125;</span> <span class="attr">onChange</span>=<span class="string">&#123;(e:</span> <span class="attr">React.ChangeEvent</span>&lt;<span class="attr">HTMLInputElement</span>&gt;</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">setText(e.target.value)</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#125;&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">SubmitBtn</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">if (text === &#x27;&#x27;) &#123;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">alert(&#x27;請輸入TODO內容&#x27;)</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">return</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">dispatch(addTodo(text))</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">setText(&#x27;&#x27;)</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#125;&#125;&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">Submit</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">SubmitBtn</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">SubmitBtn</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">dispatch(addTimestamp())</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#125;&#125;&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">Record Timestamp</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">SubmitBtn</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Title</span>&gt;</span>List<span class="tag">&lt;/<span class="name">Title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#123;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">todoList.map((todo, index) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">return <span class="tag">&lt;<span class="name">Item</span> <span class="attr">key</span>=<span class="string">&#123;todo&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>&#123;index + 1&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#123;todo&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">Item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#125;)</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">Wrapper</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">);</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  </span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">export default App;</span></span><br></pre></td></tr></table></figure><h2 id="總結步驟"><a href="#總結步驟" class="headerlink" title="總結步驟"></a>總結步驟</h2><ol><li>定義 slice 中的內容，其中包含 初始的資料定義、 reducers<ol><li>reducers 會透過 toolkit 這工具，將對應得 action 產生出來</li><li>action 可以在 dispatch 做發送時帶出去</li></ol></li><li>定義 provider 作為將 store 資料傳入的橋樑</li><li>store 的產生：來自於將 slice 中的 reducers 建立好之後可以隨之建立的內容</li><li>建立 hooks ：撰寫自定義的 hook ，將原本內建的 hook 進行重新包裝</li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React - 建立元件</title>
      <link href="/2022/11/22/react-component/"/>
      <url>/2022/11/22/react-component/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/VykOAkm.png" alt=""></p><p>前段時間練習了一些 React 的基礎，對於 JSX 以及一些 hook 的用法比較有概念，所以就以 Bruce 的 React 課程實作再來練習，樣式部分以 Tailwind 為主此外也搭配 TS 來撰寫。</p><h2 id="1-Header"><a href="#1-Header" class="headerlink" title="1. Header"></a>1. Header</h2><ul><li>製作 IGHeader 元件，因為到不同頁面都會有 header 存在，所以可以將它放在外面的共用元件。</li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">IGHeader</span>: <span class="title class_">React</span>.<span class="property">FC</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> go = <span class="title function_">useNavigate</span>()</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">header</span> <span class="attr">className</span>=<span class="string">&quot;sticky top-0 border-b-[1px] bg-white border-gray-300 &quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex justify-between items-center h-[60px] px-2 lg:max-w-[1024px] lg:mx-auto lg:px-0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">img</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;w-[100px] cursor-pointer&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">src</span>=<span class="string">&quot;/images/logo.svg&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">svg</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">className</span>=<span class="string">&quot;h-6 w-6 mr-4 cursor-pointer&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> go(&#x27;/&#x27;)&#125;</span></span><br><span class="line"><span class="language-xml">          &gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">path</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">strokeLinecap</span>=<span class="string">&quot;round&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">strokeLinejoin</span>=<span class="string">&quot;round&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">strokeWidth</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">d</span>=<span class="string">&quot;M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">svg</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">className</span>=<span class="string">&quot;h-6 w-6 mr-4 cursor-pointer&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> go(&#x27;/following&#x27;)&#125;</span></span><br><span class="line"><span class="language-xml">          &gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">path</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">strokeLinecap</span>=<span class="string">&quot;round&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">strokeLinejoin</span>=<span class="string">&quot;round&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">strokeWidth</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">d</span>=<span class="string">&quot;M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot; h-6 w-6 text-white  bg-gray-900  font-bold flex  rounded-full justify-center items-center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            E</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-IGContainer"><a href="#2-IGContainer" class="headerlink" title="2. IGContainer"></a>2. IGContainer</h2><p>頁面佈局設定，除了 限時動態頁面會呈現外，在追蹤者頁面也會使用到</p><ul><li>使用 Tailwind 設定左右版面以及當螢幕不同尺寸的設定</li><li>將樣式寫在(style.div 裏面)，作為一個組件 export 出去</li></ul><h2 id="3-限時動態列表（IGStory）"><a href="#3-限時動態列表（IGStory）" class="headerlink" title="3. 限時動態列表（IGStory）"></a>3. 限時動態列表（IGStory）</h2><p> <img src="https://i.imgur.com/jzE9sAZ.png" alt=""></p><ul><li>因隸屬於 home 裡面的位置，所以可以將檔案，放在 home 資料夾中，屬於 home 中的組件<br>//通常在一份專案中不用引入兩個 css 框架<br>實作：<ol start="2"><li>List Container 的容器<br><a href="https://tailwindcss.com/docs/overflow#scrolling-horizontally-if-needed">文件</a></li></ol><ul><li>在組建內部要使用 JS 相關的邏輯的寫法，要在要面用大括號刮起來</li><li>每一個小圖都是一個 item ，所以可以先製作組件</li></ul></li></ul><h3 id="限時動態-item-組件"><a href="#限時動態-item-組件" class="headerlink" title="限時動態 item 組件"></a>限時動態 item 組件</h3><ul><li>此組件建立其中的小項目</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line">type <span class="title class_">ItemProps</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: string;</span><br><span class="line">  <span class="attr">avatar</span>: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Item</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">ItemProps</span>&gt; = <span class="function">(<span class="params">&#123; name, avatar &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot; text-center &quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot; rounded-full w-[56px] h-[56px] ring-2 border-2 border-white ring-red-500 mx-[11px] p-[3px] &quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundImage:</span> `<span class="attr">url</span>($&#123;<span class="attr">avatar</span>&#125;)`,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundPosition:</span> &quot;<span class="attr">center</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundSize:</span> &quot;<span class="attr">cover</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;text-xs mt-1&quot;</span>&gt;</span>&#123;name&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Item</span></span><br></pre></td></tr></table></figure><h3 id="外層"><a href="#外層" class="headerlink" title="外層"></a>外層</h3><ul><li>在外層的主要檔案，就是將模板建立好，讓 item 可以 map 進去</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">IGStory</span>: <span class="title class_">React</span>.<span class="property">FC</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> storyData = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;bruce_fe&quot;</span>,</span><br><span class="line">      <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;/images/avatars/a1.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;max&quot;</span>,</span><br><span class="line">      <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;/images/avatars/a2.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;fm&quot;</span>,</span><br><span class="line">      <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;/images/avatars/a3.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">4</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;joanne&quot;</span>,</span><br><span class="line">      <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;/images/avatars/a4.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">5</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;focus&quot;</span>,</span><br><span class="line">      <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;/images/avatars/a5.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">6</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;louis&quot;</span>,</span><br><span class="line">      <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;/images/avatars/a6.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">7</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;alvin&quot;</span>,</span><br><span class="line">      <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;/images/avatars/a7.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">8</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;grace&quot;</span>,</span><br><span class="line">      <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;/images/avatars/a8.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">9</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;rance&quot;</span>,</span><br><span class="line">      <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;/images/avatars/a9.png&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">10</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;bruce_fe&quot;</span>,</span><br><span class="line">      <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;/images/avatars/a10.png&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;w-full flex items-center h-[110px] box-border overflow-x-auto overflow-y-hidden no-scrollbar  shadow-md lg:my-8&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;/* <span class="tag">&lt;<span class="name">Item</span> <span class="attr">name</span>=<span class="string">&quot;Mike&quot;</span> <span class="attr">avatar</span>=<span class="string">&#x27;/images/avatars/a1.png&#x27;</span> /&gt;</span> */&#125;</span></span><br><span class="line"><span class="language-xml">      &#123;</span></span><br><span class="line"><span class="language-xml">        storyData?.map((item) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">          const &#123; id, name, avatar &#125; = item</span></span><br><span class="line"><span class="language-xml">          return <span class="tag">&lt;<span class="name">Item</span> <span class="attr">key</span>=<span class="string">&#123;id&#125;</span> <span class="attr">name</span>=<span class="string">&#123;name&#125;</span> <span class="attr">avatar</span>=<span class="string">&#123;avatar&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#125;)</span></span><br><span class="line"><span class="language-xml">      &#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">IGStory</span></span><br></pre></td></tr></table></figure><h2 id="3-User-組件"><a href="#3-User-組件" class="headerlink" title="3. User 組件"></a>3. User 組件</h2><ul><li>使用者資訊表，在不同區塊都有重複出現，所以可以抽成共用組件</li><li>現定義好 props 的型別</li><li>依照藥的版型來切出樣貌，將變數帶入</li></ul><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">IGUserProps</span> = &#123;</span><br><span class="line">  size?: <span class="string">&quot;medium&quot;</span> | <span class="string">&quot;small&quot;</span>;</span><br><span class="line">  showFollow?: <span class="built_in">boolean</span>;</span><br><span class="line">  isFollowing?: <span class="built_in">boolean</span>;</span><br><span class="line">  account?: <span class="built_in">string</span>;</span><br><span class="line">  location?: <span class="built_in">string</span>;</span><br><span class="line">  avatar?: <span class="built_in">string</span>;</span><br><span class="line">  id?: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">IGUser</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">IGUserProps</span>&gt; = <span class="function">(<span class="params">&#123;</span></span></span><br><span class="line"><span class="params"><span class="function">  size = <span class="string">&quot;small&quot;</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">  showFollow = <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">  isFollowing = <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">  account,</span></span></span><br><span class="line"><span class="params"><span class="function">  location,</span></span></span><br><span class="line"><span class="params"><span class="function">  avatar,</span></span></span><br><span class="line"><span class="params"><span class="function">  id,</span></span></span><br><span class="line"><span class="params"><span class="function">&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line"></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex h-[70px] items-center box-border px-4 &quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">size</span> === <span class="string">&quot;small&quot;</span> ? &quot;<span class="attr">w-</span>[<span class="attr">40px</span>] <span class="attr">h-</span>[<span class="attr">40px</span>]&quot; <span class="attr">:</span> &quot;<span class="attr">w-</span>[<span class="attr">60px</span>] <span class="attr">h-</span>[<span class="attr">60px</span>]&quot;&#125; <span class="attr">overflow-hidden</span> <span class="attr">rounded-full</span> `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundImage:</span> `<span class="attr">url</span>($&#123;<span class="attr">avatar</span>&#125;)`,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundPosition:</span> &quot;<span class="attr">center</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundSize:</span> &quot;<span class="attr">cover</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;ml-4&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;text-sm font-bold&quot;</span>&gt;</span>&#123;account&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;text-gray-400&quot;</span>&gt;</span>&#123;location&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;showFollow &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">isFollowing</span> ? &quot;<span class="attr">text-gray-700</span>&quot; <span class="attr">:</span> &quot;<span class="attr">text-blue-400</span>&quot;&#125; <span class="attr">text-xs</span> <span class="attr">ml-auto</span> <span class="attr">cursor-pointer</span> <span class="attr">font-bold</span>`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span> &#123;isFollowing ? &quot;FOLLOWING&quot; : &quot;FOLLOW&quot;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      )</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>memo 對於重複渲染，效能優化使用</li></ul><p><a href="https://ithelp.ithome.com.tw/articles/10252827">border-box</a></p><p><img src="https://i.imgur.com/x16ZQBu.png" alt=""></p><h2 id="post-組件"><a href="#post-組件" class="headerlink" title="post 組件"></a>post 組件</h2><p> <img src="https://i.imgur.com/HMvp7dy.jpg" alt=""></p><ul><li>分為三個部分</li></ul><ol><li>user</li></ol><ul><li>可以使用前面所製作的 user 組件</li></ul><ol start="2"><li>img</li></ol><ul><li>直接放入該項圖片</li></ul><ol start="3"><li>評論區</li></ol><ul><li>也可以製作成小組件，最後再放入 post 組件</li><li>注意傳入 props 要先設定好傳入的型別</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line">type <span class="title class_">CommentsProps</span> = &#123;</span><br><span class="line">  <span class="attr">likes</span>: number;</span><br><span class="line">  <span class="attr">description</span>: string;</span><br><span class="line">  <span class="attr">hashTags</span>: string;</span><br><span class="line">  <span class="attr">createTime</span>: string;</span><br><span class="line">  <span class="attr">account</span>: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Comments</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">CommentsProps</span>&gt; = <span class="function">(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">  &#123;</span></span></span><br><span class="line"><span class="params"><span class="function">    likes,</span></span></span><br><span class="line"><span class="params"><span class="function">    description,</span></span></span><br><span class="line"><span class="params"><span class="function">    hashTags,</span></span></span><br><span class="line"><span class="params"><span class="function">    createTime,</span></span></span><br><span class="line"><span class="params"><span class="function">    account,</span></span></span><br><span class="line"><span class="params"><span class="function">  &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;px-4&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;flex items-center justify-between box-border my-4&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#x27;flex py-1&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          // svg</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#x27;text-sm font-bold&#x27;</span>&gt;</span>&#123;likes&#125; likes<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#x27;text-sm font-bold&#x27;</span>&gt;</span>&#123;description&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#x27;text-blue-400 font-bold&#x27;</span>&gt;</span>&#123;hashTags&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#x27;text-gray-400 font-[500] text-xs mt-2&#x27;</span>&gt;</span>View all 999 comments <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;text-gray-400 text-[10px] mt-1&quot;</span>&gt;</span>&#123;createTime&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  )</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br></pre></td></tr></table></figure><h2 id="profile-區塊"><a href="#profile-區塊" class="headerlink" title="profile 區塊"></a>profile 區塊</h2><ul><li><p>實作快速，直接做出簡易的版面</p></li><li><p>套用前面所做的 IGUser 即可以使用</p><p><img src="https://i.imgur.com/0nIA31V.png" alt=""></p></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">IGUser</span> <span class="keyword">from</span> <span class="string">&quot;components/IGUser&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">IGProfile</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> followingList = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">location</span>: <span class="string">&quot;Singapore&quot;</span>,</span><br><span class="line">      <span class="attr">account</span>: <span class="string">&quot;max_999&quot;</span>,</span><br><span class="line">      <span class="attr">isFollowing</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">avatar</span>: <span class="string">&quot;/images/avatars/a1.png&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">location</span>: <span class="string">&quot;Singapore&quot;</span>,</span><br><span class="line">      <span class="attr">account</span>: <span class="string">&quot;fm_999&quot;</span>,</span><br><span class="line">      <span class="attr">isFollowing</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">avatar</span>: <span class="string">&quot;/images/avatars/a2.png&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="attr">location</span>: <span class="string">&quot;Singapore&quot;</span>,</span><br><span class="line">      <span class="attr">account</span>: <span class="string">&quot;joanne_999&quot;</span>,</span><br><span class="line">      <span class="attr">isFollowing</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">avatar</span>: <span class="string">&quot;/images/avatars/a3.png&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="number">4</span>,</span><br><span class="line">      <span class="attr">location</span>: <span class="string">&quot;Singapore&quot;</span>,</span><br><span class="line">      <span class="attr">account</span>: <span class="string">&quot;focus_999&quot;</span>,</span><br><span class="line">      <span class="attr">isFollowing</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">avatar</span>: <span class="string">&quot;/images/avatars/a4.png&quot;</span>,</span><br><span class="line">    &#125;,]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;mt-8 ml-6 border-box shadow-md px-4&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">IGUser</span> <span class="attr">size</span>=<span class="string">&#x27;medium&#x27;</span> <span class="attr">account</span>=<span class="string">&#x27;Tmommy_0814&#x27;</span> <span class="attr">avatar</span>=<span class="string">&quot;/images/avatar.png&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;text-gray-400 px-4 mt-2&quot;</span>&gt;</span>You are Following<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;</span></span><br><span class="line"><span class="language-xml">          followingList?.map((item) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">            const &#123; location, account, isFollowing, avatar, id &#125; = item</span></span><br><span class="line"><span class="language-xml">            return <span class="tag">&lt;<span class="name">IGUser</span> <span class="attr">location</span>=<span class="string">&#123;location&#125;</span> <span class="attr">account</span>=<span class="string">&#123;account&#125;</span> <span class="attr">isFollowing</span>=<span class="string">&#123;isFollowing&#125;</span> <span class="attr">avatar</span>=<span class="string">&#123;avatar&#125;</span> <span class="attr">key</span>=<span class="string">&#123;id&#125;</span> <span class="attr">showFollow</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#125;)</span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">IGProfile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>此次練習在使用 Tailwind 有些不習慣，主要是在於要稍微記得他的關鍵字並去文件查找屬性來應用，待使用到第三的區塊切版時就變得快速些～<br>另外，使用在課程中 Bruce 也會去說明每個區塊的切割以及重用性，可以將檔案分別放在哪個檔案，以利未來維護。<br>過去可能拿版面並未想太多，或是沒有多餘時間分析每一頁面的某些區塊是否有重複，我們可以依據建立開關或傳入的資料區紹維變動下版面，就可以達到一起使用 component 的效果。</p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷題練習 - Majority Element</title>
      <link href="/2022/11/10/leetcode-Majority-Element/"/>
      <url>/2022/11/10/leetcode-Majority-Element/</url>
      
        <content type="html"><![CDATA[<p>Given an array nums of size n, return the majority element.</p><p>The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.</p><p>Example 1:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [3,2,3]</span><br><span class="line">Output: 3</span><br></pre></td></tr></table></figure><p>Example 2:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [2,2,1,1,1,2,2]</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure><p>在一開始觀察題目，會直覺想說要找出陣列中出現最多次的元素，此外也注意到題目說明有提及運用 n/2 與陣列長度比較出現次數。<br>在一開始會傾向使用 雜湊表 來進行解題，如同找出陣列為一值的方式找出答案。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> majorityElement = <span class="keyword">function</span> (<span class="params">nums</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> newObj = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> num <span class="keyword">of</span> nums) &#123;</span><br><span class="line">    <span class="comment">// console.log(num)</span></span><br><span class="line">    (!newObj[num]) ? newObj[num] = <span class="number">1</span> : newObj[num]++</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// console.log(newObj)</span></span><br><span class="line">  <span class="keyword">let</span> nNum = nums.<span class="property">length</span> / <span class="number">2</span></span><br><span class="line">  <span class="comment">// console.log(&#x27;nNum&#x27;, nNum)</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> newObj) &#123;</span><br><span class="line">    <span class="keyword">if</span> (newObj[key] &gt; nNum) <span class="keyword">return</span> key</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>另外也發現可以使用，Boyer–Moore majority vote algorithm(摩爾投票算法)來解題。<br>宣告變數 result , 以及計算變數。<br>將陣列loop ，判斷陣列元素有無出現進行 count 的加減<br>以 <code>majorityElement2([4, 5, 5, 4, 4])</code> 為範例：<br>第一個元素 4 ，因為 count === 0 , result === 4。<br>進入第二個元素 5，因為 result === 4 進入判斷式 else =&gt; count– 。 所以 count === 0 。<br>進入第三個元素 5，因為 result === 5 進入判斷式 result === elem  =&gt; count++。 所以 count === 1 。<br>進入第四個元素 4，因為 result === 5 進入判斷式 else =&gt; count– 。 所以 count === 0 。<br>進入第五個元素 4，因為 result === 4 進入判斷式 result === elem  =&gt; count++。 所以 count === 1 。</p><p>在迴圈的最後元素 4 ，為目前 count 為 1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> majorityElement2 = <span class="keyword">function</span> (<span class="params">nums</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> result;</span><br><span class="line">  <span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> elem <span class="keyword">of</span> nums) &#123;</span><br><span class="line">    <span class="keyword">if</span> (count === <span class="number">0</span>) &#123;</span><br><span class="line">      result = elem;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (result === elem) &#123;</span><br><span class="line">      count++;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      count--;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><ol start="229"><li>Majority Element II<br>此題也是使用摩爾投票法進行解題</li></ol><p>Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.</p><p>Example 1:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [3,2,3]</span><br><span class="line">Output: [3]</span><br></pre></td></tr></table></figure><p>Example 2:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [1]</span><br><span class="line">Output: [1]</span><br></pre></td></tr></table></figure><p>Example 3:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [1,2]</span><br><span class="line">Output: [1,2]</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> majorityElement = <span class="keyword">function</span> (<span class="params">nums</span>) &#123;</span><br><span class="line">  <span class="comment">// 只要是 &gt; n/3 就進入陣列</span></span><br><span class="line">  <span class="keyword">let</span> candidate1 = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">let</span> candidate2 = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">let</span> count1 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> count2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> num <span class="keyword">of</span> nums) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (candidate1 === num) &#123;</span><br><span class="line">      count1++</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (candidate2 === num) &#123;</span><br><span class="line">      count2++</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (count1 === <span class="number">0</span>) &#123;</span><br><span class="line">      candidate1 = num;</span><br><span class="line">      count1++</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (count2 === <span class="number">0</span>) &#123;</span><br><span class="line">      candidate2 = num;</span><br><span class="line">      count2++</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      count1--;</span><br><span class="line">      count2--;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;data:&#x27;</span>, candidate1, candidate2)</span><br><span class="line">  count1 = <span class="number">0</span>;</span><br><span class="line">  count2 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> res = [];</span><br><span class="line"></span><br><span class="line">  limit = <span class="title class_">Math</span>.<span class="title function_">floor</span>(nums.<span class="property">length</span> / <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> num <span class="keyword">of</span> nums) &#123;</span><br><span class="line">    <span class="keyword">if</span> (candidate1 === num) count1++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (candidate2 === num) &#123;</span><br><span class="line">      count2++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (count1 &gt; limit) res.<span class="title function_">push</span>(candidate1)</span><br><span class="line">  <span class="keyword">if</span> (count2 &gt; limit) res.<span class="title function_">push</span>(candidate2)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res, count1, count2)</span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">majorityElement</span>([<span class="number">1</span>, <span class="number">2</span>])</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/T2y5qLa.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷題練習 - Rotate Array</title>
      <link href="/2022/11/07/Rotate-array/"/>
      <url>/2022/11/07/Rotate-array/</url>
      
        <content type="html"><![CDATA[<p>Given an array, rotate the array to the right by k steps, where k is non-negative.</p><p>Example 1:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [1,2,3,4,5,6,7], k = 3</span><br><span class="line">Output: [5,6,7,1,2,3,4]</span><br><span class="line">Explanation:</span><br><span class="line">rotate 1 steps to the right: [7,1,2,3,4,5,6]</span><br><span class="line">rotate 2 steps to the right: [6,7,1,2,3,4,5]</span><br><span class="line">rotate 3 steps to the right: [5,6,7,1,2,3,4]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Example 2:</span><br><span class="line"></span><br><span class="line">Input: nums = [-1,-100,3,99], k = 2</span><br><span class="line">Output: [3,99,-1,-100]</span><br><span class="line">Explanation: </span><br><span class="line">rotate 1 steps to the right: [99,-1,-100,3]</span><br><span class="line">rotate 2 steps to the right: [3,99,-1,-100]</span><br></pre></td></tr></table></figure><p>1.由上述範例可以觀察到，根據 k 值進行抓取最後的元素至最前面，以此類推下去。<br>當 k 為某值的時後，會由陣列最後方取的該數目元素。<br>以下為直覺解法:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//會有 問題：Time Limit Exceeded</span></span><br><span class="line"><span class="keyword">const</span> rotateArray1 = <span class="keyword">function</span> (<span class="params">nums, k</span>) &#123;</span><br><span class="line">  <span class="comment">//unshift 將給入的元素值放到最前面</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;nums.pop()&#x27;</span>, nums.<span class="title function_">pop</span>())</span><br><span class="line">    nums.<span class="title function_">unshift</span>(nums.<span class="title function_">pop</span>());</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;num&#x27;</span>, nums)</span><br><span class="line">  <span class="keyword">return</span> nums;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.也可以先將陣列進行反轉 reverse ,再依據 k 值 來進行前後段區分，來進行反轉</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">revNum</span> = (<span class="params">nums, start, end</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">while</span> (start &lt; end) &#123;</span><br><span class="line"></span><br><span class="line">    [nums[start], nums[end]] = [nums[end], nums[start]]</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[nums[start], nums[end]]&#x27;</span>, [nums[start], nums[end]])</span><br><span class="line">    start++;</span><br><span class="line">    end--;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(nums)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// revNum([1, 2, 3, 4], 0, 3)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rotateArray2 = <span class="keyword">function</span> (<span class="params">nums, k</span>) &#123;</span><br><span class="line">  k = k % nums.<span class="property">length</span></span><br><span class="line">  <span class="comment">//先整個陣列 reverse</span></span><br><span class="line">  nums.<span class="title function_">reverse</span>()</span><br><span class="line">  <span class="title function_">revNum</span>(nums, <span class="number">0</span>, k - <span class="number">1</span>)</span><br><span class="line">  <span class="title function_">revNum</span>(nums, k, nums.<span class="property">length</span> - <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 測試 - 以登入元件練習</title>
      <link href="/2022/11/02/rect-test-2/"/>
      <url>/2022/11/02/rect-test-2/</url>
      
        <content type="html"><![CDATA[<p>想找專案練習來更認識測試的運用，至 youtube 找尋測試相關的教學。</p><h3 id="建立-login-檔案"><a href="#建立-login-檔案" class="headerlink" title="建立 login 檔案"></a>建立 login 檔案</h3><ul><li><p>login.js : 製作登入元件</p></li><li><p>login.test.js : 撰寫測試</p><p><img src="https://i.imgur.com/4Pw5JTD.png" alt=""></p></li></ul><h3 id="確認-輸入框-有渲染至文件"><a href="#確認-輸入框-有渲染至文件" class="headerlink" title="確認 輸入框 有渲染至文件"></a>確認 輸入框 有渲染至文件</h3><ul><li>使用 <code>getByPlaceholderText</code> 取得輸入框元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">         <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">placeholder</span>=<span class="string">&quot;username&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">value</span>=<span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="tag">       /&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">         <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">placeholder</span>=<span class="string">&quot;password&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">value</span>=<span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="tag">       /&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">test</span>(<span class="string">&quot;username input should be rendered&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Login</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> usernameInputEl = screen.<span class="title function_">getByPlaceholderText</span>(<span class="regexp">/username/i</span>);</span><br><span class="line">  <span class="title function_">expect</span>(usernameInputEl).<span class="title function_">toBeInTheDocument</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&quot;password input should be rendered&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Login</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> passwordInputEl = screen.<span class="title function_">getByPlaceholderText</span>(<span class="regexp">/password/i</span>);</span><br><span class="line">  <span class="title function_">expect</span>(passwordInputEl).<span class="title function_">toBeInTheDocument</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="確認畫面上有按鈕"><a href="#確認畫面上有按鈕" class="headerlink" title="確認畫面上有按鈕"></a>確認畫面上有按鈕</h3><ul><li>getByRole 取得按鈕</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">test</span>(<span class="string">&quot;button should be rendered&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Login</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> buttonEl = screen.<span class="title function_">getByRole</span>(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">  <span class="title function_">expect</span>(buttonEl).<span class="title function_">toBeInTheDocument</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="輸入框一開始為空"><a href="#輸入框一開始為空" class="headerlink" title="輸入框一開始為空"></a>輸入框一開始為空</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">test</span>(<span class="string">&quot;username input should be empty&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Login</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> usernameInputEl = screen.<span class="title function_">getByPlaceholderText</span>(<span class="regexp">/username/i</span>);</span><br><span class="line">  <span class="title function_">expect</span>(usernameInputEl.<span class="property">value</span>).<span class="title function_">toBe</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&quot;password input should be empty&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Login</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> passwordInputEl = screen.<span class="title function_">getByPlaceholderText</span>(<span class="regexp">/password/i</span>);</span><br><span class="line">  <span class="title function_">expect</span>(passwordInputEl.<span class="property">value</span>).<span class="title function_">toBe</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="輸入框為空時，按鈕應為-disabled"><a href="#輸入框為空時，按鈕應為-disabled" class="headerlink" title="輸入框為空時，按鈕應為 disabled"></a>輸入框為空時，按鈕應為 disabled</h3><ul><li>只要取得按鈕元素並使用 <code>toBeDisabled()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">test</span>(<span class="string">&quot;button should be disabled&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Login</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> buttonEl = screen.<span class="title function_">getByRole</span>(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">  <span class="title function_">expect</span>(buttonEl).<span class="title function_">toBeDisabled</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="錯誤訊息的提示"><a href="#錯誤訊息的提示" class="headerlink" title="錯誤訊息的提示"></a>錯誤訊息的提示</h3><p><img src="https://i.imgur.com/hQ33Kxa.png" alt=""></p><ul><li>確保一開始進入畫面，該訊息不應該出現</li><li>可以看見 <code>toBeVisible()</code> ，反之期望無法看見，就需加入not</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">test</span>(<span class="string">&quot;error message should not be visible&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Login</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> errorEl = screen.<span class="title function_">getByTestId</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">  <span class="title function_">expect</span>(errorEl).<span class="property">not</span>.<span class="title function_">toBeVisible</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="輸入框的輸入事件"><a href="#輸入框的輸入事件" class="headerlink" title="輸入框的輸入事件"></a>輸入框的輸入事件</h3><ul><li><a href="https://testing-library.com/docs/dom-testing-library/api-events/">fireEvent</a> 用來針對事件進行測試</li></ul><p><img src="https://i.imgur.com/E9wT8gO.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">test</span>(<span class="string">&quot;username input should change&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Login</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> usernameInputEl = screen.<span class="title function_">getByPlaceholderText</span>(<span class="regexp">/username/i</span>);</span><br><span class="line">  <span class="comment">//模擬傳入的值</span></span><br><span class="line">  <span class="keyword">const</span> testValue = <span class="string">&quot;test&quot;</span>;</span><br><span class="line"></span><br><span class="line">  fireEvent.<span class="title function_">change</span>(usernameInputEl, &#123; <span class="attr">target</span>: &#123; <span class="attr">value</span>: testValue &#125; &#125;);</span><br><span class="line">  <span class="title function_">expect</span>(usernameInputEl.<span class="property">value</span>).<span class="title function_">toBe</span>(testValue);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&quot;password input should change&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Login</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> passwordInputEl = screen.<span class="title function_">getByPlaceholderText</span>(<span class="regexp">/password/i</span>);</span><br><span class="line">  <span class="keyword">const</span> testValue = <span class="string">&quot;test&quot;</span>;</span><br><span class="line"></span><br><span class="line">  fireEvent.<span class="title function_">change</span>(passwordInputEl, &#123; <span class="attr">target</span>: &#123; <span class="attr">value</span>: testValue &#125; &#125;);</span><br><span class="line">  <span class="title function_">expect</span>(passwordInputEl.<span class="property">value</span>).<span class="title function_">toBe</span>(testValue);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="當輸入框有值的時候，按鈕不應該-disabled"><a href="#當輸入框有值的時候，按鈕不應該-disabled" class="headerlink" title="當輸入框有值的時候，按鈕不應該 disabled"></a>當輸入框有值的時候，按鈕不應該 <code>disabled</code></h3><ul><li>期望按鈕可以點擊</li><li>在 jsx 檔案內要設置在輸入框沒有值的時候才是 disabled</li></ul><p><img src="https://i.imgur.com/MdNkcGo.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&quot;button should not be disabled when inputs exist&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Login</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> buttonEl = screen.<span class="title function_">getByRole</span>(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> usernameInputEl = screen.<span class="title function_">getByPlaceholderText</span>(<span class="regexp">/username/i</span>);</span><br><span class="line">  <span class="keyword">const</span> passwordInputEl = screen.<span class="title function_">getByPlaceholderText</span>(<span class="regexp">/password/i</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> testValue = <span class="string">&quot;test&quot;</span>;</span><br><span class="line"></span><br><span class="line">  fireEvent.<span class="title function_">change</span>(usernameInputEl, &#123; <span class="attr">target</span>: &#123; <span class="attr">value</span>: testValue &#125; &#125;);</span><br><span class="line">  fireEvent.<span class="title function_">change</span>(passwordInputEl, &#123; <span class="attr">target</span>: &#123; <span class="attr">value</span>: testValue &#125; &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">expect</span>(buttonEl).<span class="property">not</span>.<span class="title function_">toBeDisabled</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="css-補充"><a href="#css-補充" class="headerlink" title="css 補充"></a>css 補充</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">style=&#123;&#123; <span class="attribute">visibility</span>: error ? <span class="string">&quot;visible&quot;</span> : <span class="string">&quot;hidden&quot;</span> &#125;&#125;</span><br></pre></td></tr></table></figure><p>類似： display:none和visibility:hidden</p><p>而兩者差異：<br>visibility：的隱藏，是物件的位置仍舊保持著不會消失,<br>display: none, 會將 html 該物件拔除</p><h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>此練習範例，很請楚地知道在建立一個功能元件之後，如何再加入每一個區塊的測試，如標題文字、輸入框、按鈕的測試等等，也可以觀察到測試根據使用情境一步步的拆解並加入測試<br>下一篇會有串接資料搭配測試，敬請期待</p><p>參考資料<br><a href="https://github.com/safak/youtube2022/blob/react-testing/src/components/login/Login.jsx">github-login</a><br><a href="https://www.youtube.com/watch?v=Flo268xRpV0">React Testing Tutorial with React Testing Library and Jest</a></p>]]></content>
      
      
      <categories>
          
          <category> React 測試 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 測試</title>
      <link href="/2022/11/02/rect-test-1/"/>
      <url>/2022/11/02/rect-test-1/</url>
      
        <content type="html"><![CDATA[<p>使用 JavaSript 要進行測試最常使用的就是使用 Jest ，另外依據使用的前端框架來搭配使用進行測試。<br>以下內文就先以一些範例來直接學習</p><h2 id="testing-library"><a href="#testing-library" class="headerlink" title="testing-library"></a>testing-library</h2><ul><li><p>當使創建一個 react 檔案，會預設加入的測試範例檔</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="title function_">test</span>(<span class="string">&#x27;renders learn react link&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> linkElement = screen.<span class="title function_">getByText</span>(<span class="regexp">/learn react/i</span>);</span><br><span class="line">  <span class="title function_">expect</span>(linkElement).<span class="title function_">toBeInTheDocument</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>screen  : it represent the whole document which we have rendered</p></li><li><p>getByText: 取得 text</p><ul><li><code>getByText(/learn react/i)</code></li><li><code>expect(linkElement).toBeInTheDocument();</code></li><li>期待變數得值，<code>toBeInTheDocument()</code></li><li>檢測此項目是否存在於文件之中</li><li><ul><li><a href="https://github.com/testing-library/jest-dom#tobeinthedocument">toBeInTheDocument</a>：判斷一個 Element 是否存在於 DOM 中</li></ul></li></ul></li></ul><h3 id="撰寫測試的參考文件"><a href="#撰寫測試的參考文件" class="headerlink" title="撰寫測試的參考文件"></a>撰寫測試的參考文件</h3><p><a href="https://testing-library.com/docs/queries/byrole">ByRole</a><br><a href="https://www.w3.org/TR/html-aria/#docconformance"> role attribute</a></p><h3 id="加入列表（list）測試"><a href="#加入列表（list）測試" class="headerlink" title="加入列表（list）測試"></a>加入列表（list）測試</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logo <span class="keyword">from</span> <span class="string">&#x27;./logo.svg&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&#x27;./components/Login/Login&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">header</span> <span class="attr">className</span>=<span class="string">&quot;App-header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;logo&#125;</span> <span class="attr">className</span>=<span class="string">&quot;App-logo&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;logo&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">Edit <span class="tag">&lt;<span class="name">code</span>&gt;</span>src/App.js<span class="tag">&lt;/<span class="name">code</span>&gt;</span> and save to reload.</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">className</span>=<span class="string">&quot;App-link&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">href</span>=<span class="string">&quot;https://reactjs.org&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">rel</span>=<span class="string">&quot;noopener noreferrer&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"> <span class="attr">.</span>     &gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">Learn React</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Apple<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Banana<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Kiwi<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">test</span>(<span class="string">&#x27;renders 3 list items&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> listItems = screen.<span class="title function_">getAllByRole</span>(<span class="string">&quot;listitem&quot;</span>);</span><br><span class="line">  <span class="title function_">expect</span>(listItems.<span class="property">length</span>).<span class="title function_">toEqual</span>(<span class="number">3</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jest <a href="https://jestjs.io/docs/expect">expect</a></li><li>需要時到官網看相關使用的API<br><code>expect(listItems.length).toBe(3);</code><br><code>expect(listItems.length).toEqual(3);</code></li></ul><h3 id="測試-title"><a href="#測試-title" class="headerlink" title="測試 title"></a>測試 title</h3><ul><li>getByTestId：運用此方法可以直接取得在元素上設置的 data-testid</li><li>getByTitle : 取得在標籤設置 title 的元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- const a = 2</span></span><br><span class="line"><span class="comment">const b = 1 --&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">h1</span> <span class="attr">data-testid</span>=<span class="string">&quot;mytestid&quot;</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">&quot;sum&quot;</span>&gt;</span>&#123;a + b&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">test</span>(<span class="string">&#x27;renders title&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span></span>);</span><br><span class="line"><span class="keyword">const</span> title = screen.<span class="title function_">getByTestId</span>(<span class="string">&quot;mytestid&quot;</span>);</span><br><span class="line"><span class="title function_">expect</span>(title).<span class="title function_">toBeInTheDocument</span>();</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_">test</span>(<span class="string">&#x27;sum should be 3&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> titleSum = screen.<span class="title function_">getByTitle</span>(<span class="string">&quot;sum&quot;</span>);</span><br><span class="line">  <span class="title function_">expect</span>(titleSum.<span class="property">textContent</span>).<span class="title function_">toBe</span>(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="運行測試"><a href="#運行測試" class="headerlink" title="運行測試"></a>運行測試</h3><p><code>npm run test</code></p><ul><li><p>透過測試所提供的錯誤提示，可以得知預期的結果以及實際運行後得到的值之間的差異</p><p><img src="https://i.imgur.com/IT8leGK.png" alt=""></p></li></ul><p>參考資料：<br><a href="https://ithelp.ithome.com.tw/articles/10281691">[Day29] React Testing Library 的一些實用的小技巧</a><br><a href="https://medium.com/%E6%89%8B%E5%AF%AB%E7%AD%86%E8%A8%98/nextjs-testing-tutorial-1-ed4b27563761">Next.js | 初探單元測試，使用 Jest + React Testing Library</a></p>]]></content>
      
      
      <categories>
          
          <category> React 測試 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React - 從官方文件學習 Context 的使用</title>
      <link href="/2022/10/18/React-context/"/>
      <url>/2022/10/18/React-context/</url>
      
        <content type="html"><![CDATA[<h2 id="Passing-Data-Deeply-with-Context"><a href="#Passing-Data-Deeply-with-Context" class="headerlink" title="Passing Data Deeply with Context"></a>Passing Data Deeply with Context</h2><ul><li>當裡面的子狀態，會想要往父層去找尋時，就可以使用Context</li><li>學習文件：<a href="https://beta.reactjs.org/learn?fbclid=IwAR3OXxu3hHQCgDowMfBWzvRDIdPrZpS2-OCktxb_V9EnRYzNrPB_rZ7CrSI">React Docs</a></li><li>資料會和其他元件要共用<ul><li>prop drilling<ol><li>最基本使用</li></ol></li><li>範例：Section.js \ Heading.js</li><li>children 帶入元件的內容</li></ul></li></ul><p><img src="https://i.imgur.com/SAaAzP0.png" alt=""></p><ol start="2"><li>將 app.js 改寫</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Heading</span> <span class="keyword">from</span> <span class="string">&#x27;./Heading.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Section</span> <span class="keyword">from</span> <span class="string">&#x27;./Section.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Page</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Section</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;1&#125;</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Section</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;2&#125;</span>&gt;</span>Heading<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;2&#125;</span>&gt;</span>Heading<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;2&#125;</span>&gt;</span>Heading<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Section</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;3&#125;</span>&gt;</span>Sub-heading<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;3&#125;</span>&gt;</span>Sub-heading<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;3&#125;</span>&gt;</span>Sub-heading<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Section</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;4&#125;</span>&gt;</span>Sub-sub-heading<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;4&#125;</span>&gt;</span>Sub-sub-heading<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;4&#125;</span>&gt;</span>Sub-sub-heading<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Section</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Section</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Section</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Section</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/UnXwJxu.png" alt=""></p><p>以上方式，看到 在 Heading 元件傳入參數<br>改寫為，在 section 元件就來控制裡面的 Heading 是什麼 level</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Section</span> level=&#123;<span class="number">3</span>&#125;&gt;  </span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span>&gt;</span>About<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>  </span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span>&gt;</span>Photos<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>  </span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span>&gt;</span>Videos<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>  </span><br><span class="line"></span><br><span class="line">&lt;/<span class="title class_">Section</span>&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>實作<ol><li><strong>Create</strong> a context.</li><li><strong>Use</strong> that context，在子層<code>import &#123; useContext &#125; from &#39;react&#39;;</code></li><li>提供 context 的值</li></ol></li></ol><h4 id="Create-a-context"><a href="#Create-a-context" class="headerlink" title="Create  a context."></a>Create  a context.</h4><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createContext &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">LevelContext</span> = <span class="title function_">createContext</span>(<span class="number">1</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Use-that-context"><a href="#Use-that-context" class="headerlink" title="Use that context"></a><strong>Use</strong> that context</h4><ul><li>是 Heading 要往外層找資料，所以要在這裡使用 useContext</li><li>要往外層的地方</li><li>注意 level </li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useContext &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LevelContext</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./LevelContext.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Heading</span>(<span class="params">&#123; children &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> level = <span class="title function_">useContext</span>(<span class="title class_">LevelContext</span>);</span><br><span class="line">  <span class="keyword">switch</span> (level) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span>;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      <span class="keyword">throw</span> <span class="title class_">Error</span>(<span class="string">&#x27;Unknown level: &#x27;</span> + level);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Provide-the-context"><a href="#Provide-the-context" class="headerlink" title="Provide the context"></a>Provide the context</h4><ul><li>建立 context 的 provider</li><li>提供此資料的提供者、元件</li><li>這個 provider 是放在最外層，所以在此範例應該放在 section 去改寫</li></ul><h5 id="原本的-section-js"><a href="#原本的-section-js" class="headerlink" title="原本的 section.js"></a>原本的 section.js</h5><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Section</span>(<span class="params">&#123; children &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">section</span> <span class="attr">className</span>=<span class="string">&quot;section&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="改寫section-js"><a href="#改寫section-js" class="headerlink" title="改寫section.js"></a>改寫section.js</h5><ul><li>level 從這邊拿</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LevelContext</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./LevelContext.js&#x27;</span>;  </span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Section</span>(<span class="params">&#123; level, children &#125;</span>) &#123;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (  </span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">section</span> <span class="attr">className</span>=<span class="string">&quot;section&quot;</span>&gt;</span>  </span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">LevelContext.Provider</span> <span class="attr">value</span>=<span class="string">&#123;level&#125;</span>&gt;</span>  </span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&#123;children&#125;  </span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">LevelContext.Provider</span>&gt;</span>  </span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span>  </span><br><span class="line"></span><br><span class="line">);  </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/pI528iX.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷題練習 - Merge Two Sorted Lists</title>
      <link href="/2022/09/24/code-Merge-Two-Sorted-Lists/"/>
      <url>/2022/09/24/code-Merge-Two-Sorted-Lists/</url>
      
        <content type="html"><![CDATA[<p>   首先要先了解 linked lists 和陣列是不一樣的！！<br>   linked lists是一種常見的資料結構，其使用node(節點)來記錄、表示、儲存資料(data)，並利用每個node中的pointer指向下一個node </p><h2 id="題目："><a href="#題目：" class="headerlink" title="題目："></a>題目：</h2><p>You are given the heads of two sorted linked lists list1 and list2.</p><p>Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.</p><p>Return the head of the merged linked list.</p><p><img src="https://i.imgur.com/I645KZq.png" alt=""></p><p>注意類似題目要設立一個 dummy 節點</p><ul><li>如何訪問list 中某個節點的 值，要從第一個節點開始，透過 next 依序訪問下一個節點重複操作直到抵達目標節點並讀取 value</li><li>訪問第一個節點為 list.val  ; 訪問第二個節點 list.next.val ; 訪問第三個節點list.next.next.val </li><li>要將兩個 list 合併的方法，每次比較兩個 而最小的數挑出，放入新的 list</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val, next) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.next = (next===undefined ? null : next)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">list1</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">list2</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">ListNode</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> mergeTwoLists = <span class="keyword">function</span> (<span class="params">l1, l2</span>) &#123;</span><br><span class="line">    <span class="comment">//current</span></span><br><span class="line">    <span class="keyword">const</span> dummy = <span class="keyword">new</span> <span class="title class_">ListNode</span>(-<span class="title class_">Infinity</span>)</span><br><span class="line">    <span class="comment">//point dummy node</span></span><br><span class="line">    <span class="keyword">let</span> prev = dummy;</span><br><span class="line">    <span class="keyword">while</span> (l1 &amp;&amp; l2) &#123;</span><br><span class="line">      <span class="keyword">if</span> (l1.<span class="property">val</span> &lt;= l2.<span class="property">val</span>) &#123;</span><br><span class="line">        prev.<span class="property">next</span> = l1;</span><br><span class="line">        <span class="comment">//移動 prev list</span></span><br><span class="line">        prev = l1</span><br><span class="line">        <span class="comment">//鏈錶指針 l1 就往後移動</span></span><br><span class="line">        l1 = l1.<span class="property">next</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        prev.<span class="property">next</span> = l2;</span><br><span class="line">        prev = l2</span><br><span class="line">        l2 = l2.<span class="property">next</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果 l1 是 null ,就是 l2</span></span><br><span class="line">    <span class="keyword">if</span> (!l1) prev.<span class="property">next</span> = l2;</span><br><span class="line">    <span class="keyword">if</span> (!l2) prev.<span class="property">next</span> = l1;</span><br><span class="line">    <span class="keyword">return</span> dummy.<span class="property">next</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">mergeTwoLists</span>([<span class="number">1</span>, <span class="number">100</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷題練習 - Valid Parentheses</title>
      <link href="/2022/09/24/code-practice/"/>
      <url>/2022/09/24/code-practice/</url>
      
        <content type="html"><![CDATA[<p>  對於刷題總時敬而遠之，記得剛開始學習 JavaScript 時，有挑幾題來練習，看到題目後完全不知道該如何著手，甚至有些題目還要反覆看幾次才比較理解。 畢竟也踏入前端工程師近一年的時間，使用 JavaScript 也有兩年了，該是好好鑽研練習 LeetCode。</p><p>題目：<br>  Given a string s containing just the characters ‘(‘, ‘)’, ‘{‘, ‘}’, ‘[‘ and ‘]’, determine if the input string is valid.</p><p>  An input string is valid if:</p><p>  Open brackets must be closed by the same type of brackets.<br>  Open brackets must be closed in the correct order.<br>  Every close bracket has a corresponding open bracket of the same type.</p><p>  以字串帶入，並要確認傳入的字串中的大括號, 中括號等是否有兩倆配對</p><p>Example 1: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: s = &quot;()&quot;</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: s = &quot;()[]&#123;&#125;&quot;</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: s = &quot;(]&quot;</span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure><ol><li>製作一個物件，為括號的配對</li><li>存放括號的空物件</li><li>將字串進行迭代判斷</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">i 會loop 此字串</span><br><span class="line">&quot;([])&#123;&#125;&quot;</span><br><span class="line"></span><br><span class="line">第一圈：遇到 &quot;(&quot;</span><br><span class="line">stack = [ &quot;)&quot;]</span><br><span class="line"></span><br><span class="line">第二圈：遇到 &quot;[&quot;</span><br><span class="line">stack = [ &quot;)&quot;,&quot;]&quot;]</span><br><span class="line"></span><br><span class="line">第三圈：遇到 &quot;]&quot; , 此時，stack = [ &quot;)&quot;,&quot;]&quot;]</span><br><span class="line">進入第二個判斷：stack[stack.length - 1] === ch</span><br><span class="line">陣列的最後一個是否與 i=2 ,ch = &quot;]&quot; 互相配對，若配對成功則從陣列中刪除</span><br><span class="line"></span><br><span class="line">第四圈：遇到 &quot;)&quot; , 此時，stack = [ &quot;)&quot;]</span><br><span class="line">進入第二個判斷：stack[stack.length - 1] === ch</span><br><span class="line">陣列的最後一個是否與 i=3 ,ch = &quot;)&quot; 互相配對，若配對成功則從陣列中刪除</span><br><span class="line"></span><br><span class="line">第五圈：遇到 &quot;&#123;&quot; , 此時，stack = []</span><br><span class="line">stack = [ &quot;&#125;&quot;]</span><br><span class="line"></span><br><span class="line">第六圈：遇到 &quot;&#125;&quot; , 此時，stack = [ &quot;&#125;&quot;]</span><br><span class="line">進入第二個判斷：stack[stack.length - 1] === ch</span><br><span class="line">陣列的最後一個是否與 i=5 ,ch = &quot;&#125;&quot; 互相配對，若配對成功則從陣列中刪除</span><br><span class="line"></span><br><span class="line">  最後跳出陣列確認 stack.length === 0 =&gt; 為 0 表示皆配對成功</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isValid = <span class="keyword">function</span> (<span class="params">s</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> hashMap = &#123; <span class="string">&quot;(&quot;</span>: <span class="string">&quot;)&quot;</span>, <span class="string">&quot;&#123;&quot;</span>: <span class="string">&quot;&#125;&quot;</span>, <span class="string">&quot;[&quot;</span>: <span class="string">&quot;]&quot;</span> &#125;;</span><br><span class="line">  <span class="keyword">const</span> stack = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> ch <span class="keyword">of</span> s) &#123;</span><br><span class="line">    <span class="keyword">if</span> (hashMap[ch]) &#123;</span><br><span class="line">      <span class="comment">// ch is an opening bracket</span></span><br><span class="line">      stack.<span class="title function_">push</span>(hashMap[ch]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (stack.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; stack[stack.<span class="property">length</span> - <span class="number">1</span>] === ch) &#123;</span><br><span class="line">      <span class="comment">//當空陣列裡面有值且陣列的最後一個值和 key 是一樣的就從陣列中刪除</span></span><br><span class="line">      <span class="comment">// ch is a closing bracket and top of stack matches</span></span><br><span class="line">      stack.<span class="title function_">pop</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// ch is a closing bracket and top of the stack doesn&#x27;t match</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> stack.<span class="property">length</span> === <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/09/17/hello-world/"/>
      <url>/2022/09/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>React- 元件 / props</title>
      <link href="/2022/09/04/react-useState/"/>
      <url>/2022/09/04/react-useState/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/InPScmW.png" alt=""></p><p>之前曾快速的學習了React 資料的建立與傳遞方式，並寫了篇文章，最近因為六角讀書會活動也再次更深入一些的學習 React ，並將一些 React Hook 反覆使用練習。<br>因為目前工作主要還是以 Vue 進行開發，所以有時候會提一下兩者框架使用的相同或不同之處。 </p><h2 id="component-元件化"><a href="#component-元件化" class="headerlink" title="component 元件化"></a>component 元件化</h2><p>在 Vue 的撰寫中，也是會嘗試將頁面中的不同區塊做拆分。與 Vue 一樣，元件的的命名會以 大寫 為開頭。<br>透過減少重複為用意來建立元件化。</p><p><img src="https://i.imgur.com/T26krQk.png" alt=""><br><a href="https://codepen.io/Eva-go/pen/zYjxvev">codepen-Component</a></p><h3 id="多個資料，傳遞給單一元件"><a href="#多個資料，傳遞給單一元件" class="headerlink" title="多個資料，傳遞給單一元件"></a>多個資料，傳遞給單一元件</h3><ul><li>建立兩個元件 component1 , component2</li><li>建立共通元件 Board ，此元件可以各別放入兩個元件要傳入的資料(props)</li></ul><p><a href="https://codepen.io/Eva-go/pen/poVjVaB">codepen-共用元件</a></p><h3 id="共同資料，傳遞給不同元件"><a href="#共同資料，傳遞給不同元件" class="headerlink" title="共同資料，傳遞給不同元件"></a>共同資料，傳遞給不同元件</h3><p><a href="https://codepen.io/Eva-go/pen/ExLVRXX?editors=1010">codepen-共用資料</a></p><h3 id="條件-render"><a href="#條件-render" class="headerlink" title="條件 render"></a>條件 render</h3><ul><li>這部分在官方文件就有清楚介紹，可以依據使用條件來顯示元件資料</li><li>使用條件判斷時，若不複雜，可以使用三元運算方式<ul><li><code>isLoggedIn ? &lt;UserGreeting /&gt; : &lt;GuestGreeting /&gt;</code></li></ul></li><li><a href="https://zh-hant.reactjs.org/docs/conditional-rendering.html">conditional-rendering</a></li></ul><h2 id="元件資料傳遞"><a href="#元件資料傳遞" class="headerlink" title="元件資料傳遞"></a>元件資料傳遞</h2><h3 id="子傳父"><a href="#子傳父" class="headerlink" title="子傳父"></a>子傳父</h3><ul><li>範例將以 input 為範例</li><li>此方式的資料傳遞，有點類似於 Vue 中的 <code>v-model</code> 資料雙向綁定</li><li><a href="https://ithelp.ithome.com.tw/articles/10268187">使用 v-model 實現父子元件傳遞資料</a></li><li>在 React 可以將 useState 中設訂的值綁在元件上作為傳遞</li><li>在下方的圖示</li><li>在父層有 value , setValue</li></ul><p>-&gt; 其中 setValue 方法提供給子元件，同時就會讓子元件也產生改變 value 的能力（也就是可以使用父元件的方法）</p><ul><li>要實現子傳父，就在父層掛一個 hook<br><img src="https://i.imgur.com/Qb3dUeX.png" alt=""><br><img src="https://i.imgur.com/WbKvlT2.png" alt=""></li></ul>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速認識 webpack</title>
      <link href="/2022/08/19/learn-webpack/"/>
      <url>/2022/08/19/learn-webpack/</url>
      
        <content type="html"><![CDATA[<p>經常使用 vue 或 Ｒeact 等前端框架來進行專案開發，但沒有機會好好來認識下他背後的打包工具：webpack<br>趁著這次六角釋出的基礎 webpack 教學，順道來記錄一下。</p><h2 id="前端壓縮打包工具"><a href="#前端壓縮打包工具" class="headerlink" title="前端壓縮打包工具"></a>前端壓縮打包工具</h2><ul><li>從官網的圖，很明顯地就可以看到將左側複雜的檔案進行壓縮，並做項目管理</li><li>在 Vue , React 的背後都有使用 webpack<br><img src="https://i.imgur.com/EXBNQe0.png" alt=""><h2 id="使用-webpack"><a href="#使用-webpack" class="headerlink" title="使用 webpack"></a>使用 webpack</h2></li></ul><ol><li><p>安裝<br>建立 webpack 需要使用到 npm 初始化<br><code>npm init -y</code><br>安裝之後，會產生 <code>package.jason</code> 檔案</p></li><li><p>安裝 webpack 以及 webpack-cli ，並存在 開發環境<br><code>npm install webpack webpack-cli --save-dev</code></p><ul><li>會產生 <code>package-lock.json</code> =&gt; 紀錄版本詳細資訊</li><li><code>node_modules</code>  資料夾</li></ul><p><img src="https://i.imgur.com/qPKyya7.png" alt=""></p></li></ol><h2 id="進入點-entry-、輸出點-output"><a href="#進入點-entry-、輸出點-output" class="headerlink" title="進入點(entry)、輸出點(output)"></a>進入點(entry)、輸出點(output)</h2><ul><li><code>/src/index.js</code></li><li><code>/dist/main.js</code></li><li>指令：<code>&quot;build&quot;: &quot;webpack&quot;</code> =&gt; 設定 webpack 將 src 中的 index.js 檔案輸出，放到 dist 資料夾<ul><li>使用該指令 <code>npm run build</code><br><img src="https://i.imgur.com/5biytDZ.png" alt=""><ul><li>build 之後產生 dist/main.js</li></ul></li></ul></li></ul><h3 id="entry-output-名稱修改"><a href="#entry-output-名稱修改" class="headerlink" title="entry, output 名稱修改"></a>entry, output 名稱修改</h3><pre><code>* 建立 `webpack.config.js` 檔案</code></pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">//預設路徑位置</span></span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="comment">//輸出位置名稱(filename),檔案位置</span></span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;bundle.js&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//path.resolve(__dirname, &#x27;dist&#x27;)</span></span><br><span class="line"><span class="comment">// dirname當前資料夾路徑</span></span><br><span class="line"><span class="comment">//path.resolve 將相對路徑改為絕對路徑</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ORdpSVR.png" alt=""></p><h4 id="讓每次產生的-bundle-名稱不一樣"><a href="#讓每次產生的-bundle-名稱不一樣" class="headerlink" title="讓每次產生的 bundle 名稱不一樣"></a>讓每次產生的 bundle 名稱不一樣</h4><p><img src="https://i.imgur.com/5j8tbCO.png" alt=""></p><ul><li>搭配 plugin 來使用 HtmlWebpackPlugin</li></ul><h2 id="NPM-script-自訂指令"><a href="#NPM-script-自訂指令" class="headerlink" title="NPM script , 自訂指令"></a>NPM script , 自訂指令</h2><ul><li>用 node 執行一段 JS ，位置為同層下的 hello.js</li><li><code>npm run hello</code></li><li>網站上線\部署或開發，可能都需要下不同指令來進行管理<br><img src="https://i.imgur.com/4REJGUk.png" alt=""></li></ul><h2 id="mode-切換"><a href="#mode-切換" class="headerlink" title="mode 切換"></a>mode 切換</h2><p><img src="https://i.imgur.com/XlAvPHx.png" alt=""></p><ul><li>不同模式下，會因程式內容而輸出不同內容</li><li><code>production</code> 上線版模式, 輸出的 bundle 檔案會較為精簡<ul><li>會壓縮優化，將程式碼壓成一行</li><li>不容易除錯與理解<br><img src="https://i.imgur.com/KaH0uYg.png" alt=""></li></ul></li></ul><h2 id="CSS-loader"><a href="#CSS-loader" class="headerlink" title="CSS loader"></a>CSS loader</h2><ul><li>幫助 webpack 載入 css</li><li><code>npm install --save-dev css-loader</code></li><li><a href="https://webpack.js.org/loaders/css-loader/#root">CSS loader</a></li><li><code>webpack.config.js</code></li><li>別忘了 在載入點加入 ·<code>import css from &#39;./all.css&#39;</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">//預設路徑位置</span></span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="comment">//輸出位置名稱(filename),檔案位置</span></span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;bundle.js&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>, <span class="comment">//只要副檔名為 .css 就會使用以下</span></span><br><span class="line">        <span class="attr">use</span>: [<span class="string">&quot;style-loader&quot;</span>, <span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>裝入 sass-loader<br><img src="https://i.imgur.com/UTFdYXm.png" alt=""><br><a href="https://github.com/webpack-contrib/sass-loader">sass-loader</a></li></ul><h2 id="載入-webpack-測試伺服器"><a href="#載入-webpack-測試伺服器" class="headerlink" title="載入 webpack 測試伺服器"></a>載入 webpack 測試伺服器</h2><ul><li>建立即時更新的方式</li><li><a href="https://github.com/webpack/webpack-dev-server">webpack-dev-server</a></li><li><code>npm install webpack-dev-server --save-dev</code></li><li>在 <code>webpack.config.js</code> 檔案設定</li><li><a href="https://webpack.js.org/configuration/dev-server/#devserver">dev-server</a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">  <span class="attr">static</span>: &#123;</span><br><span class="line">    <span class="attr">directory</span>: path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line"><span class="comment">//contentBase: path.join(__dirname, &#x27;dist&#x27;),</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">compress</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">port</span>: <span class="number">9000</span>,</span><br><span class="line"><span class="attr">open</span>: <span class="literal">true</span> <span class="comment">//可以即時更新</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li><p>最後，指令調整，如此就可以開始進行編譯<br><img src="https://i.imgur.com/WvIjXoU.png" alt=""></p></li><li><p>webpack 也可以載入 node_module 下的東西</p></li><li><p>用 dist 下的檔案來部署</p><h2 id="webpack-config-js-檔案"><a href="#webpack-config-js-檔案" class="headerlink" title="webpack.config.js 檔案"></a><code>webpack.config.js</code> 檔案</h2></li><li><p>注意</p></li><li><p>mode: 設定development 或是 production</p></li><li><p>entry 進入點在哪</p></li><li><p>output 輸出去哪</p></li><li><p>module -&gt; rule 下 會放 scss-loader , babel-loader 等規則</p></li><li><p>plugins: webpack 主要是讀檔案，但透過 plugins ，如建立新的 html檔案, MiniCssExtractPlugin:將 css 從 js 抽離出來<br><img src="https://i.imgur.com/Bn6Jgyp.png" alt=""></p></li><li><p>devtool: ‘source-map’ =&gt; 協助檔案 debug </p></li></ul><p><a href="https://askie.today/what-is-webpack/">關於 Webpack，它是什麼？能夠做什麼？為什麼？怎麼做？— freeCodeCamp 的筆記</a><br><a href="https://tw.alphacamp.co/blog/webpack-introduction">Webpack 是什麼？模組打包工具的用途及基本 Webpack 教學</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React- props / state 練習</title>
      <link href="/2022/05/08/react-1/"/>
      <url>/2022/05/08/react-1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/InPScmW.png" alt=""></p><h2 id="props-state-的應用"><a href="#props-state-的應用" class="headerlink" title="props, state 的應用"></a>props, state 的應用</h2><ul><li>props 傳入參數的部分</li><li>state 讓組建本身有狀態</li></ul><h3 id="製作-計數器"><a href="#製作-計數器" class="headerlink" title="製作 計數器"></a>製作 計數器</h3><ul><li>props</li><li>製作，讓計數器的數字變化，可以同步變化到 button 上的數字<ul><li>在父層 App.vue 做一個內容的傳送</li><li>在 子元件，要自訂一個變數，作為接收父層從來的資料</li></ul></li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;./styles.css&quot;</span>;</span><br><span class="line"></span><br><span class="line">type <span class="title class_">BtnProps</span> = &#123;</span><br><span class="line">  <span class="attr">btnNum</span>: number;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Btn</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">BtnProps</span>&gt; = <span class="function">(<span class="params">&#123; btnNum &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      add 1<span class="tag">&lt;<span class="name">span</span>&gt;</span>目前總數：&#123;btnNum&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> num = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Counter: &#123;num&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Btn</span> <span class="attr">btnNum</span>=<span class="string">&#123;num&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/OnOdTAs.png" alt=""><br><img src="https://i.imgur.com/8VkhCGp.png" alt=""></p><h3 id="進階，希望透過點擊-button-同步更改數值"><a href="#進階，希望透過點擊-button-同步更改數值" class="headerlink" title="進階，希望透過點擊 button 同步更改數值"></a>進階，希望透過點擊 button 同步更改數值</h3><ul><li><p>讓 render (react 渲染機制)，可以在變數被變動的時候順便觸發渲染機制</p><ul><li>改變變數 -&gt; 觸發渲染<h3 id="使用-state-達成上述目的"><a href="#使用-state-達成上述目的" class="headerlink" title="使用 state 達成上述目的"></a>使用 state 達成上述目的</h3></li></ul><p><strong>對組建本身引入 state 機制</strong></p></li><li><p>用 state 來做變數宣告，只要 state 變數有做變動都會觸發渲染機制</p><ul><li>當變數有涉及於頁面上的更新，就會需要使用 state</li></ul></li><li><p>Hook 本身多是 use 開頭</p></li><li><p><code>useState()</code> 是一個 function</p></li></ul><p><strong>用陣列解構來取的 return 的值</strong></p><ul><li><ol><li>當前的值</li></ol></li><li><ol start="2"><li>再回傳一個 function : 用來設定/變動 第一個數值<br><code>const [num2, setNum2] = useState(999)</code></li></ol></li></ul><p><a href="https://codesandbox.io/s/react-props-state-yuc6qv?file=/src/App.tsx">example-1</a></p><h2 id="實現-父層數值變化，子組件隨之變化"><a href="#實現-父層數值變化，子組件隨之變化" class="headerlink" title="實現 父層數值變化，子組件隨之變化"></a>實現 父層數值變化，子組件隨之變化</h2><ul><li>應該將主要的更新動作都放置父組件</li><li>將放在父組件的事件，透過 props 方式傳給子組件，並將該變數放到按鈕的點擊事件上</li></ul><p><a href="https://codesandbox.io/s/react-props-state-2-ylm345?file=/src/App.tsx">example-2 </a></p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js 3 - Slot</title>
      <link href="/2022/05/07/Vue-Slot/"/>
      <url>/2022/05/07/Vue-Slot/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/NBBY8vo.png" alt=""></p><p>剛學習 vue 的時候，對 slot 完全一竅不通，不了解要如何挖空多元件，來放入資料，更是不知道他能使用的時機是什麼時候，種種因素，讓我從官方文件找些範例釐清，也找了些文章閱讀加深記憶，順手也紀錄在部落格上～</p><p>使用時機：</p><ul><li>使用同一個 元件 , 但只有內文不同。</li><li>有時候資料是靜態，不常變動，甚至需要大量重複。這情況不必要使用 props。</li></ul><ol><li><p>共用樣式<br>從 <a href="https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdD5cbmltcG9ydCBGYW5jeUJ1dHRvbiBmcm9tICcuL0ZhbmN5QnV0dG9uLnZ1ZSdcbiAgXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbXBvbmVudHM6IHsgRmFuY3lCdXR0b24gfVxufVxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPEZhbmN5QnV0dG9uPlxuICAgIENsaWNrIG1lIDwhLS0gc2xvdCBjb250ZW50IC0tPlxuIFx0PC9GYW5jeUJ1dHRvbj5cbjwvdGVtcGxhdGU+IiwiaW1wb3J0LW1hcC5qc29uIjoie1xuICBcImltcG9ydHNcIjoge1xuICAgIFwidnVlXCI6IFwiaHR0cHM6Ly9zZmMudnVlanMub3JnL3Z1ZS5ydW50aW1lLmVzbS1icm93c2VyLmpzXCJcbiAgfVxufSIsIkZhbmN5QnV0dG9uLnZ1ZSI6Ijx0ZW1wbGF0ZT5cbiAgPGJ1dHRvbiBjbGFzcz1cImZhbmN5LWJ0blwiPlxuICBcdDxzbG90Lz4gPCEtLSBzbG90IG91dGxldCAtLT5cblx0PC9idXR0b24+XG48L3RlbXBsYXRlPlxuXG48c3R5bGU+XG4uZmFuY3ktYnRuIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgzMTVkZWcsICM0MmQzOTIgMjUlLCAjNjQ3ZWZmKTtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgbWFyZ2luOiA1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuPC9zdHlsZT4ifQ==">官網的範例</a>可以看到，讓按鈕的文字可以彈性的變化。</p></li><li><p>named slot(具名插槽) </p></li></ol><ul><li>建立一個元件，其中含有多個slot區塊<br><a href="https://replit.com/@as45986/Named-Slots#src/App.vue">範例連結</a></li></ul><ol start="3"><li>Scoped slots（作用域插槽）</li></ol><ul><li>把子元件的資料取出來，給父層使用</li><li>不同於前面 slot 的使用，是由父層輸入資料呈現於頁面<br><a href="https://replit.com/@as45986/Scoped-Slots#src/App.vue">範例</a></li></ul><p>資料來源:<br><a href="https://vuejs.org/">vuejs</a><br><a href="https://ithelp.ithome.com.tw/articles/10273298?sc=iThomeR">不只懂 Vue 語法：什麼是 slot？請示範 slot 的用法？</a><br><a href="https://ithelp.ithome.com.tw/articles/10194384">用範例理解 Vue.js #18：Slot</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> slot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>websocket 簡介與使用</title>
      <link href="/2022/04/02/websocket/"/>
      <url>/2022/04/02/websocket/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/piRytMY.png" alt=""></p><p>近期購買了布魯斯的 TypeScript 的課程，除了學到型別之外，還接觸到 ＷebSocket 的使用，所以就來簡單紀錄下 ＷebSocket 是什麼，在專案內可以實現什麼功能。</p><p>WebSocket是一種網路傳輸協定，讓前端與後端溝通除非有一方斷開連接，否則會一直保持聯繫</p><h2 id="情境說明"><a href="#情境說明" class="headerlink" title="情境說明"></a>情境說明</h2><ol><li>使用者上下線狀態：可以延遲幾秒鐘，可以使用 setInterval 做出輪循</li></ol><ul><li>設定每幾秒發出請求，更新狀態</li><li>使用 HTTP 協議的請求：GET\POST 等方式，做出Request\Response</li></ul><ol start="2"><li>聊天室：會希望聊天訊息是即時更新，若採用上面的方式，為了使訊息更新及時會從每幾秒改為每幾毫秒，這樣的方式會造成短時間內不斷發出請求，造成消耗後端資源</li></ol><ul><li>指建立一次連結，可以與後端持續保持聯係</li></ul><h2 id="聊天室的實際運用"><a href="#聊天室的實際運用" class="headerlink" title="聊天室的實際運用"></a>聊天室的實際運用</h2><ul><li>將在 node.js 建立 websocket 的服務，讓前端連線到node.js的服務</li><li>socket.io =&gt; 包裝 websocket 協議的 node.js 的工具包<ul><li>當使用 node.js 做開發，就可以透過 socket.io 提供的功能實現</li></ul></li></ul><h2 id="安裝-socket-io"><a href="#安裝-socket-io" class="headerlink" title="安裝 socket.io"></a>安裝 socket.io</h2><ul><li>socket.io-clinet : 在前端的部分要使用 clinet 安裝包<br><code>npm i -D socket.io socket.io-clinet</code></li></ul><h3 id="後端"><a href="#後端" class="headerlink" title="後端"></a>後端</h3><ul><li>將 socket.io 引入 node.js 的 server 端</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> devServer <span class="keyword">from</span> <span class="string">&quot;@/server/dev&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> prodServer <span class="keyword">from</span> <span class="string">&quot;@/server/prod&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> express <span class="keyword">from</span> <span class="string">&quot;express&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Server</span> &#125; <span class="keyword">from</span> <span class="string">&quot;socket.io&quot;</span></span><br><span class="line"><span class="keyword">import</span> http <span class="keyword">from</span> <span class="string">&quot;http&quot;</span>  <span class="comment">//也可以引入http模組</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">//透過 http 將 server 建立起來</span></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>(app)</span><br><span class="line"><span class="keyword">const</span> io = <span class="keyword">new</span> <span class="title class_">Server</span>(server)</span><br><span class="line"><span class="keyword">const</span> userService = <span class="keyword">new</span> <span class="title class_">UserService</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//監聽</span></span><br><span class="line">server.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`The application is running on port <span class="subst">$&#123;port&#125;</span>.`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//建立起連接時，發出訊息</span></span><br><span class="line"><span class="comment">//當有用戶連接到connection 就會有回呼函式</span></span><br><span class="line">io.<span class="title function_">on</span>(<span class="string">&#x27;connection&#x27;</span>,<span class="function">(<span class="params">socket</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="comment">//發出訊息</span></span><br><span class="line">socket.<span class="title function_">emit</span>(<span class="string">&#x27;join&#x27;</span>, <span class="string">&#x27;Welcom&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="如何在前端使用，與後端建立連線？"><a href="#如何在前端使用，與後端建立連線？" class="headerlink" title="如何在前端使用，與後端建立連線？"></a>如何在前端使用，與後端建立連線？</h2><ul><li>到前端的入口檔案</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//將 socket.io 的包引入前端程式這邊</span></span><br><span class="line"><span class="keyword">import</span> &#123; io &#125; <span class="keyword">from</span> <span class="string">&quot;socket.io-client&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1. 建立連接到 node server</span></span><br><span class="line"><span class="keyword">const</span> clientIo = <span class="title function_">io</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">clientIo.<span class="title function_">on</span>(<span class="string">&#x27;join&#x27;</span>,<span class="function">(<span class="params">msg</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;msg&#x27;</span>,msg)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> websocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js 3 - toRef , toRefs</title>
      <link href="/2022/02/28/Vue-toRef/"/>
      <url>/2022/02/28/Vue-toRef/</url>
      
        <content type="html"><![CDATA[<h2 id="toRef"><a href="#toRef" class="headerlink" title="toRef"></a>toRef</h2><ul><li>將…變成 ref<br>從 reactive 物件抽出包裝成一個 ref 的值，與原本物件 是連接的，所以修改時，原本的值也會跟著變動。</li><li>只能處理一個屬性，須告知要輸入的屬性\物件</li><li>注意: 更改原始物件內的值，所響應會跟著變動</li></ul><h3 id="在-prop-的應用"><a href="#在-prop-的應用" class="headerlink" title="在 prop 的應用"></a>在 prop 的應用</h3><ul><li>來自的 props 是 物件資料，可以使用toRef<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">props</span>: &#123;</span><br><span class="line"> <span class="attr">apiUser</span>: &#123;</span><br><span class="line">   <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">   <span class="attr">type</span>: <span class="title class_">Object</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">setup</span>(<span class="params">props</span>) &#123;</span><br><span class="line">   <span class="keyword">const</span> userCopy = <span class="title function_">toRef</span>(props, <span class="string">&#x27;apiUser&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>範例二</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>姓名: &#123;&#123;person.name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>年齡: &#123;&#123;person.age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>職業描述: &#123;&#123;person.job.front.dec&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;person.name += ~&#x27;</span>&gt;</span>修改姓名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;person.age ++ &#x27;</span>&gt;</span>增加年齡<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123;reactive&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Demo&#x27;</span>,</span><br><span class="line">    <span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> person = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;Eva&#x27;</span>,</span><br><span class="line">            <span class="attr">age</span>: <span class="number">25</span>,</span><br><span class="line">            <span class="attr">job</span>:&#123;</span><br><span class="line">               <span class="attr">front</span>:&#123;</span><br><span class="line">                   <span class="attr">dec</span>:<span class="string">&#x27;前端工程師&#x27;</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            person</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>要將以上的模板寫的更容易</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>姓名: &#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>年齡: &#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>職業描述: &#123;&#123;dec&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;name += ~&#x27;</span>&gt;</span>修改姓名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;age ++ &#x27;</span>&gt;</span>增加年齡<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//就是返回普通的物件內容</span></span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            <span class="attr">name</span>: person.<span class="property">name</span>,</span><br><span class="line">            <span class="attr">age</span>: person.<span class="property">age</span>,</span><br><span class="line">            <span class="attr">dec</span>: person.<span class="property">job</span>.<span class="property">front</span>.<span class="property">dec</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><ul><li><p>但此方式要注意，字串模板會無法響應更新的問題</p></li><li><p>使用 toRef 來達到響應</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123;reactive,toRef&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Demo&#x27;</span>,</span><br><span class="line">    <span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> person = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;Eva&#x27;</span>,</span><br><span class="line">            <span class="attr">age</span>: <span class="number">25</span>,</span><br><span class="line">            <span class="attr">job</span>:&#123;</span><br><span class="line">               <span class="attr">front</span>:&#123;</span><br><span class="line">                   <span class="attr">dec</span>:<span class="string">&#x27;前端工程師&#x27;</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//單一轉換</span></span><br><span class="line">        <span class="keyword">const</span> name2 = <span class="title function_">toRefs</span>(person,<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="title function_">toRef</span>(person,<span class="string">&#x27;name&#x27;</span>),</span><br><span class="line">            <span class="attr">age</span>: <span class="title function_">toRef</span>(person,<span class="string">&#x27;age&#x27;</span>),</span><br><span class="line">            <span class="attr">dec</span>: <span class="title function_">toRef</span>(person.<span class="property">job</span>.<span class="property">front</span>,<span class="string">&#x27;dec&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="toRefs"><a href="#toRefs" class="headerlink" title="toRefs"></a>toRefs</h2><p>toRefs用來把響應式物件轉換成普通物件，把物件中的每一個屬性，包裹成ref物件<br>    * toRefs就是toRef的升級版，只是toRefs是把響應式物件進行轉換</p><h3 id="延續上方，toRefs"><a href="#延續上方，toRefs" class="headerlink" title="延續上方，toRefs"></a>延續上方，toRefs</h3><ul><li>可以批量處理，一個物件裡的屬性<ul><li>只會將第一層展開，所以以下在 job 的內層 </li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>姓名: &#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>年齡: &#123;&#123;age&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>職業描述: &#123;&#123;job.front.dec&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;name += ~&#x27;</span>&gt;</span>修改姓名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;age ++ &#x27;</span>&gt;</span>增加年齡<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123;reactive,toRefs&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Demo&#x27;</span>,</span><br><span class="line">    <span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> person = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;Eva&#x27;</span>,</span><br><span class="line">            <span class="attr">age</span>: <span class="number">25</span>,</span><br><span class="line">            <span class="attr">job</span>:&#123;</span><br><span class="line">               <span class="attr">front</span>:&#123;</span><br><span class="line">                   <span class="attr">dec</span>:<span class="string">&#x27;前端工程師&#x27;</span></span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//可以批量處理，所以只需要傳入個物件，</span></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">new</span> = <span class="title function_">toRefs</span>(person)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">new</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//在物件中再放toRefs(person) ，會變成物件包物件，所以要展開</span></span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">           ...<span class="title function_">toRefs</span>(person)</span><br><span class="line">            <span class="comment">// name: toRef(person,&#x27;name&#x27;),</span></span><br><span class="line">            <span class="comment">// age: toRef(person,&#x27;age&#x27;),</span></span><br><span class="line">            <span class="comment">// dec: toRef(person.job.front,&#x27;dec&#x27;)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> v-for </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript - 註記(Annotation) 與斷言(Assertion)</title>
      <link href="/2022/01/14/TS-3/"/>
      <url>/2022/01/14/TS-3/</url>
      
        <content type="html"><![CDATA[<p>從開始學習前端之後，大多的學習資源都是來自線上課程、youtube 影片為主，鮮少透過閱讀書籍來學習相關知識，但自從進入公司之後，因為公司內有些程式書籍能夠借閱，先是從 JavaScript 大全開始，一開始閱讀起來真的滿痛苦，不知道該如何消化內容，直接順著讀過去又怕忘記，但目前還是順順的讀到了第8章～後來，找到的方式就是在筆記軟體上做些註記，工作上遇到相關的再回過頭看一次，加入筆記。</p><p>而在此次，發現 TypeScript 即便已經看過介紹型別、基本使用基礎的影片後，仍然覺得不太足夠，所以就開始翻閱書籍 「讓 TypeScript 成為你全端開發的 ACE」，文中介紹滿多之前沒有注意到觀念、也有帶到不少 JavaScript 的觀念來呼應。所以本篇，多是來自於書中資訊，透過整理呈現。</p><h2 id="註記-Annotation-V-S-斷言-Assertion"><a href="#註記-Annotation-V-S-斷言-Assertion" class="headerlink" title="註記 Annotation V.S. 斷言 Assertion"></a>註記 Annotation V.S. 斷言 Assertion</h2><ul><li>型別註記：指在告訴 TS 編譯器：「任何被註記到的變數、函式的參數等，都必須遵照被註記過後的變數型別」。</li><li>所以編譯器會隨時隨地的監測該變數有沒有出現型別衝突的可能—關鍵字為遵照。</li><li>而，斷言型別則是無視 TS 編譯器分析整個程式碼的型別推論過程，果斷的告訴 TS 編譯器：「被斷言過後的表達式之運算結果就是某某型別」—關鍵意象是「覆蓋」該表達式的型別推論結果。</li></ul><h2 id="註記與斷言"><a href="#註記與斷言" class="headerlink" title="註記與斷言"></a>註記與斷言</h2><ul><li>帶有冒號的相關語法</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">randomNumber</span>:<span class="built_in">number</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line"><span class="keyword">const</span> <span class="attr">subscribed</span>:<span class="built_in">boolean</span> = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><ul><li>如果遇到函式，參數(Argument)部分除了可以有類似註記方式標明輸入的參數型別外，在參數宣告結尾也可以註記該函式輸出之型別。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isPositive</span>(<span class="params">input: number</span>):boolean&#123;</span><br><span class="line"><span class="keyword">return</span> input &gt; <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>但JS裡，宣告函式的方法有很多種，其中一個是將函式最為值指派到變數。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">isPositive</span>:<span class="function">(<span class="params">input:number</span>) =&gt;</span> boolean = <span class="keyword">function</span>(<span class="params">input</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> input &gt; <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>以上，也能把變數指派的函式，改成ES6箭頭函式<ul><li>指派運算子(Assignment Operator ，就是指程式裡的等號)左方是函式的型別註記表示法，右方則是普通函式宣告</li></ul></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">isPositive</span>:<span class="function">(<span class="params">input:<span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">boolean</span> = <span class="function"><span class="params">input</span> =&gt;</span> input &gt;<span class="number">0</span>;</span><br></pre></td></tr></table></figure><ul><li>採用邊宣告函式、邊註記型別的方式定義函式</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isPositive = <span class="keyword">function</span> (<span class="params">input:<span class="built_in">number</span></span>):<span class="built_in">boolean</span>&#123;</span><br><span class="line"><span class="keyword">return</span> input&gt;<span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isPositive =  (<span class="attr">input</span>:<span class="built_in">number</span>):<span class="function"><span class="params">boolean</span> =&gt;</span>  input&gt;<span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="型別斷言語法"><a href="#型別斷言語法" class="headerlink" title="型別斷言語法"></a>型別斷言語法</h2><ul><li>斷言(Assertion)的語法很簡單，看到有使用關鍵字 as 或者 <code>&lt;T&gt;(...)</code> 的格式就是斷言的用法。</li><li>通常會使用斷言的情境，程式沒辦法推論某表達式的確切運算結果之型別，我們才會用選擇使出斷言來處理這種情境。</li><li>程式沒辦法推論？<ul><li>使用第三方的資源（Third-party resources），如使用外來JSON API 獲得的內容之型別格式、讀取檔案轉成 JSON 物件的結果、使用套件提供的功能、呼叫會回傳未知結果的函式。</li></ul></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> aNumber = <span class="title function_">returnsUnknow</span>() <span class="keyword">as</span> <span class="built_in">number</span>;</span><br></pre></td></tr></table></figure><p>或是這樣：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> aNumber = &lt;<span class="built_in">number</span>&gt;(<span class="title function_">returnsUnkonw</span>());</span><br></pre></td></tr></table></figure><ul><li>請注意：斷言的語法部分，沒有人斷言在變數的名稱宣告部分—也就是是說，如果你這樣寫是錯的：</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> aNumber <span class="keyword">as</span> <span class="built_in">number</span> = <span class="title function_">returnsUnknow</span>(); <span class="comment">//這是錯誤的</span></span><br></pre></td></tr></table></figure><ul><li>概念有點像，決斷地告訴程式，某表達式的運算結果之型別。</li><li>變數本身不是被運算，而是被指派某個東西，而斷言應該是斷在被指派的值或表達式的運算結果上。</li></ul><h4 id="複雜一點"><a href="#複雜一點" class="headerlink" title="複雜一點"></a>複雜一點</h4><ul><li>函式宣告表達式有可以被斷言(畢竟函式作為表達式也會被當成值)</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isPositive =(<span class="function"><span class="params">input</span> =&gt;</span> input &gt; <span class="number">0</span>) <span class="keyword">as</span> (<span class="attr">input</span>: <span class="built_in">number</span>) =&gt; <span class="built_in">boolean</span></span><br></pre></td></tr></table></figure><p>或者是：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isPositive = &lt;<span class="function">(<span class="params">input: number</span>) =&gt;</span> boolean&gt;(<span class="function"><span class="params">input</span> =&gt;</span> input &gt;<span class="number">0</span>);</span><br></pre></td></tr></table></figure><ul><li>上面斷言的寫法效果跟之前示範過基礎註記手法：</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isPositive :<span class="function">(<span class="params">input: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">boolean</span> = <span class="function"><span class="params">input</span> =&gt;</span> input &gt;<span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>或者是</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isPositive ＝(<span class="attr">input</span>: <span class="built_in">number</span>)：<span class="built_in">boolean</span> =&gt; input &gt;<span class="number">0</span>;</span><br></pre></td></tr></table></figure><h2 id="說下，敘述式與表達式的定義與差別"><a href="#說下，敘述式與表達式的定義與差別" class="headerlink" title="說下，敘述式與表達式的定義與差別"></a>說下，敘述式與表達式的定義與差別</h2><ol><li>敘述式：程式運行的流程，例如：JS 裡的判斷敘述式(if…else)以及迴圈敘述式(for 或者是 while 迴圈)。</li><li>表達式代表的則是程式碼運算的流程，並且會將運算結果回傳。其中兩者最關鍵差異為：敘述式不會回傳值，表達式則會。</li></ol><ul><li>以下為常見的表達式範例：</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//運算表達式 Arithmetic expression</span></span><br><span class="line"> <span class="number">1</span>+<span class="number">2</span>*<span class="number">3</span> ; <span class="comment">//回傳解果為7</span></span><br><span class="line"><span class="comment">//邏輯表達式 Logical Expression</span></span><br><span class="line"><span class="literal">true</span> &amp;&amp; (something === <span class="literal">null</span> || myAge &lt; <span class="number">18</span>) <span class="comment">//回傳結果為 true 或 false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//函式（或方法的呼叫） Function / Method Invocation Expression</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>,<span class="number">10</span>) <span class="comment">//回傳結果為 1024</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//三元運算子 Ternary Operator</span></span><br><span class="line">myAge &lt; <span class="number">18</span> ? <span class="string">&#x27;Youngster&#x27;</span> : <span class="string">&#x27;Adult&#x27;</span>; <span class="comment">//回傳結果為 &#x27;Youngster&#x27; 因為 myAge &lt; 18 </span></span><br></pre></td></tr></table></figure><p>而敘述式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="comment">/*expression 1*/</span>)&#123;</span><br><span class="line"><span class="comment">//若 expression1 為 true 則執行</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="comment">/*expression 2*/</span>)&#123;</span><br><span class="line"><span class="comment">//若 expression2 為 true 則執行</span></span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//若 expression1、expression2 都不為 true 則執行此</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//迴圈敘述式 Looping Statement</span></span><br><span class="line"><span class="keyword">while</span> (<span class="comment">/*expression */</span>)&#123;</span><br><span class="line"><span class="comment">//若 expression 為 true， 則重複執行直到 expression 為 false 時跳脫</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>按照上面敘述式的定義 — 由於敘述式是在敘述運行流程，而不會回傳值，所以你才不會在 JavaScript 裡面看到這樣的寫法：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JS 並有提供這寫法</span></span><br><span class="line"><span class="keyword">const</span> status = <span class="keyword">if</span>(<span class="title class_">Age</span> &lt;<span class="number">18</span> )&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;Young&#x27;</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;Adult&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>注意：敘述式不一定是多行式（或區塊式）地呈現的最佳案例：變數宣告的指派敘述式(Variable Declaration Assignment Statement)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//變數宣告的 指派敘述式</span></span><br><span class="line"><span class="keyword">const</span> foo =<span class="number">123</span>;</span><br></pre></td></tr></table></figure></li><li>請問上面指派式會回傳什麼結果 =&gt;數字 123 或 udefined。正解為 udefined<ul><li>指派式的回傳結果為 undefined</li></ul></li><li>所以可以歸納出，javaScript 的變數宣告的指派式屬於敘述式，非表達式。</li></ul><h4 id="表達式什麼時候會以非單行的程式碼，也就是區塊的方式？"><a href="#表達式什麼時候會以非單行的程式碼，也就是區塊的方式？" class="headerlink" title="表達式什麼時候會以非單行的程式碼，也就是區塊的方式？"></a>表達式什麼時候會以非單行的程式碼，也就是區塊的方式？</h4><ul><li>立即呼叫函式表達式(IIFE)</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> status = (<span class="title function_">funcrion</span>(<span class="params">myAge</span>)&#123;</span><br><span class="line"> <span class="keyword">if</span> (myAge &lt;<span class="number">18</span>)&#123; <span class="keyword">return</span> <span class="string">&#x27;Young&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;Adult&#x27;</span></span><br><span class="line">&#125;)(<span class="number">16</span>) <span class="comment">//假設填入參數為16，呼叫該函式的結果回傳 &#x27;Young&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>當可以分清楚表達式與敘述式差別後，回歸型別斷言</li><li>斷言的基礎語法<ul><li>斷言的語法只能用在表達式上，因為表達式具備回傳值，敘述式則沒有</li><li>因此，可以「斷言該表達式所運算結果之代表型別」</li></ul></li></ul><p>寫法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;expression&gt; <span class="keyword">as</span> T assertion</span><br><span class="line"></span><br><span class="line">&lt;T assertion &gt;(&lt;expression&gt;)</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//運算表達式</span></span><br><span class="line">(foo+bar*baz) <span class="keyword">as</span> <span class="built_in">number</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 邏輯表達式</span></span><br><span class="line">(<span class="title function_">isPositive</span>(num) &amp;&amp; <span class="title function_">idEven</span>(num)) <span class="keyword">as</span> <span class="built_in">boolean</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//function</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, <span class="number">10</span>) <span class="keyword">as</span> <span class="built_in">number</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">(myAge &lt;<span class="number">18</span> ? <span class="string">&#x27;Young&#x27;</span> : <span class="string">&#x27;Adult&#x27;</span>) <span class="keyword">as</span> <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//IIFE</span></span><br><span class="line">(<span class="title function_">funcrion</span>(<span class="params">myAge</span>)&#123;</span><br><span class="line"> <span class="keyword">if</span> (myAge &lt;<span class="number">18</span>)&#123; <span class="keyword">return</span> <span class="string">&#x27;Young&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;Adult&#x27;</span></span><br><span class="line">&#125;)(<span class="number">16</span>) <span class="keyword">as</span> <span class="built_in">number</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//只要是表達式，就算在其他敘述式、表達式內也能使用</span></span><br><span class="line"><span class="title function_">somefunction</span>(foo <span class="keyword">as</span> <span class="built_in">number</span> , bar <span class="keyword">as</span> <span class="built_in">string</span>) <span class="keyword">as</span> <span class="built_in">boolean</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>換種寫法：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">number</span>&gt;(foo+bar*baz);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 邏輯表達式</span></span><br><span class="line">&lt;<span class="built_in">boolean</span>&gt; (<span class="title function_">isPositive</span>(num) &amp;&amp; <span class="title function_">idEven</span>(num)) ;</span><br><span class="line"></span><br><span class="line"><span class="comment">//function</span></span><br><span class="line">&lt;<span class="built_in">number</span>&gt; <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, <span class="number">10</span>) ;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&lt;<span class="built_in">string</span>&gt;(myAge &lt;<span class="number">18</span> ? <span class="string">&#x27;Young&#x27;</span> : <span class="string">&#x27;Adult&#x27;</span>) ;</span><br><span class="line"></span><br><span class="line"><span class="comment">//IIFE</span></span><br><span class="line"> &lt;<span class="built_in">number</span>&gt;(</span><br><span class="line"> <span class="title function_">funcrion</span>(<span class="params">myAge</span>)&#123;</span><br><span class="line"> <span class="keyword">if</span> (myAge &lt;<span class="number">18</span>)&#123; <span class="keyword">return</span> <span class="string">&#x27;Young&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;Adult&#x27;</span></span><br><span class="line">&#125;)(<span class="number">16</span>)</span><br><span class="line">   );</span><br><span class="line"><span class="comment">//只要是表達式，就算在其他敘述式、表達式內也能使用</span></span><br><span class="line">&lt;<span class="built_in">boolean</span>&gt;<span class="title function_">somefunction</span>(foo <span class="keyword">as</span> <span class="built_in">number</span> , bar <span class="keyword">as</span> <span class="built_in">string</span>) </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上針對註記 Annotation V.S. 斷言 Assertion 做個簡單整理～</p>]]></content>
      
      
      <categories>
          
          <category> TypeScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FormData 表單的運用</title>
      <link href="/2022/01/06/FormData-1/"/>
      <url>/2022/01/06/FormData-1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/xf0DAqA.png" alt=""></p><p>最近遇到將表單資料存到後端的方式，過去一直以為是將資料整理為物件方式存取即可，後來發現使用FormData來建立物件傳送檔案即可!</p><ul><li>FormData 是一個表單格式，利用它將資料轉成表單的格式，並且以表單的形式回傳給後端</li></ul><h2 id="建立-FormData-物件"><a href="#建立-FormData-物件" class="headerlink" title="建立 FormData 物件"></a>建立 FormData 物件</h2><ul><li>最直接方式，先取得form的資料</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根據表單元素取得表單資料</span></span><br><span class="line"><span class="keyword">var</span> form = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;form&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>(form);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以用 append 把欄位灌進去表單中</span></span><br><span class="line"><span class="keyword">var</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>(); <span class="comment">// 一開始表單的資料是空的</span></span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&#x27;username&#x27;</span>, <span class="title class_">Chris</span>); <span class="comment">// 增加欄位</span></span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&#x27;image&#x27;</span>, file); <span class="comment">// 檔案也可以透過 append 放進來</span></span><br></pre></td></tr></table></figure><h2 id="以下介紹幾個基礎的使用方式："><a href="#以下介紹幾個基礎的使用方式：" class="headerlink" title="以下介紹幾個基礎的使用方式："></a>以下介紹幾個基礎的使用方式：</h2><ul><li><code>formData.append(name, value)</code> : 加入有 name 和 value 的表單資料(name:表單標籤的名稱,value: input 輸入的值)</li><li><code>formData.append(name, blob, fileName)</code> : 加入字段，就像它是 <code>&lt;input type=&quot;file&quot;&gt;</code>，第三個參數 fileName 設置檔案名</li><li><code>formData.delete(name)</code> : 移除帶有 name 的字段，</li><li><code>formData.get(name)</code> : 取得帶有 name 的值，</li><li><code>formData.has(name)</code> : 如果帶有給定 name 的字段，返回 true，否則返回 false。</li></ul><h2 id="使用axios-傳遞資料"><a href="#使用axios-傳遞資料" class="headerlink" title="使用axios 傳遞資料"></a>使用axios 傳遞資料</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line"><span class="comment">//宣告要取得的值</span></span><br><span class="line"><span class="keyword">var</span> title = form.<span class="property">name</span></span><br><span class="line">formData.<span class="title function_">append</span>(<span class="string">&quot;formTitle&quot;</span>, title);</span><br><span class="line">axios.<span class="title function_">post</span>(<span class="string">&#x27;upload_file&#x27;</span>, formData, &#123;</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;multipart/form-data&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="補充-vue-Typescript-宣告型別"><a href="#補充-vue-Typescript-宣告型別" class="headerlink" title="補充 vue+Typescript 宣告型別"></a>補充 vue+Typescript 宣告型別</h2><ul><li>以 stack overflow 內的資料為例：<ul><li>可以使用 ref來取得DOM元素，並宣告該變數為HTMLFormElement<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form</span><br><span class="line">         <span class="keyword">class</span>=<span class="string">&quot;m-auto&quot;</span></span><br><span class="line">         ref=<span class="string">&quot;formRef&quot;</span></span><br><span class="line">         :model=<span class="string">&quot;form&quot;</span></span><br><span class="line">         :rules=<span class="string">&quot;rules&quot;</span></span><br><span class="line">       &gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> formRef = ref&lt;<span class="title class_">HTMLFormElement</span>&gt;();</span><br></pre></td></tr></table></figure></li></ul></li><li>另是使用 element-UI 的表單，也可以使用<br><code>import &#123;  ElForm &#125; from &quot;element-ui&quot;;</code></li></ul><p><a href="https://www.ucamc.com/articles/332-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8jquery-ajax-submit-%E5%82%B3%E9%80%81form%E8%A1%A8%E5%96%AEserialize-%E6%96%B9%E6%B3%95">如何使用jQuery AJAX submit 傳送form表單方法</a><br><a href="https://5xruby.tw/courses/javascript">JavaScript / jQuery 前端開發入門實戰</a><br><a href="https://zh.javascript.info/formdata">JavaScript Info-formData</a><br><a href="https://stackoverflow.com/questions/67074871/vue-3-typescript-unable-to-access-method-from-ref">stackoverflow</a></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nuxt3-取得資料的方式</title>
      <link href="/2021/12/10/Nuxt3-1/"/>
      <url>/2021/12/10/Nuxt3-1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/FAgr4vk.png" alt=""></p><h2 id="useAsyncData"><a href="#useAsyncData" class="headerlink" title="useAsyncData"></a>useAsyncData</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="attr">data</span>: <span class="title class_">Ref</span>&lt;<span class="title class_">DataT</span>&gt;,</span><br><span class="line">  <span class="attr">pending</span>: <span class="title class_">Ref</span>&lt;boolean&gt;,</span><br><span class="line">  <span class="attr">refresh</span>: <span class="function">(<span class="params">force?: boolean</span>) =&gt;</span> <span class="title class_">Promise</span>&lt;<span class="keyword">void</span>&gt;,</span><br><span class="line">  error?: any</span><br><span class="line">&#125; = <span class="title function_">useAsyncData</span>(</span><br><span class="line">  <span class="attr">key</span>: string,</span><br><span class="line">  <span class="attr">fn</span>: <span class="function">() =&gt;</span> <span class="title class_">Object</span>,</span><br><span class="line">  options?: &#123; <span class="attr">lazy</span>: boolean, <span class="attr">server</span>: boolean &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>頁面、組件中都可以使用useAsyncData 取得資料</li><li>Key ：寫一個唯一的id<br>請求資料的函式</li><li>使用 useAsyncData 會回傳物件<br>data : 返回的資料<br>pedding : 指出資料是否被取得<br>refresh : 是否要刷新資料<h3 id="Option-介紹"><a href="#Option-介紹" class="headerlink" title="Option 介紹"></a>Option 介紹</h3></li><li>Lazy 延遲載入，直到數據獲取時，才顯示於頁面</li><li>默認會是 false</li><li>Server 頁面是在server端要載入，就可以設定為true</li><li>Pick 從回傳的資料中，選擇要使用的key值</li></ul><h3 id="useAsyncData撰寫方式的範例"><a href="#useAsyncData撰寫方式的範例" class="headerlink" title="useAsyncData撰寫方式的範例"></a>useAsyncData撰寫方式的範例</h3><ul><li>本地建立資料夾<ul><li>server/api/count.ts</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> counter = <span class="number">0</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> () =&gt; &#123;</span><br><span class="line">  counter++</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(counter)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>app.vue</code>，使用 useAsyncData</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">useAsyncData</span>(<span class="string">&#x27;count&#x27;</span>, <span class="function">() =&gt;</span> $fetch(<span class="string">&#x27;/api/count&#x27;</span>))</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  Page visits: &#123;&#123; data &#125;&#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="useFetch"><a href="#useFetch" class="headerlink" title="useFetch"></a>useFetch</h2><ul><li>頁面、組件中可以使用useFetch獲取任意URL資源</li><li>useFetch包裝 了useAsyncData 和 $fetch</li><li>會根據 URL 自動生成 Key，也會去推斷API 的類型a<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="attr">data</span>: <span class="title class_">Ref</span>&lt;<span class="title class_">DataT</span>&gt;,</span><br><span class="line">  <span class="attr">pending</span>: <span class="title class_">Ref</span>&lt;boolean&gt;,</span><br><span class="line">  <span class="attr">refresh</span>: <span class="function">(<span class="params">force?: boolean</span>) =&gt;</span> <span class="title class_">Promise</span>&lt;<span class="keyword">void</span>&gt;,</span><br><span class="line">  error?: any</span><br><span class="line">&#125; = <span class="title function_">useFetch</span>(<span class="attr">url</span>: string, options?)</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">useFetch</span>(<span class="string">&#x27;/api/count&#x27;</span>)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  Page visits: &#123;&#123; data.count &#125;&#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="補充：其他2個類似方式"><a href="#補充：其他2個類似方式" class="headerlink" title="補充：其他2個類似方式"></a>補充：其他2個類似方式</h2><ul><li>useLazyAsyncData : 方法等於useAsyncData，僅設置了lazy選項為true</li><li>useLazyFetch : 方法等於useFetch，僅設置了lazy選項為true</li></ul><h2 id="實作範例："><a href="#實作範例：" class="headerlink" title="實作範例："></a>實作範例：</h2><ul><li><code>/api/mountains/everest</code><ul><li>API 會產生的物件資料</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;title&quot;</span>: <span class="string">&quot;Mount Everest&quot;</span>,</span><br><span class="line">  <span class="string">&quot;description&quot;</span>: <span class="string">&quot;Mount Everest is Earth&#x27;s highest mountain above sea level, located in the Mahalangur Himal sub-range of the Himalayas. The China–Nepal border runs across its summit point&quot;</span>,</span><br><span class="line">  <span class="string">&quot;height&quot;</span>: <span class="string">&quot;8,848 m&quot;</span>,</span><br><span class="line">  <span class="string">&quot;countries&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;China&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Nepal&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;continent&quot;</span>: <span class="string">&quot;Asia&quot;</span>,</span><br><span class="line">  <span class="string">&quot;image&quot;</span>: <span class="string">&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/Everest_kalapatthar.jpg/600px-Everest_kalapatthar.jpg&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Nuxt 3 為了提高效率會在取得資料後，緩存在當前頁面的payload<br>官方建議：如果只打算在組件中使用到 title 和 description ，你可以使用關鍵的屬性運用即可<br>選項中加入 pick，裡面的值就是取得資料中的key值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">data</span>: mountain &#125; = <span class="keyword">await</span> <span class="title function_">useFetch</span>(<span class="string">&#x27;/api/mountains/everest&#x27;</span>, &#123; <span class="attr">pick</span>: [<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;description&#x27;</span>] &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; mountain.title &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; mountain.description &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="https://v3.nuxtjs.org/docs/usage/data-fetching">參考資料</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Nuxt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript 基礎介紹 (2)</title>
      <link href="/2021/11/27/TS-2/"/>
      <url>/2021/11/27/TS-2/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/xGK5aDO.png" alt=""></p><p>要熟悉 TypeScript 的型別訂定，並不容易，而且撰寫時也會花費較多的時間，但好處是減少程式碼的錯誤，也讓協作者更容易解讀對方撰寫的程式碼。<br>萬事起頭難，不同的地方就是多讀幾次，或是尋找相關的範例來相呼應！</p><h2 id="Class"><a href="#Class" class="headerlink" title="Class"></a>Class</h2><p>傳統方法中，JavaScript 透過建構函式實現類別的概念，透過原型鏈實現繼承。而在 ES6 中，我們終於迎來了 class。</p><ul><li><p>定義一切事務的抽象特點</p></li><li><p>object  ：class 的實例  new Class 生成</p></li><li><p>物件導向 OOP(Object Oriented Programming) ：三大特性 封裝、繼承、多型</p><ul><li>封裝（Encapsulation）：將對資料的操作細節隱藏起來，只暴露對外的介面。外界呼叫端不需要（也不可能）知道細節，就能透過對外提供的介面來訪問該物件，同時也保證了外界無法任意更改物件內部的資料</li><li>繼承（Inheritance）：子類別繼承父類別，子類別除了擁有父類別的所有特性外，還有一些更具體的特性</li><li>多型（Polymorphism）：由繼承而產生了相關的不同的類別，對同一個方法可以有不同的響應<h3 id="複習下-ES6-撰寫方式"><a href="#複習下-ES6-撰寫方式" class="headerlink" title="複習下 ES6 撰寫方式"></a>複習下 ES6 撰寫方式</h3></li></ul></li><li><p>使用 class 定義類別，使用 constructor 定義建構函式。</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125; </span><br><span class="line">    run () &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is running`</span> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> snake = <span class="keyword">new</span> <span class="title class_">Animal</span>(<span class="string">&#x27;lily&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(snake.<span class="title function_">run</span>()); <span class="comment">// lily is running</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 繼承的特性（繼承父類的屬性及方法）， 繼承 run 的方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;</span><br><span class="line">  <span class="title function_">bark</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is barking`</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> bao = <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="string">&#x27;bao&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(bao.<span class="title function_">run</span>()) <span class="comment">// bao is running</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(bao.<span class="title function_">bark</span>()) <span class="comment">// bao is  barking</span></span><br></pre></td></tr></table></figure><ul><li>使用 extends 關鍵字實現繼承</li><li>这里我们重寫構造函式，注意在子類的構造函式中，必須使用 super 調用父類的方法，否則會報錯。</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(name)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>) <span class="comment">//maomao</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">run</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// run 方法重寫</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Meow, &#x27;</span> + <span class="variable language_">super</span>.<span class="title function_">run</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> maomao = <span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="string">&#x27;maomao&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(maomao.<span class="title function_">run</span>()) <span class="comment">//Meow, maomao is runing</span></span><br></pre></td></tr></table></figure><h4 id="TypeScript-中的-class"><a href="#TypeScript-中的-class" class="headerlink" title="TypeScript 中的 class"></a>TypeScript 中的 class</h4><p>TypeScript 可以使用三種訪問修飾符（Access Modifiers）</p><ul><li>public 修飾的屬性或方法是公有的，可以在任何地方被調用到，預設所有的屬性和方法都是 public 的</li><li>private 修飾的屬性或方法是私有的，不能在声明它的类的外部調用</li><li>protected 修飾的屬性或方法是受保护的，它和 private 類似，區别是它在子類中也是允许被訪問的<br>例子說明：</li><li>name 被設定為了 public，所以直接訪問實例的 name 屬性是允許的。</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a = <span class="keyword">new</span> <span class="title class_">Animal</span>(<span class="string">&#x27;Jack&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="property">name</span>); <span class="comment">// Jack</span></span><br><span class="line">a.<span class="property">name</span> = <span class="string">&#x27;Tom&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="property">name</span>); <span class="comment">// Tom</span></span><br></pre></td></tr></table></figure><ul><li>希望有的屬性是無法直接存取的，這時候就可以用 private 了：</li><li>name 設為 private</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a = <span class="keyword">new</span> <span class="title class_">Animal</span>(<span class="string">&#x27;Jack&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="property">name</span>); <span class="comment">// Jack</span></span><br><span class="line">a.<span class="property">name</span> = <span class="string">&#x27;Tom&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.ts(9,13): error TS2341: Property &#x27;name&#x27; is private and only accessible within class &#x27;Animal&#x27;.</span></span><br><span class="line"><span class="comment">// index.ts(10,1): error TS2341: Property &#x27;name&#x27; is private and only accessible within class &#x27;Animal&#x27;.</span></span><br></pre></td></tr></table></figure><ul><li>使用 private 修飾的屬性或方法，在子類別中也是不允許訪問的：</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.ts(11,17): error TS2341: Property &#x27;name&#x27; is private and only accessible within class &#x27;Animal&#x27;.</span></span><br></pre></td></tr></table></figure><ul><li>而如果是用 protected 修飾，則允許在子類別中訪問：</li><li>將上述程式碼修改一下</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> name;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="類別-class-的型別"><a href="#類別-class-的型別" class="headerlink" title="類別 class 的型別"></a>類別 class 的型別</h3><p>給類別加上 TypeScript 的型別很簡單，與介面類似：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayHi</span>(): <span class="built_in">string</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">`My name is <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">a</span>: <span class="title class_">Animal</span> = <span class="keyword">new</span> <span class="title class_">Animal</span>(<span class="string">&#x27;Jack&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="title function_">sayHi</span>()); <span class="comment">// My name is Jack</span></span><br></pre></td></tr></table></figure><p><a href="https://willh.gitbook.io/typescript-tutorial/advanced/class">類別</a></p><h3 id="class-與-interface"><a href="#class-與-interface" class="headerlink" title="class 與 interface"></a>class 與 interface</h3><ul><li>介面（Interfaces）：不同類別之間公有的屬性或方法，可以抽象成一個介面。介面可以被類別實現（implements）。一個類別只能繼承自另一個類別，但是可以實現多個介面</li><li>在 物件導向 世界中，一個 class 只能繼承自另外一個class</li><li>有時候不同 class 之前，可以有共同的特性，使用子類繼承父類的方法很難來完成</li><li>class 可以使用 implements 來實現 interface （提高 OOP 的靈活性）</li></ul><h4 id="範例一："><a href="#範例一：" class="headerlink" title="範例一："></a>範例一：</h4><ul><li>有 車子和手機，都有打開radio的功能</li><li>可以將兩個共有的抽取為一個 interface</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span>  &#123;</span><br><span class="line">  <span class="title function_">switchRadio</span>(<span class="params">trigger: <span class="built_in">boolean</span></span>) &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cellphone</span> &#123;</span><br><span class="line">  <span class="title function_">switchRadio</span>(<span class="params">trigger: <span class="built_in">boolean</span></span>) &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="可以將兩個共有的抽取為一個-interface"><a href="#可以將兩個共有的抽取為一個-interface" class="headerlink" title="可以將兩個共有的抽取為一個 interface"></a>可以將兩個共有的抽取為一個 interface</h4><ul><li>void =&gt; 代表什麼都不返回</li><li>在class 後面放入  implements 讓類去實現它</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Radio</span> &#123;</span><br><span class="line">  <span class="title function_">switchRadio</span>(<span class="attr">trigger</span>: <span class="built_in">boolean</span>): <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span> <span class="keyword">implements</span> <span class="title class_">Radio</span> &#123;</span><br><span class="line">  <span class="title function_">switchRadio</span>(<span class="params">trigger</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">123</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cellphone</span> <span class="keyword">implements</span> <span class="title class_">Radio</span> &#123;</span><br><span class="line">  <span class="title function_">switchRadio</span>(<span class="params"></span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="範例二"><a href="#範例二" class="headerlink" title="範例二"></a>範例二</h4><ul><li>新特性為 檢查電池的容量</li><li>是手機有，但汽車沒有的</li><li>所以新建立一個 interface （檢查battery）<ul><li>此功能只有手機有，所以放在手機的class</li></ul></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Battery</span> &#123;</span><br><span class="line">  <span class="title function_">checkBatteryStatus</span>(): <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 要實現多个介面，我们只需要中間用 都好 隔开即可。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cellphone</span> <span class="keyword">implements</span> <span class="title class_">Radio</span>, <span class="title class_">Battery</span> &#123;</span><br><span class="line">  <span class="title function_">switchRadio</span>(<span class="params"></span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">checkBatteryStatus</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="此外-interface-之間有繼承關係"><a href="#此外-interface-之間有繼承關係" class="headerlink" title="此外 interface 之間有繼承關係"></a>此外 interface 之間有繼承關係</h4><ul><li>建立 radioWithBattery 繼承 Radio ，裡面再放入檢查電量的設定</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> radioWithBattery <span class="keyword">extends</span> <span class="title class_">Radio</span> &#123;</span><br><span class="line">  <span class="title function_">checkBatteryStatus</span>(): <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cellphone</span> <span class="keyword">implements</span> radioWithBattery &#123;</span><br><span class="line">  <span class="title function_">switchRadio</span>(<span class="params"></span>) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">checkBatteryStatus</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://willh.gitbook.io/typescript-tutorial/advanced/class-and-interfaces">類別與介面</a></p><h2 id="enum-列舉"><a href="#enum-列舉" class="headerlink" title="enum 列舉"></a>enum 列舉</h2><ul><li>常數指執行程序中不會被改變的值，在 JS 中我們一般會用 const 來宣告</li><li>但有些取值是在一定範圍內的一系列常數。<ul><li>如：一周內七天、三原色(紅、黃、藍)、方向(上、下、左、右)<h3 id="範例一"><a href="#範例一" class="headerlink" title="範例一"></a>範例一</h3></li></ul></li><li>數字列舉</li><li>列舉成員會被賦值為從0，開始遞增</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 數字列舉，一个數字列舉可以用 enum 这个關鍵詞來定義，我们定義一系列的方向，然后这里面的值，列舉成员会被赋值为從 0 开始遞增的數字,</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Direction</span> &#123;</span><br><span class="line">  <span class="title class_">Up</span>,</span><br><span class="line">  <span class="title class_">Down</span>,</span><br><span class="line">  <span class="title class_">Left</span>,</span><br><span class="line">  <span class="title class_">Right</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Direction</span>.<span class="property">Up</span>) <span class="comment">//0</span></span><br><span class="line"><span class="comment">// 還有一个神奇的點是這個列舉还做了反向映射</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Direction</span>[<span class="number">0</span>]) <span class="comment">//up</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/VMRV8oM.png" alt=""></p><ul><li>可以手動賦予值</li><li>未手動賦值的列舉項會接著上一個列舉項遞增。</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="title class_">Up</span> = <span class="number">10</span>,</span><br><span class="line">  <span class="title class_">Down</span>,</span><br><span class="line">  <span class="title class_">Left</span>,</span><br><span class="line">  <span class="title class_">Right</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Direction</span>.<span class="property">Down</span>) <span class="comment">// 11 ，後面的項目數值會遞增</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Direction</span>[<span class="number">0</span>]) <span class="comment">//up</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="範例二-1"><a href="#範例二-1" class="headerlink" title="範例二"></a>範例二</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字符串列舉</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">Direction</span> &#123;</span><br><span class="line">  <span class="title class_">Up</span> = <span class="string">&#x27;UP&#x27;</span>,</span><br><span class="line">  <span class="title class_">Down</span> = <span class="string">&#x27;DOWN&#x27;</span>,</span><br><span class="line">  <span class="title class_">Left</span> = <span class="string">&#x27;LEFT&#x27;</span>,</span><br><span class="line">  <span class="title class_">Right</span> = <span class="string">&#x27;RIGHT&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> value = <span class="string">&#x27;UP&#x27;</span></span><br><span class="line"><span class="keyword">if</span> (value === <span class="title class_">Direction</span>.<span class="property">Up</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;go up!&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="範例三"><a href="#範例三" class="headerlink" title="範例三"></a>範例三</h3><ul><li>常數列舉<ul><li>編譯後的邏輯變少了</li><li>使用常數列舉會內連列舉的用法並且不會將設定的列舉編譯成 JS 程式碼</li></ul></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span>  <span class="keyword">enum</span> <span class="title class_">Direction</span> &#123;</span><br><span class="line">  <span class="title class_">Up</span> = <span class="string">&#x27;UP&#x27;</span>,</span><br><span class="line">  <span class="title class_">Down</span> = <span class="string">&#x27;DOWN&#x27;</span>,</span><br><span class="line">  <span class="title class_">Left</span> = <span class="string">&#x27;LEFT&#x27;</span>,</span><br><span class="line">  <span class="title class_">Right</span> = <span class="string">&#x27;RIGHT&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> value = <span class="string">&#x27;UP&#x27;</span></span><br><span class="line"><span class="keyword">if</span> (value === <span class="title class_">Direction</span>.<span class="property">Up</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;go up!&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Fp2XF0y.png" alt=""></p><hr><h2 id="泛型-Generics"><a href="#泛型-Generics" class="headerlink" title="泛型 Generics"></a>泛型 Generics</h2><ul><li>要解決什麼問題<ul><li>建立函式 echo 參數為 arg ，接著宣告變數傳入參數</li><li>但其中的型別沒有設定</li><li>傳入和返回的型別無法統一</li></ul></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">echo</span>(<span class="params">arg</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> arg</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> result = <span class="title function_">echo</span>(<span class="number">123</span>)</span><br><span class="line"><span class="comment">// 這時候我們發現了一個問題，我们傳入了數字，但是返回了 any</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/lo6XFH8.png" alt=""></p><ul><li>當在建構 function、internet及Class 時，你會希望這些component都能被重複運用的 Generic(泛型)提供了一個彈性的作法。</li><li>語法是: <code>&lt;T&gt;</code></li></ul><h3 id="範例一-1"><a href="#範例一-1" class="headerlink" title="範例一"></a>範例一</h3><ul><li>泛型（Generics）是指在定義function、internet及Class的时候，不预先指定具體的型別，而在使用的时候再指定型別的一種特性。</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> echo&lt;T&gt;(<span class="attr">arg</span>: T): T &#123;</span><br><span class="line">  <span class="keyword">return</span> arg</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = <span class="title function_">echo</span>(<span class="number">123</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/X4quRIj.png" alt=""></p><h3 id="範例二-傳入多個"><a href="#範例二-傳入多個" class="headerlink" title="範例二 傳入多個"></a>範例二 傳入多個</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> swap&lt;T, U&gt;(<span class="attr">tuple</span>: [T, U]): [U, T] &#123;</span><br><span class="line">  <span class="keyword">return</span> [tuple[<span class="number">1</span>], tuple[<span class="number">0</span>]]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = <span class="title function_">swap</span>([<span class="string">&#x27;string&#x27;</span>, <span class="number">123</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/hJ5IqSY.png" alt=""></p><h3 id="泛型第二部分-约束泛型"><a href="#泛型第二部分-约束泛型" class="headerlink" title="泛型第二部分 - 约束泛型"></a>泛型第二部分 - 约束泛型</h3><ul><li>帶有「限制」的泛型</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> echoWithArr&lt;T&gt;(<span class="attr">arg</span>: T): T &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arg.<span class="property">length</span>)</span><br><span class="line">  <span class="keyword">return</span> arg</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上例中，泛型 T 不一定包含属性 length，我们可以给他傳入任意型別，當然有些不包括 length 属性，那样就會報錯</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 我們使用了 extends 約束了泛型 T 必須符合介面 IWithLength 的形狀，也就是必須包含 length 屬性。</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">IWithLength</span> &#123;</span><br><span class="line">  <span class="attr">length</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> echoWithLength&lt;T <span class="keyword">extends</span> <span class="title class_">IWithLength</span>&gt;(<span class="attr">arg</span>: T): T &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arg.<span class="property">length</span>)</span><br><span class="line">  <span class="keyword">return</span> arg</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">echoWithLength</span>(<span class="string">&#x27;str&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> result3 = <span class="title function_">echoWithLength</span>(&#123;<span class="attr">length</span>: <span class="number">10</span>&#125;)</span><br><span class="line"><span class="keyword">const</span> result4 = <span class="title function_">echoWithLength</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">//此時如果呼叫 loggingIdentity 的時候，傳入的 arg 不包含 length，那麼在編譯階段就會報錯了</span></span><br><span class="line"><span class="title function_">echoWithLength</span>(<span class="number">7</span>);</span><br><span class="line"><span class="comment">// index.ts(10,17): error TS2345: Argument of type &#x27;7&#x27; is not assignable to parameter of type &#x27;Lengthwise&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="泛型第三部分-泛型在-class-和-interface-中的使用"><a href="#泛型第三部分-泛型在-class-和-interface-中的使用" class="headerlink" title="泛型第三部分 - 泛型在 class 和 interface 中的使用"></a>泛型第三部分 - 泛型在 class 和 interface 中的使用</h3><ol><li>泛型在 class 的使用</li></ol><ul><li>在第一個程式中存在一个问题，它允許你向 Queue 中添加任何型別的數據，當然，當數據被彈出隊列时，也可以是任意類型</li><li>在下方的範例中，看起来可以向隊列中添加 string 型別的數據，但是那麼在使用的過程中，就會出現無法捕捉的錯誤</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Queue</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> data = [];</span><br><span class="line">  <span class="title function_">push</span>(<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">data</span>.<span class="title function_">push</span>(item)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">pop</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">data</span>.<span class="title function_">shift</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> queue = <span class="keyword">new</span> <span class="title class_">Queue</span>()</span><br><span class="line">queue.<span class="title function_">push</span>(<span class="number">1</span>)</span><br><span class="line">queue.<span class="title function_">push</span>(<span class="string">&#x27;str&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(queue.<span class="title function_">pop</span>().<span class="title function_">toFixed</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(queue.<span class="title function_">pop</span>().<span class="title function_">toFixed</span>())</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Queue</span>&lt;T&gt; &#123;</span><br><span class="line">  <span class="keyword">private</span> data = [];</span><br><span class="line">  <span class="title function_">push</span>(<span class="params">item: T</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">data</span>.<span class="title function_">push</span>(item)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">pop</span>(): T &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">data</span>.<span class="title function_">shift</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> queue = <span class="keyword">new</span> <span class="title class_">Queue</span>&lt;<span class="built_in">number</span>&gt;()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>泛型在  interface 中的使用</li></ol><ul><li>之前提過可以使用介面的方式來定義一個函式需要符合的形狀</li><li>當然也可以使用含有泛型的介面來定義函式的形狀：</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//泛型和 interface</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">KeyPair</span>&lt;T, U&gt; &#123;</span><br><span class="line">  <span class="attr">key</span>: T;</span><br><span class="line">  <span class="attr">value</span>: U;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">kp1</span>: <span class="title class_">KeyPair</span>&lt;<span class="built_in">number</span>, <span class="built_in">string</span>&gt; = &#123; <span class="attr">key</span>: <span class="number">1</span>, <span class="attr">value</span>: <span class="string">&quot;str&quot;</span>&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">kp2</span>: <span class="title class_">KeyPair</span>&lt;<span class="built_in">string</span>, <span class="built_in">number</span>&gt; = &#123; <span class="attr">key</span>: <span class="string">&quot;str&quot;</span>, <span class="attr">value</span>: <span class="number">123</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">arr</span>:<span class="built_in">number</span>[] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="attr">arrTwo</span>:<span class="title class_">Array</span>&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/6GXBwCI.png" alt=""></p><p>interface 搭配泛型之后，可以靈活的返回不同的型別</p><ul><li><p>創建一个拥有特定型別的容器，class 和 泛型 仿佛给一个容器貼上標籤一样</p></li><li><p>泛型就好像一个可變的參數，在用的时候傳入，生成这個不同型別的一个容器，</p></li><li><p>上個部分的用它来靈活的约束参数的型別，不需要參數是一个特别死板的型別，不希望他是一个特定 string、number 型別，我要傳入的参數必须有某某屬性、某某方法，否則就會報錯。</p></li><li><p>在函式使用的时候，函式的这个型別推斷，不會進入到函式中，所以使用表達式，没法明確建立型別的绑定，用泛型可以让我们打破這個鴻溝，這個时候就可以返回它傳入的類型。</p><h2 id="Type-Aliases"><a href="#Type-Aliases" class="headerlink" title="Type Aliases"></a>Type Aliases</h2></li><li><p>就是给型別起一個别名，讓它可以更方便的被重用。</p></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">sum</span>: <span class="function">(<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">number</span></span><br><span class="line"><span class="keyword">const</span> result = <span class="title function_">sum</span>(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">PlusType</span> = <span class="function">(<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">number</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">sum2</span>: <span class="title class_">PlusType</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 支持聯合</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">StrOrNumber</span> = <span class="built_in">string</span> | <span class="built_in">number</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">result2</span>: <span class="title class_">StrOrNumber</span> = <span class="string">&#x27;123&#x27;</span></span><br><span class="line">result2 = <span class="number">123</span> <span class="comment">//沒有錯</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串字面量 ，類似在列舉的常數變量</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Directions</span> = <span class="string">&#x27;Up&#x27;</span> | <span class="string">&#x27;Down&#x27;</span> | <span class="string">&#x27;Left&#x27;</span> | <span class="string">&#x27;Right&#x27;</span></span><br><span class="line"><span class="comment">// 使toWhere 這個變量為 Direction 類型</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">toWhere</span>: <span class="title class_">Directions</span> = <span class="string">&#x27;Up&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>我們使用 type 定了一個字串字面量型別 EventNames，它只能取三種字串中的一種。<br>注意，型別別名與字串字面量型別都是使用 type 進行定義。</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">EventNames</span> = <span class="string">&#x27;click&#x27;</span> | <span class="string">&#x27;scroll&#x27;</span> | <span class="string">&#x27;mousemove&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleEvent</span>(<span class="params">ele: Element, event: EventNames</span>) &#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">handleEvent</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;hello&#x27;</span>), <span class="string">&#x27;scroll&#x27;</span>);  <span class="comment">// 沒問題</span></span><br><span class="line"><span class="title function_">handleEvent</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;world&#x27;</span>), <span class="string">&#x27;dbclick&#x27;</span>); <span class="comment">// 報錯，event 不能為 &#x27;dbclick&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// index.ts(7,47): error TS2345: Argument of type &#x27;&quot;dbclick&quot;&#x27; is not assignable to parameter of type &#x27;EventNames&#x27;.</span></span><br></pre></td></tr></table></figure><h2 id="Intersection-Types"><a href="#Intersection-Types" class="headerlink" title="Intersection Types"></a>Intersection Types</h2><ul><li>使用 <code>&amp;</code> 符號</li><li>經過上面的 type 使 IName 就有了 name 和 age兩個屬性在裡面<ul><li>和interface 的 extends 有點類似，都是為了實現物件形狀組合和擴展</li></ul></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">IName</span>  &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">IPerson</span> = <span class="title class_">IName</span> &amp; &#123; <span class="attr">age</span>: <span class="built_in">number</span> &#125;</span><br><span class="line"><span class="comment">// 經過上面的 type 使 IName 就有了 name 和 age兩個屬性在裡面</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">person</span>: <span class="title class_">IPerson</span> = &#123; <span class="attr">name</span>: <span class="string">&#x27;hello&#x27;</span>, <span class="attr">age</span>: <span class="number">12</span>&#125;</span><br></pre></td></tr></table></figure><p>什麼时候用介面，什麼时候用 Type Aliases：</p><ul><li>interface 是 docker typing 的實現方式，是一種獨特類型，和extends class  implememts 有關的用interface ，</li><li>和交叉，聯合型別的有關的用 Type Aliases；</li></ul><h2 id="內建物件"><a href="#內建物件" class="headerlink" title="內建物件"></a>內建物件</h2><h3 id="DOM-和-BOM-的內建物件"><a href="#DOM-和-BOM-的內建物件" class="headerlink" title="DOM 和 BOM 的內建物件"></a>DOM 和 BOM 的內建物件</h3><p>DOM 和 BOM 提供的內建物件有：<br>Document、HTMLElement、Event、NodeList 等。<br>TypeScript 中會經常用到這些型別：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">body</span>: <span class="title class_">HTMLElement</span> = <span class="variable language_">document</span>.<span class="property">body</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">allDiv</span>: <span class="title class_">NodeList</span> = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params">e: MouseEvent</span>) &#123;</span><br><span class="line">  <span class="comment">// Do something</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="ECMAScript-的內建物件"><a href="#ECMAScript-的內建物件" class="headerlink" title="ECMAScript 的內建物件"></a>ECMAScript 的內建物件</h3><ul><li>Boolean、Error、Date、RegExp 等。</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">b</span>: <span class="title class_">Boolean</span> = <span class="keyword">new</span> <span class="title class_">Boolean</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="attr">e</span>: <span class="title class_">Error</span> = <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Error occurred&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> <span class="attr">d</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="keyword">let</span> <span class="attr">r</span>: <span class="title class_">RegExp</span> = <span class="regexp">/[a-z]/</span>;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/Microsoft/TypeScript/tree/main/src/lib">TypeScript 內置</a></p><h2 id="Utility-Types"><a href="#Utility-Types" class="headerlink" title="Utility Types"></a>Utility Types</h2><p><a href="https://www.typescriptlang.org/docs/handbook/utility-types.html">官方</a><br>Typescript 還提供了一些功能性，帮助性的型別，這些型別，大家在 JS 的世界是看不到的，這些型別叫做 utility types，提供一些簡潔明快而且非常方便的功能。</p><ul><li>使用  Partial</li><li>Omit</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// partial，它可以把傳入的型別都變成可選</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">IPerson</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">viking</span>: <span class="title class_">IPerson</span> = &#123; <span class="attr">name</span>: <span class="string">&#x27;viking&#x27;</span>, <span class="attr">age</span>: <span class="number">20</span> &#125;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">IPartial</span> = <span class="title class_">Partial</span>&lt;<span class="title class_">IPerson</span>&gt;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">viking2</span>: <span class="title class_">IPartial</span> = &#123; &#125; <span class="comment">//可以都不傳，也不會報錯</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Omit，它返回的型別可以忽略傳入型別的某个屬性</span></span><br><span class="line"><span class="comment">// 以下範例 將 name 忽略掉</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">IOmit</span> = <span class="title class_">Omit</span>&lt;<span class="title class_">IPerson</span>, <span class="string">&#x27;name&#x27;</span>&gt;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">viking3</span>: <span class="title class_">IOmit</span> = &#123; <span class="attr">age</span>: <span class="number">20</span> &#125;</span><br></pre></td></tr></table></figure><p>資料來源：</p><ol><li>線上課程：實戰 Vue3.0(正式版) + TS </li><li><a href="https://willh.gitbook.io/typescript-tutorial/">TypeScript 新手指南</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> TypeScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript 基礎介紹 (1)</title>
      <link href="/2021/11/27/TS-1/"/>
      <url>/2021/11/27/TS-1/</url>
      
        <content type="html"><![CDATA[<p>因為工作需求，有需多缺乏的技能需要補齊，TypeScript 就是其中一項。<br>上班看不懂的時候邊查詢，空閒時間再來上課不足不懂的知識點，但還是得透過文章的整理來好好消化一下！<br>既然要開始介紹 TypeScript 就先來說說使用它的原因吧。</p><h2 id="為什麼使用-TypeScript"><a href="#為什麼使用-TypeScript" class="headerlink" title="為什麼使用 TypeScript"></a>為什麼使用 TypeScript</h2><ul><li><p>程式語言中，有區分強型別和弱型別兩種類型。</p></li><li><p>而 JavaScript 是弱型別語言。</p></li><li><p>在 JavaScript 中，他會自己判斷應該執行的型別。自行做[型別自動轉換]</p></li><li><p>在快速開發時，很有可能引發一些預期之外的錯誤，相當不利於多人協同開發。</p><ul><li>優點：寫法彈性。</li><li>缺點：無法在開發時期檢查型別。</li></ul></li><li><p>依據上述的問題，所以使用 TypeScript</p></li></ul><ol><li>使程式碼更容易理解 （如函式需傳入的參數可以明確設定型別）</li><li>減少程式碼撰寫的錯誤</li><li>可以完全兼容JavaScript，此外能與 ES6 完美結合，並提供更多支援寫法。</li></ol><h2 id="安裝介紹"><a href="#安裝介紹" class="headerlink" title="安裝介紹"></a>安裝介紹</h2><ul><li>就是直接到官方網站查看，依需求安裝<br><img src="https://i.imgur.com/wfMqk4w.png" alt=""></li></ul><p><code>npm install -g typescript</code></p><ul><li>檢查版本<br><code>tsc -v</code></li></ul><h2 id="型別介紹"><a href="#型別介紹" class="headerlink" title="型別介紹"></a>型別介紹</h2><p>從 JavaScript 型別分類開始</p><h3 id="字串-string"><a href="#字串-string" class="headerlink" title="字串 string"></a>字串 string</h3><ul><li>和ES6一樣，可以使用[字串樣板 Template Literals]<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">firstName</span>:<span class="built_in">string</span> = <span class="string">&#x27;NaNa&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">message</span>: <span class="built_in">string</span> = <span class="string">`Hello,<span class="subst">$&#123;firstName&#125;</span>`</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="布林值-boolean"><a href="#布林值-boolean" class="headerlink" title="布林值 boolean"></a>布林值 boolean</h3></li></ul><p>布林值是最基礎的資料型別，在 TypeScript 中，使用 boolean 定義布林值型別： </p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">isDonw</span>:<span class="built_in">boolean</span> = <span class="literal">false</span> </span><br></pre></td></tr></table></figure><p>注意：使用建構函式 Boolean 建立的物件不是布林值：</p><ul><li>事實上 new Boolean() 返回的是一個 Boolean 物件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">createdByNewBoolean</span>: boolean = <span class="keyword">new</span> <span class="title class_">Boolean</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Type &#x27;Boolean&#x27; is not assignable to type &#x27;boolean&#x27;.</span></span><br><span class="line"><span class="comment">//   &#x27;boolean&#x27; is a primitive, but &#x27;Boolean&#x27; is a wrapper object. Prefer using &#x27;boolean&#x27; when possible.</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在 TypeScript 中，boolean 是 JavaScript 中的基本型別，而 Boolean 是 JavaScript 中的建構函式。</span><br></pre></td></tr></table></figure></li></ul><h3 id="數值-number"><a href="#數值-number" class="headerlink" title="數值 number"></a>數值 number</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">age</span>:<span class="built_in">number</span> = <span class="number">10</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">notANumber</span>: <span class="built_in">number</span> = <span class="title class_">NaN</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">infinityNumber</span>: <span class="built_in">number</span> = <span class="title class_">Infinity</span>;</span><br></pre></td></tr></table></figure><h3 id="Null-和-Undefined"><a href="#Null-和-Undefined" class="headerlink" title="Null 和 Undefined"></a>Null 和 Undefined</h3><ul><li>與 void 的區別是，undefined 和 null 是所有型別的子型別<ul><li>unfefined 可以賦值給number類型的變數</li><li>陣列被赋值為 undefined 或 null 不会报错</li><li><code>let num:number = undefined</code></li></ul></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">u</span>: <span class="literal">undefined</span> = <span class="literal">undefined</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">n</span>: <span class="literal">null</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 這樣也不會報錯</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">u</span>: <span class="literal">undefined</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">num</span>: <span class="built_in">number</span> = u;</span><br></pre></td></tr></table></figure><h3 id="void"><a href="#void" class="headerlink" title="void"></a>void</h3><ul><li>通常用在當函式沒有回傳值時。<br><img src="https://i.imgur.com/OOnpUUH.png" alt=""></li><li>而 void 型別的變數不能賦值給 number 型別的變數：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">u</span>: <span class="keyword">void</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">num</span>: number = u;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Type &#x27;void&#x27; is not assignable to type &#x27;number&#x27;.</span></span><br></pre></td></tr></table></figure><h3 id="any"><a href="#any" class="headerlink" title="any"></a>any</h3></li><li>在任意值上任何属性都是允許的<ul><li>當有明確型別時，應避免使用 any </li><li>因為 any 可以任意調用方法和屬性，很有可能出現錯誤（就喪失類型檢查的意義）<br>如果是 any 型別，則允許被賦值為任意型別</li></ul></li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">myFavoriteNumber</span>: <span class="built_in">any</span> = <span class="string">&#x27;seven&#x27;</span>;</span><br><span class="line">myFavoriteNumber = <span class="number">7</span>;</span><br></pre></td></tr></table></figure><h4 id="未宣告型別的變數"><a href="#未宣告型別的變數" class="headerlink" title="未宣告型別的變數"></a>未宣告型別的變數</h4><p>變數如果在宣告的時候，未指定其型別，那麼它會被識別為任意值型別：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> something;</span><br><span class="line">something = <span class="string">&#x27;seven&#x27;</span>;</span><br><span class="line">something = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">something.<span class="title function_">setName</span>(<span class="string">&#x27;Tom&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="陣列-Array-與-元組-Tuple"><a href="#陣列-Array-與-元組-Tuple" class="headerlink" title="陣列 Array 與 元組 Tuple"></a>陣列 Array 與 元組 Tuple</h3><h4 id="陣列"><a href="#陣列" class="headerlink" title="陣列"></a>陣列</h4><ol><li>在想宣告的型別後面加上[]，宣告為某個型別的Array<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">idList</span>:<span class="built_in">number</span>[] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure></li><li>使用陣列泛型，Array &lt;元素型別&gt;<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">list</span>:<span class="title class_">Array</span>&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure></li></ol><ul><li>注意，當已經宣告這是個數字陣列<ul><li>要 push 字串進去，會出現錯誤<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">list</span>:<span class="title class_">Array</span>&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">list.<span class="title function_">push</span>(<span class="string">&quot;4&quot;</span>)</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/bzszCFn.png" alt=""><h3 id="元組-Tuple"><a href="#元組-Tuple" class="headerlink" title="元組 Tuple"></a>元組 Tuple</h3></li><li>剛剛的陣列將同一類型的數據放在一起，但是，想加入不同型別的數據怎麼辦？</li><li>表示方式與陣列相似，將型別寫在<code>[]</code></li><li>有固定長度和元素型別的陣列<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 表示方式和陣列非常相似，只不过它将型別寫在了里面 這時會對每一項產生了限定的作用</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">user</span>: [<span class="built_in">string</span>, <span class="built_in">number</span>] = [<span class="string">&#x27;viking&#x27;</span>, <span class="number">20</span>]</span><br><span class="line"><span class="comment">//但是当我们少寫一項 就會報錯，同樣多寫也會報錯</span></span><br><span class="line">user = [<span class="string">&#x27;molly&#x27;</span>, <span class="number">20</span>, <span class="literal">true</span>]</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/MfhvOd7.png" alt=""></li></ul></li></ul><p><a href="https://willh.gitbook.io/typescript-tutorial/advanced/tuple#can-kao">元組</a></p><h3 id="物件的型別——介面-Interface"><a href="#物件的型別——介面-Interface" class="headerlink" title="物件的型別——介面 (Interface)"></a>物件的型別——介面 (Interface)</h3><ul><li>Interface 可以用來定義物件，還有由物件所延伸的型別（例如，陣列、函式）</li><li><code>age?: number;</code> 在該屬性後面加上 <code>?</code> 表示為可選屬性 ，也就是在宣告新的物件時，可以彈性加入或不加入age （也不會報錯）</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 我们定義了一個介面 Person</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接着定义了一个變數 NaNa，它的型別是 Person。</span></span><br><span class="line"><span class="comment">//这样，我们就约束了 NaNa 的形狀必須和介面 Person 一致。</span></span><br><span class="line"><span class="keyword">let</span> <span class="title class_">NaNa</span>: <span class="title class_">Person</span> =&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;NaNa&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有时我们希望不要完全匹配一个形狀，那么可以用可選屬性：</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    age?: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">NaNa</span>: <span class="title class_">Person</span> = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;NaNa&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="唯讀屬性"><a href="#唯讀屬性" class="headerlink" title="唯讀屬性"></a>唯讀屬性</h3><ul><li>readonly 是用在屬性上面</li><li>希望物件中的一些欄位只能在建立的時候被賦值，那麼可以用 readonly 定義唯讀屬性</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">  <span class="keyword">readonly</span> <span class="attr">id</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">  age?: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 建立物件</span></span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Vic</span>: <span class="title class_">Person</span> =&#123;</span><br><span class="line">  <span class="attr">id</span>:<span class="number">1</span>,  </span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Vic&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//不能去修改id    </span></span><br><span class="line"><span class="title class_">Vic</span>.<span class="property">id</span> = <span class="number">9527</span></span><br></pre></td></tr></table></figure><h3 id="函式型別"><a href="#函式型別" class="headerlink" title="函式型別"></a>函式型別</h3><ul><li>函式可以作為參數、可以存入陣列，可以被另外一個函式返回、可以被賦值另外一個變數</li><li>函式是由兩部分構成，一個是輸入(通過不同參數來實現)，二為輸出(就是函數的返回結果)<h4 id="例子一"><a href="#例子一" class="headerlink" title="例子一"></a>例子一</h4></li><li>設定參數型別、返回的型別</li><li>若參數設定了 x、y兩個，也就只能放入兩個<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 来到我们的第一个例子，约定输入，约定输出</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span></span>): <span class="built_in">number</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/RLOECvw.png" alt=""></li></ul><h4 id="例子二"><a href="#例子二" class="headerlink" title="例子二"></a>例子二</h4><ul><li>也可以設定可選參數</li><li>在 z? 表示 z 可有可無</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可选参数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span>, z?: <span class="built_in">number</span></span>): <span class="built_in">number</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> z === <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y + z</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>而在可選參數後面不可以再添加確定參數<br><img src="https://i.imgur.com/qzQRT0r.png" alt=""></li></ul><h4 id="例外說明：引數預設值"><a href="#例外說明：引數預設值" class="headerlink" title="例外說明：引數預設值"></a>例外說明：引數預設值</h4><ul><li>在 ES6 中，我們允許給函式的引數新增預設值，TypeScript 會將添加了預設值的引數識別為可選引數：</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">buildName</span>(<span class="params">firstName: <span class="built_in">string</span>, lastName: <span class="built_in">string</span> = <span class="string">&#x27;Cat&#x27;</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> firstName + <span class="string">&#x27; &#x27;</span> + lastName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> tomcat = <span class="title function_">buildName</span>(<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Cat&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> tom = <span class="title function_">buildName</span>(<span class="string">&#x27;Tom&#x27;</span>); <span class="comment">// 因為 lastName 添加了預設值，識別為可選引數</span></span><br></pre></td></tr></table></figure><p>此時就不受「可選引數必須接在必需引數後面」的限制了：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">buildName</span>(<span class="params">firstName: <span class="built_in">string</span> = <span class="string">&#x27;Tom&#x27;</span>, lastName: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> firstName + <span class="string">&#x27; &#x27;</span> + lastName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> tomcat = <span class="title function_">buildName</span>(<span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;Cat&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> cat = <span class="title function_">buildName</span>(<span class="literal">undefined</span>, <span class="string">&#x27;Cat&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="例子三"><a href="#例子三" class="headerlink" title="例子三"></a>例子三</h4><ul><li>函式的表達式</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> add = (<span class="attr">x</span>: <span class="built_in">number</span>, <span class="attr">y</span>: <span class="built_in">number</span>, z?: <span class="built_in">number</span>): <span class="function"><span class="params">number</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> z === <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y + z</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函式本身的类型</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">add2</span>: <span class="function">(<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span>, z?:<span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">number</span> = add</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>函式不只輸入、輸出有類型，本身也有類型<br><img src="https://i.imgur.com/f2Ym2Zb.png" alt=""></li><li>將 add2 賦予 string 會出錯誤</li><li>所以須聲明一模一樣的 <code>const add2: (x: number, y: number, z?:number) =&gt; number = add</code><br><img src="https://i.imgur.com/FvS1OvL.png" alt=""></li></ul><h4 id="例子四"><a href="#例子四" class="headerlink" title="例子四"></a>例子四</h4><ul><li>使用 interface (單純定義函式的 Interface)</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// interface 描述函数类型</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">sum</span> = (<span class="params">x: <span class="built_in">number</span>, y: <span class="built_in">number</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ISum</span> &#123;</span><br><span class="line">  (<span class="attr">x</span>: <span class="built_in">number</span>, <span class="attr">y</span>: <span class="built_in">number</span>): <span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="attr">sum2</span>: <span class="title class_">ISum</span> = sum</span><br></pre></td></tr></table></figure><ul><li>另一個範例</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">SearchFunc</span> &#123;</span><br><span class="line">    (<span class="attr">source</span>: <span class="built_in">string</span>, <span class="attr">subString</span>: <span class="built_in">string</span>): <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">mySearch</span>: <span class="title class_">SearchFunc</span>;</span><br><span class="line">mySearch = <span class="keyword">function</span>(<span class="params">source: <span class="built_in">string</span>, subString: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> source.<span class="title function_">search</span>(subString) !== -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="型別推論（Type-Inference）-聯合型別（Union-Types）-型別斷言（Type-Assertion）"><a href="#型別推論（Type-Inference）-聯合型別（Union-Types）-型別斷言（Type-Assertion）" class="headerlink" title="型別推論（Type Inference）\ 聯合型別（Union Types） \ 型別斷言（Type Assertion）"></a>型別推論（Type Inference）\ 聯合型別（Union Types） \ 型別斷言（Type Assertion）</h2><h3 id="型別推論（Type-Inference）"><a href="#型別推論（Type-Inference）" class="headerlink" title="型別推論（Type Inference）"></a>型別推論（Type Inference）</h3><ul><li>可以推論出我們賦值過程中，這個變數應該是什麼類型的</li><li>TS 會在沒有明確指定型別的時候，推測出型別<br><img src="https://i.imgur.com/280zYEs.png" alt=""></li></ul><h3 id="聯合型別（Union-Types）"><a href="#聯合型別（Union-Types）" class="headerlink" title="聯合型別（Union Types）"></a>聯合型別（Union Types）</h3><ul><li>用分隔符號</li><li>當 TypeScript 不确定一个聯合型別的變數到底是哪個型別的时候，我们只能使用此聯合型別的所有型別裡共有的屬性或方法</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 允許 numberOrString 的型別是 string 或者 number，但是不能是其他型別。</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">numberOrString</span>: <span class="built_in">number</span> | <span class="built_in">string</span> </span><br><span class="line"><span class="comment">// 而在使用此聯合型別的所有型別里共有的屬性性或方法：</span></span><br><span class="line">numberOrString.<span class="property">length</span>  <span class="comment">//會報錯 （只有 string 適用）</span></span><br><span class="line">numberOrString.<span class="title function_">toString</span>() <span class="comment">//string 和 number 的共同屬性是沒問題</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//若放在函式定義型別</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getLength</span>(<span class="params">something: <span class="built_in">string</span> | <span class="built_in">number</span></span>): <span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> something.<span class="property">length</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.ts(2,22): error TS2339: Property &#x27;length&#x27; does not exist on type &#x27;string | number&#x27;.</span></span><br><span class="line"><span class="comment">//   Property &#x27;length&#x27; does not exist on type &#x27;number&#x27;.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>聯合型別的變數在被賦值的時候，會根據型別推論的規則推斷出一個型別：</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">numberOrString</span>: <span class="built_in">string</span> | <span class="built_in">number</span>;</span><br><span class="line">numberOrString = <span class="string">&#x27;seven&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(numberOrString.<span class="property">length</span>); <span class="comment">// 5</span></span><br><span class="line">numberOrString = <span class="number">7</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(numberOrString.<span class="property">length</span>); <span class="comment">// 編譯時報錯</span></span><br><span class="line"><span class="comment">// index.ts(5,30): error TS2339: Property &#x27;length&#x27; does not exist on type &#x27;number&#x27;.</span></span><br></pre></td></tr></table></figure><p>上例中，第二行的 numberOrString 被推斷成了 string，存取它的 length 屬性不會報錯。<br>而第四行的 numberOrString 被推斷成了 number，存取它的 length 屬性時就報錯了。</p><ul><li>type guard </li><li>當遇到聯合類型，可以使用條件語句，自動幫你縮小型別範圍</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// typescript 在不同的条件分支里面，智能的缩小了范围，这样我们代码出错的几率就大大的降低了。</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getLength2</span>(<span class="params">input: string | number</span>): number &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> input === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> input.<span class="property">length</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> input.<span class="title function_">toString</span>().<span class="property">length</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="型別斷言（Type-Assertion）"><a href="#型別斷言（Type-Assertion）" class="headerlink" title="型別斷言（Type Assertion）"></a>型別斷言（Type Assertion）</h3><ul><li>開發者比 TS 更了解編寫的程式碼。因此，TS 允許開發者覆蓋它的推論，這樣的機制稱為「型別斷言」。</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这里我们可以用 as 關鍵字，告诉typescript 这里我把它看作是一個 string，你可以给他用 string 的方法。</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getLength</span>(<span class="params">input: <span class="built_in">string</span> | <span class="built_in">number</span></span>): <span class="built_in">number</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> str = input <span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line">  <span class="keyword">if</span> (str.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> str.<span class="property">length</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="built_in">number</span> = input <span class="keyword">as</span> <span class="built_in">number</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">number</span>.<span class="title function_">toString</span>().<span class="property">length</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>型別斷言不是型別轉換，斷言成一個聯合型別中不存在的型別是不允許的：</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">toBoolean</span>(<span class="params">something: <span class="built_in">string</span> | <span class="built_in">number</span></span>): <span class="built_in">boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &lt;<span class="built_in">boolean</span>&gt;something;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.ts(2,10): error TS2352: Type &#x27;string | number&#x27; cannot be converted to type &#x27;boolean&#x27;.</span></span><br><span class="line"><span class="comment">//   Type &#x27;number&#x27; is not comparable to type &#x27;boolean&#x27;.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>基礎型別先介紹到這裡，下篇將介紹一些進階用法～</p><p>資料來源：</p><ol><li>線上課程：實戰 Vue3.0(正式版) + TS </li><li><a href="https://willh.gitbook.io/typescript-tutorial/">TypeScript 新手指南</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> TypeScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>講講幾個 Nuxt.js 重要觀念</title>
      <link href="/2021/11/10/Nuxt-2/"/>
      <url>/2021/11/10/Nuxt-2/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/4LE0BUW.png" alt=""></p><p>在使用 Nuxt.js 開啟專案後，會自動生成不少文件檔案，今天就來介紹幾樣基礎設定以及檔案的運用吧！</p><h2 id="了解-Nuxt-路徑引用規則"><a href="#了解-Nuxt-路徑引用規則" class="headerlink" title="了解 Nuxt 路徑引用規則"></a>了解 Nuxt 路徑引用規則</h2><ul><li><code>~</code>以及<code>@</code> ：根目錄 <ul><li>(注意：nuxt.conf.js、非 nuxt 結構的 js 檔 除外)</li></ul></li><li>波浪或小老鼠 :從根目錄 搜尋assets 資料夾<br><img src="https://i.imgur.com/CNUlrGz.png" alt=""><br>以下也一樣<br><code>import test from &quot;@/assets/js/test.js&quot;</code></li></ul><ol start="2"><li><code>./</code>：自己的目錄</li></ol><ul><li>nuxt.conf.js、以及非 nuxt 結構要這樣撰寫<br><img src="https://i.imgur.com/2qLJ5te.png" alt=""></li></ul><ol start="3"><li>放在 static 資料夾裡的引用方式(直接斜線)<code>&lt;img src=&quot;/demo.png&quot; alt=&quot;&quot;&gt;</code></li><li>補充：<br><a href="https://docs.google.com/presentation/d/15q4Vsl3I6Bf5F1f2LdNj_OvF5fcrl7aPv5aA1E39Kjw/edit#slide=id.g813fdce503_0_0">2.4 nuxt 圖片處理 - webpack 相關設定</a></li></ol><ul><li><p>在asset 加入 img 資料夾(將圖片放在這裡)<br><code>&lt;img src=&quot;@/assets/img/demo.png&quot; alt=&quot;&quot;&gt;</code><br><img src="https://i.imgur.com/iSsni0c.png" alt=""></p></li><li><p>放在css作背景圖<br>  *<code>background: url(~assets/img/demo.png);  //nuxt css 引入圖片不能加斜線</code></p><ul><li>也不能將波浪改為@<br>:::info<br>原本波浪斜線方式:<br><code>background: url(~/assets/img/demo.png);</code><br>:::<br><img src="https://i.imgur.com/ekDF3vK.png" alt=""></li></ul></li></ul><h2 id="nuxt-config-js-設定"><a href="#nuxt-config-js-設定" class="headerlink" title="nuxt.config.js 設定"></a>nuxt.config.js 設定</h2><ul><li>vue cli3 設定vue 專案是透過是 main.js/ vue.config.js 這兩隻檔案。<ul><li>main.js 為程式的進入點</li></ul></li><li>nuxt 則統一用 nuxt.conf.js 做為設定。<ul><li>要編輯這份文件達到專案需求</li><li>如 wedpack 是放在 build</li></ul></li></ul><p><img src="https://i.imgur.com/aLpoUcR.png" alt=""></p><ul><li>此外在此檔案可以做標題、引入 CDN 等基礎設置<ul><li>head,meta 可以做表頭的設定</li><li>script 可以引入 JS 的檔案或 CDN 資源</li></ul></li><li>css 全域設定，也同樣放在這裡<ul><li><a href="https://nuxtjs.org/docs/configuration-glossary/configuration-css/">The css property</a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">css</span>: [</span><br><span class="line"> <span class="string">&#x27;~/assets/scss/demo.scss&#x27;</span></span><br><span class="line">],</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// Global page headers: https://go.nuxtjs.dev/config-head</span></span><br><span class="line">  <span class="attr">head</span>: &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;myNuxt&#x27;</span>,</span><br><span class="line">    <span class="attr">htmlAttrs</span>: &#123;</span><br><span class="line">      <span class="attr">lang</span>: <span class="string">&#x27;en&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">meta</span>: [</span><br><span class="line">      &#123; <span class="attr">charset</span>: <span class="string">&#x27;utf-8&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&#x27;viewport&#x27;</span>, <span class="attr">content</span>: <span class="string">&#x27;width=device-width, initial-scale=1&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">hid</span>: <span class="string">&#x27;description&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;description&#x27;</span>, <span class="attr">content</span>: <span class="string">&#x27;&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&#x27;format-detection&#x27;</span>, <span class="attr">content</span>: <span class="string">&#x27;網站前後端、網頁設計、程式語言網站&#x27;</span> &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">link</span>: [</span><br><span class="line">      &#123; <span class="attr">rel</span>: <span class="string">&#x27;icon&#x27;</span>, <span class="attr">type</span>: <span class="string">&#x27;image/x-icon&#x27;</span>, <span class="attr">href</span>: <span class="string">&#x27;/favicon.ico&#x27;</span> &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">script</span>:</span><br><span class="line">    [</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">&quot;/jquery.min.js&quot;</span>&#125;,</span><br><span class="line">      &#123; <span class="attr">src</span>: <span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/js/all.js&quot;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/krqrhq8.png" alt=""></p><h3 id="引用-static-靜態資源的檔案"><a href="#引用-static-靜態資源的檔案" class="headerlink" title="引用 static 靜態資源的檔案"></a>引用 static 靜態資源的檔案</h3><ul><li>static資料夾:靜態資源資料夾<ul><li>其中要連接該檔案路徑要用斜線</li><li>這裡面的檔案不會被打包和優化<br><img src="https://i.imgur.com/46ebZ9F.png" alt=""></li></ul></li></ul><h2 id="套件安裝"><a href="#套件安裝" class="headerlink" title="套件安裝!"></a>套件安裝!</h2><ol><li>最簡單方式是使用打包後的 CDN 或 js 檔案 <ul><li>在head 的 script 放入 CDN</li></ul></li><li>使用 <a href="https://nuxtjs.org/docs/directory-structure/plugins/">nuxt plugins</a> 自包 js 套件 或 vue 套件 → 較麻煩</li><li>使用 <a href="https://zh.nuxtjs.org/guide/modules/">nuxt modules</a> 來引入套件<ul><li>套件較少</li></ul></li></ol><ul><li>nuxt module 主要是將 plugin 在封裝一層出來。(就是 nuxt 專有的套件)，如果對安裝 plugins 沒把握，就找有 nuxt modules 的套件來安裝。</li></ul><h3 id="練習1包裝一般的-vue-套件"><a href="#練習1包裝一般的-vue-套件" class="headerlink" title="練習1包裝一般的 vue 套件"></a>練習1包裝一般的 vue 套件</h3><p> <a href="https://www.npmjs.com/package/vuejs-datepicker">vuejs-datepicker</a></p><p>1、npm install vuejs-datepicker</p><ul><li>若直接依照官網來安裝，並在檔案引入會發生錯誤</li><li>所以 install 完之後要再執行下面動作<br>2、plugins 新增一個檔案：datepicker.js → 撰寫套件</li><li>在 plugins 資料夾，新增檔案<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Datepicker</span> <span class="keyword">from</span> <span class="string">&#x27;vuejs-datepicker&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;Datepicker&#x27;</span>, <span class="title class_">Datepicker</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/l0kYSwT.png" alt=""></p><p>3、nuxt.config.js 安裝 plugin → 可以設定該套件只在 客戶端 運作</p><ul><li>可以將插件安裝在客戶端或是 server 端<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">src</span>: <span class="string">&#x27;~/plugins/datepicker.js&#x27;</span>, <span class="attr">mode</span>: <span class="string">&#x27;client&#x27;</span> &#125;,</span><br></pre></td></tr></table></figure></li><li>要使用時，再放入頁面<br><img src="https://i.imgur.com/gNNLJ2O.png" alt=""><h3 id="練習2-安裝一般的-js-套件"><a href="#練習2-安裝一般的-js-套件" class="headerlink" title="練習2 安裝一般的 js 套件"></a>練習2 安裝一般的 js 套件</h3><a href="https://greensock.com/docs/v3/Installation">GSAP</a></li></ul><ol><li>npm install gsap</li><li>plugins 新增一個檔案：gsap.js → 撰寫套件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> gsap <span class="keyword">from</span> <span class="string">&quot;gsap&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$gsap</span> = gsap</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/t3G7UGN.png" alt=""></li><li>nuxt.config.js 安裝 plugin<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins</span>: [</span><br><span class="line">   &#123; <span class="attr">src</span>: <span class="string">&#x27;~/plugins/gsap.js&#x27;</span>, <span class="attr">mode</span>: <span class="string">&#x27;client&#x27;</span> &#125;,</span><br><span class="line"> ],</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><ul><li><code>create()</code> 會在前端執行\後端執行</li></ul><h3 id="練習3-nuxt-安裝"><a href="#練習3-nuxt-安裝" class="headerlink" title="練習3 nuxt 安裝"></a>練習3 nuxt 安裝</h3><p><a href="https://axios.nuxtjs.org/">axios modules</a></p><ol><li>npm install @nuxtjs/axios</li><li>plugins 新增一個檔案：axios.js </li></ol><ul><li>如同前面的練習，到  nuxt.config.js<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">modules</span>: [</span><br><span class="line">  <span class="string">&#x27;@nuxtjs/axios&#x27;</span>,</span><br><span class="line">],</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Nuxt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>為何要學習 Nuxt.js ？</title>
      <link href="/2021/11/10/Nuxt-1/"/>
      <url>/2021/11/10/Nuxt-1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/4LE0BUW.png" alt=""></p><p>製作網站，都會希望自己的網站可以被搜尋引擎找得到，並且可以在使用者輸入關鍵字後，可以在頭幾個項目中就能關注到自己的網站！<br>而在使用 Vue.js 框架，因為是使用 SPA 架構無法做到 SEO (search engine optimization) 的效果，別人無法輕易的找到我們所製作的網站。<br>今天要介紹的 Nuxt.js 是一個基於 Vue.js、用來處理伺服器渲染（Server-side rendering(SSR)）的框架。透過 SSR 我們可以做到更好的 SEO 效果。</p><p>本文首要任務： 認識 SPA 與 SSR 的差異</p><h2 id="SPA-Single-Page-Application-架構"><a href="#SPA-Single-Page-Application-架構" class="headerlink" title="SPA (Single Page Application) 架構"></a>SPA (Single Page Application) 架構</h2><ul><li>讓一些後端的工作，分擔到前端 (如： router 設定)</li><li>流程為：使用者開了瀏覽器 -&gt; 向後端server要資料，因為改為SPA 架構，所以提供的會是SPA 首頁（會載入JS\編譯好的CSS\一頁空殼的HTML網頁），此空殼經過 Vue 編譯產出 DOM 物件，讓瀏覽器印出。</li><li>讓回應速度更快，使用者在轉換頁面時得到更好的體驗。<ul><li>SPA（Single Page Application）意思是僅有一個頁面的應用程式，也就是說網頁不需跳轉頁面就可以達到基本的建立、讀取、修改、刪除資料功能。</li></ul></li><li>後端負責調整API 邏輯\架構<h3 id="SPA-缺點"><a href="#SPA-缺點" class="headerlink" title="SPA 缺點"></a>SPA 缺點</h3></li><li>SEO差(SPA 一開始吐的是空殼)，GOOGLE 爬不到頁面資訊</li><li>SMO差，FB爬不到頁面資訊</li><li>首屏速度慢，一開始畫面會空白或閃爍<ul><li>發出請求資訊到實際上呈現完整頁面時間</li></ul></li></ul><h2 id="SSR-Server-Side-Rendering"><a href="#SSR-Server-Side-Rendering" class="headerlink" title="SSR (Server Side Rendering)"></a>SSR (Server Side Rendering)</h2><p>流程為：使用者開了瀏覽器 -&gt; 向後端server要資料，因為改為SSR，所以會提供一整個頁面(不會是畫面空白閃爍)</p><ul><li>希望頁面可以將網頁整個東西呈現，並讓搜尋引擎查得到</li><li>處理 SEO(針對搜尋引擎)</li></ul><ul><li>title</li><li>meta tag<ul><li>全域 <code>&lt;head&gt;</code> 設定</li><li>單頁 <code>&lt;head&gt;</code> 設定 </li></ul></li><li>description</li></ul><ul><li>處理 SMO (針對 Social media)<ul><li>twitter\youtube\Line…<h3 id="有更多的彈性設定"><a href="#有更多的彈性設定" class="headerlink" title="有更多的彈性設定"></a>有更多的彈性設定</h3><h4 id="Nuxt-有三種模式，可以幫你解決問題"><a href="#Nuxt-有三種模式，可以幫你解決問題" class="headerlink" title="Nuxt 有三種模式，可以幫你解決問題"></a>Nuxt 有三種模式，可以幫你解決問題</h4></li></ul></li></ul><ol><li>Universal: SSR + CSR </li></ol><ul><li>全域設定 mode: ‘Universal’</li></ul><ol start="2"><li>SPA: 不跑SSR </li></ol><ul><li>全域設定 mode: ‘spa’ 或執行 nuxt-spa</li></ul><ol start="3"><li>Static Generated (Pre Rendering): 產生靜態頁面</li></ol><ul><li>nuxt run generate<ul><li>預先將頁面轉成靜態頁面</li><li>如要拉10樣商品，就先拉10個頁面</li></ul></li></ul><p>希望本篇的扼要介紹能夠讓讀者快速知道其中的差異。</p><p>參考資料：<br><a href="https://medium.com/@jackercleaninglab/ssr-nuxt-js-%E8%B6%85%E5%85%A5%E9%96%80-84a0823b45ed">SSR — Nuxt.js 超入門</a><br><a href="https://www.youtube.com/watch?v=szrRDJBFmvQ">Vue Nuxt 介紹與實作範例</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Nuxt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>實作 Vuex - Todo List</title>
      <link href="/2021/10/20/vuex-todo/"/>
      <url>/2021/10/20/vuex-todo/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/RPoUnyd.png" alt=""></p><p>之前的實作練習都沒有機會使用到 Vuex，總是覺得它的資料存取、取得或是管理，對於剛接觸Vue 的我來說還是相對複雜，而且剛開始接觸 Vue 總要先練習下 props \ emit 資料傳遞才行啊～<br>既然已經會使用基礎的資料傳遞後，那就要近一步實作 Vuex 狀態管理</p><h2 id="實作功能說明"><a href="#實作功能說明" class="headerlink" title="實作功能說明"></a>實作功能說明</h2><ul><li>資料的取得來自 JSONPlaceholder<ul><li>從Vuex來實作資料的取得、刪除、更新</li></ul></li><li>針對目前取得的資料進行筆數的篩選</li><li>區分未完成事項、以及完成事項</li><li>可透過點擊方塊改變色塊</li><li>接下來～會製作 3個 component ，將元件放到 App.vue</li></ul><p><a href="https://eva813.github.io/Vuex-Todo/index.html">成品</a></p><h4 id="開始前別忘了先建立-module"><a href="#開始前別忘了先建立-module" class="headerlink" title="開始前別忘了先建立 module"></a>開始前別忘了先建立 module</h4><h2 id="Vuex-檔案的處理"><a href="#Vuex-檔案的處理" class="headerlink" title="Vuex 檔案的處理"></a>Vuex 檔案的處理</h2><ul><li>這裡開專案直接有建立 vuex</li><li>進入 store &gt; index.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> todos <span class="keyword">from</span> <span class="string">&#x27;./modules/todos&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="attr">state</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    todos,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="建立-modules-資料夾"><a href="#建立-modules-資料夾" class="headerlink" title="建立 modules 資料夾"></a>建立 modules 資料夾</h2><ul><li>store &gt; modules &gt; todo.js<ul><li>從這裡的資料取得並傳遞到 Todos.vue<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> state = &#123;&#125;;</span><br><span class="line"><span class="keyword">const</span> getters = &#123;&#125;;</span><br><span class="line"><span class="keyword">const</span> actions = &#123;&#125;;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  state,</span><br><span class="line">  getters,</span><br><span class="line">  actions,</span><br><span class="line">  mutations</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="接下來要嘗試來串取資料"><a href="#接下來要嘗試來串取資料" class="headerlink" title="接下來要嘗試來串取資料"></a>接下來要嘗試來串取資料</h4></li></ul></li><li>取得假資料<br><a href="https://jsonplaceholder.typicode.com/todos">jsonplaceholder-todo</a><h2 id="在-todo-js-來製作資料的串接"><a href="#在-todo-js-來製作資料的串接" class="headerlink" title="在 todo.js 來製作資料的串接"></a>在 todo.js 來製作資料的串接</h2></li><li>首先state這裡要先建立空陣列，getters 則是建立資料取得的函式</li><li>在action 來發出請求，取得回應，並傳給 mutations<ul><li>mutations 是改變資料的地方</li></ul></li><li>引入axios，使用 Asyc await 使用 get 來串接資料<ul><li>將串到的資料 commit 到 mutations，改變原本todos資料內容</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">todos</span>: []</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="attr">getTodos</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">todos</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">fetchTodos</span>(<span class="params">&#123; commit &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&quot;https://jsonplaceholder.typicode.com/todos&quot;</span>);</span><br><span class="line">    <span class="comment">// console.log(res.data);</span></span><br><span class="line">    <span class="title function_">commit</span>(<span class="string">&#x27;setTodos&#x27;</span>, res.<span class="property">data</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="attr">setTodos</span>: <span class="function">(<span class="params">state, todos</span>) =&gt;</span> &#123;</span><br><span class="line">    state.<span class="property">todos</span> = todos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  state,</span><br><span class="line">  getters,</span><br><span class="line">  actions,</span><br><span class="line">  mutations</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/4wmzRwy.png" alt=""></p><h2 id="建立-Todos-vue"><a href="#建立-Todos-vue" class="headerlink" title="建立 Todos.vue"></a>建立 Todos.vue</h2><ul><li><p>此元件主要是呈現所有的 Todo list</p><h3 id="取得-vuex-中的資料"><a href="#取得-vuex-中的資料" class="headerlink" title="取得 vuex 中的資料"></a>取得 vuex 中的資料</h3></li><li><p>引入 mapGetters, mapActions</p></li><li><p>將要從 getters 拿到的陣列，放到computed做資料的取得</p><ul><li>將該陣列<code>getTodos</code> 放到 v-for</li></ul></li><li><p>串接的 action 使用 mapActions，於 methods中執行，而此函式要在<code>created</code>階段運行</p></li><li><p>如此一來就可以，從 Vuex 中得到資料</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Todos<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;todos&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;todo&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;todo in getTodos&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;todo.id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;&#123; todo.title &#125;&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; mapGetters, mapActions &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&quot;Todos&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    ...<span class="title function_">mapActions</span>([<span class="string">&quot;fetchTodos&quot;</span>])</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">computed</span>: <span class="title function_">mapGetters</span>([<span class="string">&quot;getTodos&quot;</span>]),</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="title function_">fetchTodos</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/4RKUMtJ.png" alt=""></p><p><img src="https://i.imgur.com/IiWla0A.png" alt=""></p><h2 id="製作加入新-todo-功能"><a href="#製作加入新-todo-功能" class="headerlink" title="製作加入新 todo 功能"></a>製作加入新 todo 功能</h2><ul><li>建立一個新的 component =&gt; AddTodo.vue</li><li>在 AddTodo 這個元件，製作 輸入框<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Add Todo<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;add&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Add Todo...&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;title&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&quot;AddTodo&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="到-module-gt-todo-js"><a href="#到-module-gt-todo-js" class="headerlink" title="到 module &gt; todo.js"></a>到 module &gt; todo.js</h3></li><li>使用 async 與 axios 傳入資料<ul><li>第二個參數為 title</li><li>post 的網址一樣，後面接的參數為title, complete: false (any new todo that it’s not going to completed)</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">fetchTodos</span>(<span class="params">&#123; commit &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&quot;https://jsonplaceholder.typicode.com/todos&quot;</span>);</span><br><span class="line">    <span class="comment">// console.log(res.data);</span></span><br><span class="line">    <span class="title function_">commit</span>(<span class="string">&#x27;setTodos&#x27;</span>, res.<span class="property">data</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">addTodo</span>(<span class="params">&#123; commit &#125;, title</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">post</span>(<span class="string">&quot;https://jsonplaceholder.typicode.com/todos&quot;</span>, &#123; title, <span class="attr">completed</span>: <span class="literal">false</span> &#125;);</span><br><span class="line">    <span class="title function_">commit</span>(<span class="string">&#x27;addNewTodo&#x27;</span>, res.<span class="property">data</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>而在action 中使用axios 來新增資料，要將這必新資料 push 到 todo的陣列中<ul><li>存入的該資料要放在，陣列的最前面所以使用 unshift<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="attr">setTodos</span>: <span class="function">(<span class="params">state, todos</span>) =&gt;</span> &#123;</span><br><span class="line">    state.<span class="property">todos</span> = todos;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">addNewTodo</span>: <span class="function">(<span class="params">state, todo</span>) =&gt;</span> &#123;</span><br><span class="line">    state.<span class="property">todos</span>.<span class="title function_">unshift</span>(todo);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="到-AddTodo-vue-來呼叫此-action"><a href="#到-AddTodo-vue-來呼叫此-action" class="headerlink" title="到 AddTodo.vue 來呼叫此 action"></a>到 AddTodo.vue 來呼叫此 action</h3><ul><li>import <code>mapActions</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Add Todo<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;add&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit</span>=<span class="string">&quot;onSubmit&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Add Todo...&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;title&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; mapActions &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;AddTodo&quot;</span>,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">method</span>: &#123;</span><br><span class="line">    ...<span class="title function_">mapActions</span>([<span class="string">&quot;addTodo&quot;</span>]),</span><br><span class="line">    <span class="title function_">onSubmit</span>(<span class="params">e</span>) &#123;</span><br><span class="line">      e.<span class="title function_">preventDefault</span>();</span><br><span class="line">      <span class="comment">//點擊後呼叫action中的加入todo函式，並傳入title資料</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">addTodo</span>(<span class="variable language_">this</span>.<span class="property">title</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/57j3S5m.png" alt=""></p><h3 id="這裡要特別提出說明"><a href="#這裡要特別提出說明" class="headerlink" title="這裡要特別提出說明"></a>這裡要特別提出說明</h3><p>因為是使用線上的虛擬資料，他不允許我們可以存入新資料到他的API裡面<br>所以可以看到下方的錯誤顯示(重複 id)<br>而此在重新整理之後，存入的資料會消失</p><p><img src="https://i.imgur.com/nNh6AXL.png" alt=""></p><p><img src="https://i.imgur.com/0IZlhhL.png" alt=""></p><hr><h2 id="製作刪除功能"><a href="#製作刪除功能" class="headerlink" title="製作刪除功能"></a>製作刪除功能</h2><ul><li>以id作為參數，來依此刪除</li><li>不用儲存response資料<ul><li>在 async deleteTodo ，製作 by id 刪除</li><li>到 mutations =&gt; 使用 filter 存下資料</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">todos</span>: []</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="attr">getTodos</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">todos</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">fetchTodos</span>(<span class="params">&#123; commit &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&quot;https://jsonplaceholder.typicode.com/todos&quot;</span>);</span><br><span class="line">    <span class="comment">// console.log(res.data);</span></span><br><span class="line">    <span class="title function_">commit</span>(<span class="string">&#x27;setTodos&#x27;</span>, res.<span class="property">data</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">addTodo</span>(<span class="params">&#123; commit &#125;, title</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">post</span>(<span class="string">&quot;https://jsonplaceholder.typicode.com/todos&quot;</span>, &#123; title, <span class="attr">completed</span>: <span class="literal">false</span> &#125;);</span><br><span class="line">    <span class="title function_">commit</span>(<span class="string">&#x27;addNewTodo&#x27;</span>, res.<span class="property">data</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">deleteTodo</span>(<span class="params">&#123; commit &#125;, id</span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> axios.<span class="title function_">delete</span>(<span class="string">`https://jsonplaceholder.typicode.com/todos/<span class="subst">$&#123;id&#125;</span>`</span>);</span><br><span class="line">    <span class="title function_">commit</span>(<span class="string">&#x27;removeTodo&#x27;</span>, id)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="attr">setTodos</span>: <span class="function">(<span class="params">state, todos</span>) =&gt;</span> &#123;</span><br><span class="line">    state.<span class="property">todos</span> = todos;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">addNewTodo</span>: <span class="function">(<span class="params">state, todo</span>) =&gt;</span> &#123;</span><br><span class="line">    state.<span class="property">todos</span>.<span class="title function_">unshift</span>(todo);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">removeTodo</span>: <span class="function">(<span class="params">state, id</span>) =&gt;</span> &#123;</span><br><span class="line">    state.<span class="property">todos</span> = state.<span class="property">todos</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.<span class="property">id</span> !== id);</span><br><span class="line">    <span class="comment">//使用filter 將，不是id的篩選出來</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  state,</span><br><span class="line">  getters,</span><br><span class="line">  actions,</span><br><span class="line">  mutations</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>回到 Todos.vue</li><li>在 template 放入垃圾桶的 icon<ul><li>執行刪除的功能，在 icon 綁定刪除事件<code>deleteTodo()</code></li><li><code>deleteTodo()</code>就是來自於 methods 取得的事件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Todos<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;todos&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;todo&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;todo in getTodos&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;todo.id&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; todo.title &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-trash-alt&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;deleteTodo(todo.id)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; mapGetters, mapActions &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Todos&quot;</span>,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    ...<span class="title function_">mapActions</span>([<span class="string">&quot;fetchTodos&quot;</span>, <span class="string">&quot;deleteTodo&quot;</span>]),</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>: <span class="title function_">mapGetters</span>([<span class="string">&quot;getTodos&quot;</span>]),</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">fetchTodos</span>();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul><hr><h2 id="製作篩選器功能"><a href="#製作篩選器功能" class="headerlink" title="製作篩選器功能"></a>製作篩選器功能</h2><ul><li>當 FilterTodo.vue 這裡的篩選器執行的時候，會執行 action中的函式，進行篩選<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">select &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">#ef9a9a</span> <span class="number">1px</span> solid;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    Filter todos:</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;200&quot;</span>&gt;</span>200<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;100&quot;</span>&gt;</span>100<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span>&gt;</span>50<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;30&quot;</span>&gt;</span>30<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span>&gt;</span>20<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;FilterTodos&quot;</span>,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><p>將該元件綁到 App.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">AddTodo</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FilterTodos</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Todos</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  &lt;!-- <span class="language-xml"><span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span> --&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">Todos</span> <span class="keyword">from</span> <span class="string">&quot;@/components/Todos.vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">AddTodo</span> <span class="keyword">from</span> <span class="string">&quot;@/components/AddTodo.vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">FilterTodos</span> <span class="keyword">from</span> <span class="string">&quot;@/components/FilterTodos.vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&quot;app&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title class_">Todos</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title class_">AddTodo</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title class_">FilterTodos</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="到-module-gt-todo-js-來製作-actions"><a href="#到-module-gt-todo-js-來製作-actions" class="headerlink" title="到 module &gt; todo.js 來製作 actions"></a>到 module &gt; todo.js 來製作 actions</h3><ul><li>要傳入 option 的 value<ul><li>第二個參數為事件</li><li>在 axios 的 get 放入 url，接上取得的參數</li><li>commit 直接傳到 setTodos ，將串接到的資料透過 mutations 存到 todos<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">todos</span>: []</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="attr">getTodos</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">todos</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">filterTodos</span>(<span class="params">&#123; commit &#125;, e</span>) &#123;</span><br><span class="line">    <span class="comment">//取得下拉選單的值</span></span><br><span class="line">    <span class="comment">//console.log(e.target.value);</span></span><br><span class="line">    <span class="keyword">let</span> selected = <span class="built_in">parseInt</span>(e.<span class="property">target</span>.<span class="property">value</span>);</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">`https://jsonplaceholder.typicode.com/todos?_limit=<span class="subst">$&#123;selected&#125;</span>`</span>);</span><br><span class="line">    <span class="title function_">commit</span>(<span class="string">&#x27;setTodos&#x27;</span>, res.<span class="property">data</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="attr">setTodos</span>: <span class="function">(<span class="params">state, todos</span>) =&gt;</span> &#123;</span><br><span class="line">    state.<span class="property">todos</span> = todos;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">addNewTodo</span>: <span class="function">(<span class="params">state, todo</span>) =&gt;</span> &#123;</span><br><span class="line">    state.<span class="property">todos</span>.<span class="title function_">unshift</span>(todo);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">removeTodo</span>: <span class="function">(<span class="params">state, id</span>) =&gt;</span> &#123;</span><br><span class="line">    state.<span class="property">todos</span> = state.<span class="property">todos</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.<span class="property">id</span> !== id);</span><br><span class="line">    <span class="comment">//使用filter 將，不是id的篩選出來</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  state,</span><br><span class="line">  getters,</span><br><span class="line">  actions,</span><br><span class="line">  mutations</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li>將ａction 綁到 FilterTodos.vue<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    Filter todos:</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">select</span> @<span class="attr">change</span>=<span class="string">&quot;filterTodos($event)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;200&quot;</span>&gt;</span>200<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;100&quot;</span>&gt;</span>100<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span>&gt;</span>50<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;30&quot;</span>&gt;</span>30<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;20&quot;</span>&gt;</span>20<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; mapActions &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&quot;FilterTodos&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    ...<span class="title function_">mapActions</span>([<span class="string">&quot;filterTodos&quot;</span>]),</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="todos-完成與否，狀態的改變"><a href="#todos-完成與否，狀態的改變" class="headerlink" title="todos 完成與否，狀態的改變"></a>todos 完成與否，狀態的改變</h2><ul><li>點擊兩下來更改狀態<ul><li>當要更新資料，要使用put，傳入updTodo物件資料<ul><li>將該資料傳到mutation</li></ul></li><li>接著到 mutation 製作更新的動作</li><li>要取得目前的index</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">todos</span>: []</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="attr">getTodos</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">todos</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">updataTodo</span>(<span class="params">&#123; commit &#125;, updTodo</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">put</span>(<span class="string">`https://jsonplaceholder.typicode.com/todos/<span class="subst">$&#123;updTodo.id&#125;</span>`</span>,updTodo);</span><br><span class="line">    <span class="title function_">commit</span>(<span class="string">&#x27;renewTodo&#x27;</span>, res.<span class="property">data</span>);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="attr">renewTodo</span>: <span class="function">(<span class="params">state, updTodo</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(updTodo);</span><br><span class="line">    <span class="comment">//我們是要在同一筆資料上更新</span></span><br><span class="line">    <span class="keyword">const</span> index = state.<span class="property">todos</span>.<span class="title function_">findIndex</span>(<span class="function"><span class="params">todo</span> =&gt;</span> todo.<span class="property">id</span> === updTodo.<span class="property">id</span>);</span><br><span class="line">    <span class="comment">//以下簡單確認 indx 是否有存在</span></span><br><span class="line">    <span class="keyword">if</span> (index !== -<span class="number">1</span>) &#123;</span><br><span class="line">      state.<span class="property">todos</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>, updTodo);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  state,</span><br><span class="line">  getters,</span><br><span class="line">  actions,</span><br><span class="line">  mutations</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="回到-Todos-vue"><a href="#回到-Todos-vue" class="headerlink" title="回到 Todos.vue"></a>回到 Todos.vue</h3><ul><li>template 插入legend</li><li>引入 <code>updataTodo</code>到 methods</li><li><code>onDblclick()</code>建立一個變數，它包含的物件內容為id、title、completed，其中我只要要改變的值是 complete true\false<ul><li>這裡的 id,title 都一樣。complete 則設定狀態的改變</li><li>最後在呼叫一次 <code>updataTodo()</code>  傳入新的物件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Todos<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;legend&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>雙重點擊來標示已完成的事項<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;incomplete-box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> = 未完成 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;complete-box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> = 已完成 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;todos&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">dblclick</span>=<span class="string">&quot;onDblclick(todo)&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;todo&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-for</span>=<span class="string">&quot;todo in getTodos&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:key</span>=<span class="string">&quot;todo.id&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:class</span>=<span class="string">&quot;&#123; &#x27;is-complete&#x27;: todo.completed &#125;&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      &#123;&#123; todo.title &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-trash-alt&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;deleteTodo(todo.id)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; mapGetters, mapActions &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Todos&quot;</span>,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    ...<span class="title function_">mapActions</span>([<span class="string">&quot;fetchTodos&quot;</span>, <span class="string">&quot;deleteTodo&quot;</span>, <span class="string">&quot;updataTodo&quot;</span>]),</span><br><span class="line">    <span class="title function_">onDblclick</span>(<span class="params">todo</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> updTodo = &#123;</span><br><span class="line">        <span class="attr">id</span>: todo.<span class="property">id</span>,</span><br><span class="line">        <span class="attr">title</span>: todo.<span class="property">title</span>,</span><br><span class="line">        <span class="attr">completed</span>: !todo.<span class="property">completed</span>,</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">updataTodo</span>(updTodo);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>: <span class="title function_">mapGetters</span>([<span class="string">&quot;getTodos&quot;</span>]),</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">fetchTodos</span>();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul><p>參考資料：<br><a href="https://ithelp.ithome.com.tw/articles/10191225">[Vue.js] Vuex 學習筆記 (5) - getters 的核心概念</a><br><a href="https://vuex.vuejs.org/zh/guide/getters.html#%E9%80%9A%E8%BF%87%E5%B1%9E%E6%80%A7%E8%AE%BF%E9%97%AE">Vuex</a><br><a href="https://forum.vuejs.org/t/using-this-store-dispatch-vs-using-mapactions/2186/2">Using <code>this.$store.dispatch</code> vs using mapActions</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Vuex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js 3 -  組件的拆分</title>
      <link href="/2021/10/19/Vue-setComponent/"/>
      <url>/2021/10/19/Vue-setComponent/</url>
      
        <content type="html"><![CDATA[<p>試想今天有一個網頁，上方的導覽列有不同的分類，帶領你到該項目的分頁中<br>那我們該如何實現，將各個項目的內容一一呈現<br><img src="https://i.imgur.com/7LUqd5I.png" alt=""></p><h2 id="簡單分別製作-component"><a href="#簡單分別製作-component" class="headerlink" title="簡單分別製作 component"></a>簡單分別製作 component</h2><p>首先：component的命名要用大寫<br><img src="https://i.imgur.com/fAOtmM8.png" alt=""></p><ul><li>在 component 中<br><img src="https://i.imgur.com/dgWnvii.png" alt=""></li></ul><h3 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h3><ul><li>在 App.vue<br>讓vue知道有個component可以被使用，透過ES6的解構放入<br><img src="https://i.imgur.com/4yAMVNw.png" alt=""><br>將引入的component放到template<br><img src="https://i.imgur.com/PO4LhRv.png" alt=""><br><img src="https://i.imgur.com/K0UmvdI.png" alt=""></li></ul><h2 id="將其他組件引入"><a href="#將其他組件引入" class="headerlink" title="將其他組件引入"></a>將其他組件引入</h2><p><img src="https://i.imgur.com/EgWUGfG.png" alt=""></p><p><img src="https://i.imgur.com/qIvkq2l.png" alt=""></p><h2 id="補充說明："><a href="#補充說明：" class="headerlink" title="補充說明："></a>補充說明：</h2><p>修改路徑:<br>用~@來指定圖片路徑：@在vuecli是代表特殊意義，就會直接從src這個資料夾底下開始查找;而波浪符號，代表現在在css之中使用這個功能<br><img src="https://i.imgur.com/NefWOd8.png" alt=""></p><ul><li>也就是在專案中，即便路徑複雜，只要在路徑最前面加上<code>@</code>就會直接進去src<br><img src="https://i.imgur.com/sPhH1rs.png" alt=""></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS基本觀念 - 認識 pass by value、pass by reference 、 pass by sharing，Javascript 又是哪一個？</title>
      <link href="/2021/10/09/js-pass/"/>
      <url>/2021/10/09/js-pass/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/zT0UU5c.jpg" alt=""></p><p>之所以會撰寫這篇文，是因為面試過程被考倒的觀念，才發現自己過去從沒注意到這部分啊，那就來寫篇文章來認識它們之中的傳遞方式。</p><h2 id="首先，先從型別的認識開始"><a href="#首先，先從型別的認識開始" class="headerlink" title="首先，先從型別的認識開始"></a>首先，先從型別的認識開始</h2><p>在Javascript分兩大類，一種是基本型別(primitive type)，另一種是物件(Object)。</p><ul><li>Primitive type （以純值的形式存在）<br>Boolean<br>Null<br>Undefined<br>Number<br>BigInt<br>String<br>Symbol（於 ECMAScript 6 新定義）</li><li>Object<br>物件型別指的是可能由零或多種不同型別 (包括純值與物件) 所組合成，例如object,array, function, map</li></ul><p>知道型別後，可以簡易的分類：</p><ul><li>primitive type會是 pass by value，</li><li>object 是 pass by reference。</li></ul><h2 id="接下來來觀察，它們之間不同"><a href="#接下來來觀察，它們之間不同" class="headerlink" title="接下來來觀察，它們之間不同"></a>接下來來觀察，它們之間不同</h2><h3 id="pass-by-value"><a href="#pass-by-value" class="headerlink" title="pass by value"></a>pass by value</h3><p>範例1：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">let</span> y=x;</span><br><span class="line"></span><br><span class="line">x=<span class="number">20</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">//20</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(y); <span class="comment">//10</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>注意：x和y是兩個獨立變數 （先記著這點）<ul><li>值會存入該變數<br><code>var y = x;</code> 看起來會像是y的內容要複製x，但可以的話要理解為，變數 y 是去建立了一個新的值，然後將變數 x 的內容複製了一份過來。</li></ul></li><li>因為兩的變數，各自獨立，所以當變數 x 的內容後來經過更新變成 20 之後，變數 y 的內容依舊保持原來的 10 而不受影響。</li></ul><p>範例2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num=<span class="number">3</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;num start:&quot;</span>,num);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">passByValue</span>(<span class="params">func_num</span>)&#123;</span><br><span class="line">  func_num=<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">passByValue</span>(num);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;num end:&quot;</span>, num);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="結果："><a href="#結果：" class="headerlink" title="結果："></a>結果：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num <span class="attr">start</span>:<span class="number">3</span></span><br><span class="line">num <span class="attr">end</span>: <span class="number">3</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>先是宣告新變數</li><li>隨後建立<code>passByValue()</code> 函式</li><li>呼叫<code>passByValue(num)</code> 複製變數num的值，3傳入<code>passByValue(func_num)</code>。<ul><li>一開始 值會是3</li><li>遇到<code>func_num=5;</code> =&gt; 將值改為 5</li></ul></li><li>但因為出去了函式範圍(scope)，最終的值 <code>num end:3</code></li></ul><h3 id="pass-by-refrence"><a href="#pass-by-refrence" class="headerlink" title="pass by refrence"></a>pass by refrence</h3><p>範例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x=&#123;<span class="attr">value</span>:<span class="number">10</span>&#125;;</span><br><span class="line"><span class="keyword">let</span> y=x;</span><br><span class="line"></span><br><span class="line">x.<span class="property">value</span>=<span class="number">20</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">//&#123;value:20&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(y); <span class="comment">//&#123;value:20&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( x === y );  <span class="comment">//true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="拆解說明一下"><a href="#拆解說明一下" class="headerlink" title="拆解說明一下"></a>拆解說明一下</h3><ul><li>當宣告一個物件</li><li>JavaScript 會在記憶體的某處建立起一個物件 (圖右側)，然後再將這個 <code>x</code>變數指向新生成的物件</li></ul><p><img src="https://i.imgur.com/LPwkZAg.png" alt=""></p><ul><li>接著，當我們宣告了第二個變數 y ，並且透過 = 將y 指向 x 的位置。</li><li>接著當我們更新了 x.value 的內容後， y.value 的內容也被更新了。</li></ul><p><img src="https://i.imgur.com/vFUhP6X.png" alt=""></p><p>範例2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1=&#123;<span class="attr">item</span>:<span class="string">&quot;unchanged&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;obj1 start:&quot;</span>,obj1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">passByReference</span>(<span class="params">ref</span>)&#123;</span><br><span class="line">  ref.<span class="property">item</span>= <span class="string">&quot;changed&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">passByReference</span>(obj1);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;obj end&quot;</span>, obj1);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="結果"><a href="#結果" class="headerlink" title="結果"></a>結果</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">obj1 <span class="attr">start</span>:&#123;<span class="attr">item</span>: <span class="string">&quot;unchanged&quot;</span>&#125;</span><br><span class="line">obj1 <span class="attr">end</span>:&#123;<span class="attr">item</span>:<span class="string">&quot;changed&quot;</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>當執行passByReference(obj1) 。想像他是個地址(0x0016)，進入函式中將地址複製，傳入。<ul><li>此時他的value 是個地址(0x0016)</li></ul></li><li>進入函式，遇到<code>ref.item</code><ul><li>de-reference ，進入原本的記憶體位置，找到item，並改變他的值</li></ul></li></ul><p><img src="https://i.imgur.com/3Ytn7bk.png" alt=""></p><h4 id="在不一般情況下，基本型別是-pass-by-value，而物件型別是-pass-by-reference的方式，但總有例外的時候。"><a href="#在不一般情況下，基本型別是-pass-by-value，而物件型別是-pass-by-reference的方式，但總有例外的時候。" class="headerlink" title="在不一般情況下，基本型別是 pass by value，而物件型別是 pass by reference的方式，但總有例外的時候。"></a>在不一般情況下，基本型別是 pass by value，而物件型別是 pass by reference的方式，但總有例外的時候。</h4><h3 id="pass-by-sharing"><a href="#pass-by-sharing" class="headerlink" title="pass by  sharing"></a>pass by  sharing</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1=&#123;<span class="attr">item</span>:<span class="string">&quot;unchanged&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;obj1 start:&quot;</span>,obj1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">passBySharing</span>(<span class="params">ref</span>)&#123;</span><br><span class="line">  ref=&#123; <span class="attr">item</span>: <span class="string">&quot;changed&quot;</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">passBySharing</span>(obj1);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;obj end&quot;</span>, obj1);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">obj1 <span class="attr">start</span>:&#123;<span class="attr">item</span>: <span class="string">&quot;unchanged&quot;</span>&#125;</span><br><span class="line">obj1 <span class="attr">end</span>:&#123;<span class="attr">item</span>:<span class="string">&quot;unchanged&quot;</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>傳入之前start 沒有改變</li><li>呼叫函式，並進入<code>passBySharing()</code>，還是複製地址，傳入</li><li>遇到<code>ref=&#123; item: &quot;changed&quot;&#125;;</code>，會直接覆蓋地址(有點類似pass by value)<ul><li>這並不是直接更改物件特性</li></ul></li></ul><p><img src="https://i.imgur.com/Kst3565.png" alt=""></p><h2 id="最後，來說說-JavaScript-屬於？"><a href="#最後，來說說-JavaScript-屬於？" class="headerlink" title="最後，來說說 JavaScript 屬於？"></a>最後，來說說 JavaScript 屬於？</h2><p>看了多篇文章，實在也是有點混亂，該認為三種形式都有呢？還是就是Pass by sharing、Pass by reference呢？ 那例外情形又該如何解釋？</p><p>所以這邊的結尾，直接引用Kuro、Huli老師文章的資訊，供給大家參考。</p><p>從Kuro Hsu 的<a href="https://ithelp.ithome.com.tw/articles/10191057">文章</a>、<a href="https://www.tenlong.com.tw/products/9789864344130">書</a><br>提及認為 JavaScript 應該更屬於 Pass by sharing 的形式。</p><ul><li>JavaScript 不屬於單純的傳值或傳址。</li></ul><p>參考 ECMA-262-3 in detail. Chapter 8. Evaluation strategy</p><blockquote><p>Regardless of usage concept of reference in this case, this strategy should not be confused with the “call by reference” discussed above. The value of the argument is not a direct alias, but the copy of the address.<br>由於在 JavaScript 的物件類型是可變的 (mutable)，當物件更新時，會影響到所有引用這個物件的變數與其副本，修改時會變動到原本的參考，但當賦與新值時，會產生新的實體參考。</p></blockquote><p>另外在 Huli 的文章中：</p><blockquote><p>依據細分程度的不同，下面幾句話都是正確的：<br>JavaScript 裡面只有 pass by value<br>JavaScript 的 primitive type 是 pass by value，object 是 pass by sharing</p></blockquote><hr><h2 id="最終來個綜合練習："><a href="#最終來個綜合練習：" class="headerlink" title="最終來個綜合練習："></a>最終來個綜合練習：</h2><p>相信在最後的這個練習，可以更清楚，pass by value，pass by reference，pass by sharing</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">changeStuff</span>(<span class="params">num,obj,obj2</span>)&#123;</span><br><span class="line">  num=num*<span class="number">10</span>;</span><br><span class="line">  obj.<span class="property">item</span>=<span class="string">&quot;changed&quot;</span>;</span><br><span class="line">  obj=&#123;<span class="attr">item</span>:<span class="string">&quot;changed&quot;</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> num=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> obj=&#123;<span class="attr">item</span>: <span class="string">&quot;unchanged&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2= &#123;<span class="attr">item</span>: <span class="string">&quot;unchanged&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">changeStuff</span>(num, obj, obj2);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">item</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">item</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console=&gt; 10 &quot;changed&quot; &quot;unchanged&quot;</span><br></pre></td></tr></table></figure><p>參考資料：<br><a href="https://medium.com/@mengchiang000/js%E5%9F%BA%E6%9C%AC%E8%A7%80%E5%BF%B5-call-by-value-%E9%82%84%E6%98%AFreference-%E5%8F%88%E6%88%96%E6%98%AF-sharing-22a87ca478fc">JS基本觀念：call by value 還是reference 又或是 sharing?</a><br><a href="https://ithelp.ithome.com.tw/articles/10191057">重新認識 JavaScript: Day 05 JavaScript 是「傳值」或「傳址」？</a><br><a href="https://www.youtube.com/watch?v=1YFss_4B_o4&t=302s">Tech Talk: Pass By Sharing with Javascript</a><br><a href="https://blog.techbridge.cc/2018/06/23/javascript-call-by-value-or-reference/">深入探討 JavaScript 中的參數傳遞：call by value 還是 reference？</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>演算法入門 - Sorting-Algorithms</title>
      <link href="/2021/10/08/Sorting-Algorithms/"/>
      <url>/2021/10/08/Sorting-Algorithms/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/glzKE9I.png" alt=""></p><p>延續 Wilson Ren<a href="https://www.udemy.com/course/algorithm-data-structure/?course_id=3819536&fbclid=IwAR3ugnEJMsniBCvoMHthf31EqEQeG9hCL3BQb2gWS7eAFZ4lcixmWOiwNAo">課程</a>來認識常見的排列方法！</p><h2 id="排列的演算法介紹"><a href="#排列的演算法介紹" class="headerlink" title="排列的演算法介紹"></a>排列的演算法介紹</h2><p><img src="https://i.imgur.com/zeRjPef.png" alt=""></p><ul><li>在JS中，就有內建 <code>array.sort()</code><ul><li>同樣在其他程式語言，都會有內建的 sorting function</li><li>但還是需要知道他們是如何運作</li></ul></li><li>總共有 6 種 sorting</li><li>此篇文章會以前面兩種為主</li></ul><h2 id="Bubble-Sort"><a href="#Bubble-Sort" class="headerlink" title="Bubble Sort"></a>Bubble Sort</h2><ul><li>冒泡排序</li><li>會比較相鄰的元素，如果順序不對會互換element</li><li>是相當簡單的演算法，在現實世界很少拿來使用，最常用在教學</li><li>而像在python、java 他們內建的排序演算法，都不是用冒泡排序，多是用 quicksort,merge sort（比較複雜、但有效率）<h3 id="範例說明"><a href="#範例說明" class="headerlink" title="範例說明"></a>範例說明</h3><img src="https://i.imgur.com/pDdBK9i.png" alt=""></li><li>比較array的最後兩個數字 =&gt; 發現順序不對就對調<br><img src="https://i.imgur.com/ElpC2qh.png" alt=""></li><li>對調之後，再往下兩個元素<ul><li>發現順序正確，不需更動<br><img src="https://i.imgur.com/mQuFUvU.png" alt=""></li></ul></li><li>不更動之後，再往下兩個<br><img src="https://i.imgur.com/Qk1T9c3.png" alt=""><br>以此類推…</li><li>小結：將找到的最小值，推到最左邊</li></ul><h3 id="要如何做-Bubble-Sort"><a href="#要如何做-Bubble-Sort" class="headerlink" title="要如何做 Bubble Sort"></a>要如何做 Bubble Sort</h3><ul><li><p>先從一個陣列中2個數值比較開始思考</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for j from A.length-1 to 1;</span><br><span class="line">   if A[j] &lt; A[j-i] ;</span><br><span class="line">   swap A[j] and A[j-i]</span><br></pre></td></tr></table></figure></li><li><p>虛擬碼<br><img src="https://i.imgur.com/2VFPI3E.png" alt=""></p></li><li><p>i =&gt; sorted elements</p></li><li><p>j =&gt; adjacent elements(j是相對i而來)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">bubbleSort</span>(<span class="params">arr</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;arr.<span class="property">length</span>-<span class="number">2</span>;i++)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> j=arr.<span class="property">length</span>-<span class="number">1</span>;j&gt;=i+<span class="number">1</span>;j--)&#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[j]&lt;arr[j-<span class="number">1</span>])&#123;</span><br><span class="line">          <span class="comment">//swap arr[j] and arr[j-1]</span></span><br><span class="line">          <span class="keyword">let</span> temp=arr[j];</span><br><span class="line">          arr[j] = arr[j-<span class="number">1</span>];</span><br><span class="line">          arr[j-<span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">bubbleSort</span>([<span class="number">4</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">7</span>]);</span><br></pre></td></tr></table></figure></li><li><p>加入隨機的數字，組成新的陣列</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">bubbleSort</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> step = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= arr.<span class="property">length</span> - <span class="number">2</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = arr.<span class="property">length</span> - <span class="number">1</span>; j &gt;= i + <span class="number">1</span>; j--) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[j] &lt; arr[j - <span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="comment">// swap arr[j] and arr[j - 1]</span></span><br><span class="line">        <span class="keyword">let</span> temp = arr[j];</span><br><span class="line">        arr[j] = arr[j - <span class="number">1</span>];</span><br><span class="line">        arr[j - <span class="number">1</span>] = temp;</span><br><span class="line">        step++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;It takes &quot;</span> + step + <span class="string">&quot; steps to complete.&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> test = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">  test.<span class="title function_">push</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">100</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">bubbleSort</span>(test);</span><br></pre></td></tr></table></figure><h2 id="Big-O-of-Bubble-Sort"><a href="#Big-O-of-Bubble-Sort" class="headerlink" title="Big O of Bubble Sort"></a>Big O of Bubble Sort</h2><p><img src="https://i.imgur.com/NSg6FSC.png" alt=""></p></li><li><p>最糟情況下： 由大到小，要排成 由小到大 =&gt; 他交換的次數會是 (n-1)+(n-2)+(n-3)+…+(n-n)次</p></li><li><p>最好的情況： 本身的arr就接近 小到大</p><ul><li>優化語法</li><li>發現沒有任何elements被交換，就可以停止迴圈<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">bubbleSort</span>(<span class="params">arr</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;arr.<span class="property">length</span>-<span class="number">2</span>;i++)&#123;</span><br><span class="line">      <span class="keyword">let</span> swapping=<span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> j=arr.<span class="property">length</span>-<span class="number">1</span>;j&gt;=i+<span class="number">1</span>;j--)&#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[j]&lt;arr[j-<span class="number">1</span>])&#123;</span><br><span class="line">          <span class="comment">//swap arr[j] and arr[j-1]</span></span><br><span class="line">          <span class="keyword">let</span> temp=arr[j];</span><br><span class="line">          arr[j] = arr[j-<span class="number">1</span>];</span><br><span class="line">          arr[j-<span class="number">1</span>] = temp;</span><br><span class="line">          swapping=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (swapping==<span class="literal">false</span>)&#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>平均情況還是用到 nested for loop</p><ul><li>O(n^2)</li></ul></li></ul><h2 id="Insertion-Sort"><a href="#Insertion-Sort" class="headerlink" title="Insertion Sort"></a>Insertion Sort</h2><p><img src="https://i.imgur.com/NwAm9cW.png" alt=""></p><ul><li>效率比 bubble sort 好一些</li><li>理論上， 都是 O(n^2)</li><li>不斷做插入的動作<h3 id="範例說明-1"><a href="#範例說明-1" class="headerlink" title="範例說明"></a>範例說明</h3><img src="https://i.imgur.com/HtfgFYG.png" alt=""></li><li>先認為這條arr長度是1</li><li>從陣列最前面開始，要將1插入4這個arr上</li></ul><p><img src="https://i.imgur.com/CrYGinm.png" alt=""></p><ul><li><p>數字2，要和左邊的數字作比較<br><img src="https://i.imgur.com/lb7mYhc.png" alt=""></p></li><li><p>數字3去比較<br><img src="https://i.imgur.com/gqnhQYA.png" alt=""></p></li></ul><h3 id="虛擬碼"><a href="#虛擬碼" class="headerlink" title="虛擬碼"></a>虛擬碼</h3><p><img src="https://i.imgur.com/lNSbpjL.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">index 0,1,2,3,4</span><br><span class="line">value 1,2,3,4,0</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>檢查這條arr的 index=1</li><li>設定<code>key=A[j]</code>，並將key插入 sorted sequence <ul><li>j 的前一格為 i</li></ul></li><li>確認 i 有沒有大於key =&gt; 也就是對於key而言，要不斷地和它左邊的值比較<ul><li>如果左邊的值比key大，就要讓他們互換</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">index 0,1,2,3,4</span><br><span class="line">value 1,2,3,4 (i),0 (j key)</span><br><span class="line"></span><br><span class="line">while i&gt;0 &amp;&amp; A[i] &gt; key</span><br><span class="line">  A[i+1] = A[i]</span><br><span class="line">  i -= 1</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>語法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> unsorted = [<span class="number">14</span>, -<span class="number">4</span>, <span class="number">17</span>, <span class="number">6</span>, <span class="number">22</span>, <span class="number">1</span>, -<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="title function_">insertionSort</span>(unsorted);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">insertionSort</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= arr.<span class="property">length</span> - <span class="number">1</span>; j++) &#123;</span><br><span class="line">    <span class="keyword">let</span> key = arr[j];</span><br><span class="line">    i = j - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &gt;= <span class="number">0</span> &amp;&amp; arr[i] &gt; key) &#123;</span><br><span class="line">      arr[i + <span class="number">1</span>] = arr[i];</span><br><span class="line">      i -= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    arr[i + <span class="number">1</span>] = key;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/E8xWtkL.png" alt=""></p><h2 id="Big-O"><a href="#Big-O" class="headerlink" title="Big O"></a>Big O</h2><p><img src="https://i.imgur.com/OVF4VRl.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>演算法入門</title>
      <link href="/2021/10/02/Algorithm/"/>
      <url>/2021/10/02/Algorithm/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/LHDcmBI.png" alt=""></p><p>常常看到 YouTube 演算法造成頻道經營的難度、或是facebook演算法而使得行銷曝光度的改變，但始終對演算法這個名詞沒有認識。<br>藉由 Wilson Ren<a href="https://www.udemy.com/course/algorithm-data-structure/?course_id=3819536&fbclid=IwAR3ugnEJMsniBCvoMHthf31EqEQeG9hCL3BQb2gWS7eAFZ4lcixmWOiwNAo">課程</a></p><h2 id="什麼是演算法？"><a href="#什麼是演算法？" class="headerlink" title="什麼是演算法？"></a>什麼是演算法？</h2><p>用以解決問題而可以逐步執行的步驟或程序。</p><h4 id="來看看現實生活中的演算法"><a href="#來看看現實生活中的演算法" class="headerlink" title="來看看現實生活中的演算法"></a>來看看現實生活中的演算法</h4><ul><li>Google Map 如何找到最短路徑</li><li>YouTube 推薦給你，認為你有興趣的影片</li><li>FB\IG 的加好友、追蹤推薦</li></ul><h2 id="演算法比較"><a href="#演算法比較" class="headerlink" title="演算法比較"></a>演算法比較</h2><p>有兩個演算法都可以完成目標任務，那我們會如何取決誰比較好？</p><ul><li>哪個演算法執行速度快？</li><li>所佔用電腦的記憶體資源少？<h3 id="時間"><a href="#時間" class="headerlink" title="時間?"></a>時間?</h3>首先，在計時演算法所耗時的部分：</li><li>幫演算法做計時，是不實際的事情<ul><li>同一台電腦在執行同一任務，所執行的時間會不同</li><li>不同電腦、CPU處理速度不一樣<h4 id="應該考慮，複雜度-Complexity"><a href="#應該考慮，複雜度-Complexity" class="headerlink" title="應該考慮，複雜度 Complexity"></a>應該考慮，複雜度 Complexity</h4></li></ul></li><li>複雜度分為兩種：時間複雜度、空間複雜度 （在本文多是討論時間複雜度）</li><li>要如何計算時間複雜度?<ul><li>加、減、乘、除、comparison ，這些每一個都可以被算作一個 operation</li><li>Complexity: 在所寫的演算法中，總共用到多少 operations(運算子)</li><li>使用 function 來顯示 Complexity 和 input size 的關係。</li></ul></li></ul><h2 id="Big-O-Notation"><a href="#Big-O-Notation" class="headerlink" title="Big O Notation"></a>Big O Notation</h2><ol><li>是一個工具，用來描述當你的值不斷擴大時，f(n)值會去哪裡</li><li>為最壞情況的打算。他會展示一個演算法複雜度的趨勢</li></ol><h3 id="計算-Big-O-的值"><a href="#計算-Big-O-的值" class="headerlink" title="計算 Big O 的值"></a>計算 Big O 的值</h3><ol><li>Constant doesn’t matter : 常數它並不重要<ul><li>f(n)=3n ：3為常數、n為變數</li></ul></li><li>Small Terms don’t matter<ul><li>fn= 3n^2 + 6n + 4 =&gt; 只需保留到fn= 3n^2</li></ul></li><li>Logarithm Base doesn’t matter<br><img src="https://i.imgur.com/dNM08rx.png" alt=""><h2 id="範例："><a href="#範例：" class="headerlink" title="範例："></a>範例：</h2></li><li>f(n)=3n<br>答案：O(n)</li><li>f(n)=13n^3 + 6n +7<br>答案：O(n^3)</li><li>f(n)=4log₂n<br>答案：O(logn)</li><li>f(n)=5<br>答案：O(1)</li></ol><h2 id="演算法常見-Big-O-的值"><a href="#演算法常見-Big-O-的值" class="headerlink" title="演算法常見 Big O 的值"></a>演算法常見 Big O 的值</h2><p>由好至差</p><ol><li>O(1)</li><li>O(logn)</li><li>O(n)</li><li>O(nlogn)</li><li>O(n^2)</li><li>O(n^3)</li></ol><ul><li>很多sorting值會是 O(nlogn)</li><li>盡量讓演算法可以達到3、4的值</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js 3 -  資料傳遞 emit</title>
      <link href="/2021/09/21/vue-emit/"/>
      <url>/2021/09/21/vue-emit/</url>
      
        <content type="html"><![CDATA[<p>圖示：<br><img src="https://i.imgur.com/PxIIobu.png" alt=""></p><h2 id="emit-實作練習"><a href="#emit-實作練習" class="headerlink" title="emit 實作練習"></a>emit 實作練習</h2><p><img src="https://i.imgur.com/7guYdVb.png" alt=""></p><ul><li>透過點擊add按鈕，觸發外層元件數值的改變<ul><li>先定義外層接收資料方式</li><li>定義內層的 $emit 觸發方法</li><li>使用 v-on 的方式觸發外層方法（口訣：前內、後外）</li></ul></li></ul><h3 id="外層元件"><a href="#外層元件" class="headerlink" title="外層元件"></a>外層元件</h3><ul><li>定義接收方法：當內層傳給你的時候，要做什麼事<ul><li><code>addNumber()</code>使num 增加1<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line">            <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">              <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">num</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">              &#125;;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">methods</span>: &#123;</span><br><span class="line">              <span class="title function_">addNumber</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;addnumber&#x27;</span>);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">num</span>++;</span><br><span class="line">              &#125;,</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="內層元件"><a href="#內層元件" class="headerlink" title="內層元件"></a>內層元件</h3><ul><li>在方法內建立函式，來觸發資料傳遞</li><li>並將<code>click</code>綁到內部元件的按鈕上。使點擊時候，會觸發$emit<ul><li>emit 名稱<code>emit-num</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">component</span>(<span class="string">&#x27;button-counter&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">methods</span>: &#123;</span><br><span class="line">              <span class="title function_">click</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;inner,click&#x27;</span>);</span><br><span class="line">                <span class="variable language_">this</span>.$emit(<span class="string">&#x27;emit-num&#x27;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">template</span>: <span class="string">`&lt;button type=&quot;button&quot; @click=&quot;click&quot;&gt;add&lt;/button&gt;`</span></span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><img src="https://i.imgur.com/W1s9mhp.png" alt=""></p><h2 id="建立內外層元件的溝通橋樑"><a href="#建立內外層元件的溝通橋樑" class="headerlink" title="建立內外層元件的溝通橋樑"></a>建立內外層元件的溝通橋樑</h2><ul><li>使用 v-on 的方式觸發外層方法（口訣：前內、後外）<ul><li>在 div內放入子元件<code>button-counter</code></li><li><code>:emit-num=&quot;addNumber&quot;</code></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">          &#123;&#123; num &#125;&#125;</span><br><span class="line">    &lt;button-counter v-<span class="attr">on</span>:emit-num=<span class="string">&quot;addNumber&quot;</span>&gt;&lt;/button-counter&gt;</span><br><span class="line">     &lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="練習二，資料接收"><a href="#練習二，資料接收" class="headerlink" title="練習二，資料接收"></a>練習二，資料接收</h2><h3 id="外層元件-1"><a href="#外層元件-1" class="headerlink" title="外層元件"></a>外層元件</h3><ul><li>接收方法為 <code>getData</code> 接收 text<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line">            <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">              <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">text</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">              &#125;;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">methods</span>: &#123;</span><br><span class="line">           </span><br><span class="line">              <span class="title function_">getData</span>(<span class="params">value</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;getData&#x27;</span>, text);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">text</span> = value;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="內層元件-1"><a href="#內層元件-1" class="headerlink" title="內層元件"></a>內層元件</h3><ul><li>建立觸發傳遞的方式<ul><li>將內層元件<code>text: &#39;內部資料&#39;</code> 傳遞到外層<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">component</span>(<span class="string">&#x27;button-text&#x27;</span>, &#123;</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;內部資料&#x27;</span>,</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">      <span class="title function_">emitText</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;emit-text&#x27;</span>, <span class="variable language_">this</span>.<span class="property">text</span>)</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">     <span class="attr">template</span>: <span class="string">`&lt;button type=&quot;button&quot; @click=&quot;emitText&quot;&gt;emit data&lt;/button&gt;`</span></span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><h3 id="建立內外橋樑"><a href="#建立內外橋樑" class="headerlink" title="建立內外橋樑"></a>建立內外橋樑</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;h3&gt;傳遞資料狀態&lt;/h3&gt;</span><br><span class="line"> 內部傳來的文字：&#123;&#123; text &#125;&#125;&lt;br&gt;</span><br><span class="line"> <span class="language-xml"><span class="tag">&lt;<span class="name">button-text</span> @<span class="attr">emit-text</span>=<span class="string">&quot;getData&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button-text</span>&gt;</span></span></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/avhMirS.png" alt=""></li></ul></li></ul><h2 id="emit-命名"><a href="#emit-命名" class="headerlink" title="emit 命名"></a>emit 命名</h2><p>與 props 命名一樣需要注意：</p><ul><li>在內層若以駝峰命名 <code>emitText</code><ul><li>也可以一開始內層就是用<code>-</code> 來命名即可，如<code>emit-text</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">emitText</span>(<span class="params"></span>) &#123;</span><br><span class="line">       <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;emitText&#x27;</span>, <span class="variable language_">this</span>.<span class="property">text</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>到了要綁定的 template 上，<code>emit-text</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button-text @emit-text=<span class="string">&quot;getData&quot;</span>&gt;&lt;/button-text&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js 3 -  資料傳遞 props</title>
      <link href="/2021/09/21/vue-props/"/>
      <url>/2021/09/21/vue-props/</url>
      
        <content type="html"><![CDATA[<p>因為Vue每個元件都是各自獨立，所以我們無法在各自元件去調整資料，而直接修改另一個元件的資料。<br>所以，要使元件之間可以相互溝通，就需要使用資料傳遞方式。<br>在傳遞方式：</p><ul><li>外層傳遞內層 : props</li><li>內層向外傳遞 : emit<br>當外層元件，要將資料往內層元件丟時，此過程就是使用props。</li></ul><p><img src="https://i.imgur.com/FTbHDPk.png" alt=""></p><h2 id="傳遞資料的方式："><a href="#傳遞資料的方式：" class="headerlink" title="傳遞資料的方式："></a>傳遞資料的方式：</h2><h3 id="靜態資料傳入"><a href="#靜態資料傳入" class="headerlink" title="靜態資料傳入"></a>靜態資料傳入</h3><ul><li>預期將外層傳入一個url的變數，傳進給內層使用<ul><li>photo為內部元件，在template 我希望能夠取得外層傳入的圖片(urlimg)</li><li>故在 props 以此命名，並將它綁到 template<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">component</span>(<span class="string">&#x27;photo&#x27;</span>, &#123;</span><br><span class="line">       <span class="attr">props</span>: [<span class="string">&#x27;url&#x27;</span>],</span><br><span class="line">       <span class="attr">template</span>: <span class="string">`&lt;img :src=&quot;url&quot; class=&quot;img-thumbnail&quot; alt&gt;`</span></span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure></li></ul></li><li>將上方的元件資料，加到外層元件：像是加入html屬性一樣<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;photo</span><br><span class="line">    url=<span class="string">&quot;https://images.unsplash.com/photo-1605784401368-5af1d9d6c4dc?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=600&amp;q=80&quot;</span>&gt;</span><br><span class="line">&lt;/photo&gt;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/f079ziY.png" alt=""></p><h3 id="動態資源"><a href="#動態資源" class="headerlink" title="動態資源"></a>動態資源</h3><ul><li>使用 <code>v-bind</code>，綁定內部元件的props ，使資料可以跟外層元件連動</li><li>記得使用口訣： 前內、後外 =&gt;前面就是props內的名稱，後面就是外層元件的名稱<br><img src="https://i.imgur.com/BMVZtkn.png" alt=""><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;h3&gt;動態資源&lt;/h3&gt;</span><br><span class="line">&lt;p&gt;技巧：前內、後外&lt;/p&gt;</span><br><span class="line">&lt;photo v-bind:urlimg=&quot;imgUrl&quot;&gt;&lt;/photo&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="資料傳遞為-單向數據流"><a href="#資料傳遞為-單向數據流" class="headerlink" title="資料傳遞為 單向數據流"></a>資料傳遞為 單向數據流</h2><ul><li>外部所定義的資料，當往內層傳遞，是單向性</li><li>不能試圖使用v-model或各種方式，來改變props傳入的內容<ul><li>以下範例：在子元件 <code>photo2</code> 放入 <code>input</code>綁定 <code>v-model</code></li><li>當嘗試在輸入框修改網址，會出現錯誤</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//外層元件綁定 url</span></span><br><span class="line">&lt;photo2 :url=<span class="string">&quot;imgUrl&quot;</span>&gt;&lt;/photo2&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">imgUrl</span>: <span class="string">&#x27;https://images.unsplash.com/photo-1605784401368-5af1d9d6c4dc?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=600&amp;q=80&#x27;</span>,</span><br><span class="line">         &#125;;</span><br><span class="line">     &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"> app.<span class="title function_">component</span>(<span class="string">&#x27;photo2&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">props</span>: [<span class="string">&#x27;url&#x27;</span>],</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;img :src=&quot;url&quot; class=&quot;img-thumbnail&quot; alt&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">    &lt;input type=&quot;text&quot; v-model=&quot;url&quot;&gt; &#123;&#123; url &#125;&#125;`</span></span><br><span class="line">     &#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/OmmIxpi.png" alt=""></p><p><img src="https://i.imgur.com/2BqCNTp.png" alt=""></p><h2 id="在內部元件，要為props來命名"><a href="#在內部元件，要為props來命名" class="headerlink" title="在內部元件，要為props來命名"></a>在內部元件，要為props來命名</h2><p>在命名上有些要注意的地方</p><ul><li>首字母大寫: PostData、SetItems</li><li>駝峰命名法: postData、setItems<br>要注意：在 HTML 中使用時必須使用 kebab-case (短橫線分隔)且應該為小寫。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"> <span class="language-xml"><span class="tag">&lt;<span class="name">photo3</span> <span class="attr">:super-url</span>=<span class="string">&quot;imgUrl&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">photo3</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;photo3&quot;</span>, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">props</span>: [<span class="string">&quot;superUrl&quot;</span>],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">template</span>: <span class="string">`&lt;img :src=&quot;superUrl&quot; class=&quot;img-thumbnail alt &gt;&quot;`</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/57P1JDW.png" alt=""></p><h2 id="定義-Props-型別驗證"><a href="#定義-Props-型別驗證" class="headerlink" title="定義 Props 型別驗證"></a>定義 Props 型別驗證</h2><ul><li>使用型別驗證，會改用大括號，裡面放入props名稱，並用物件形式加入設定的內容<ul><li><code>props:&#123;  propC: &#123;  type: String,  required: true,  &#125;&#125;</code></li></ul></li><li>其中，可以針對該props 來設定：<ul><li><code>type</code>型別 ： 可以是 String、Number、Boolean、Array、Object、Date、Function、Symbol</li><li><code>default</code> ：如果該 prop 沒有接收到傳入的值，就會使用 default 的值作為預設值。</li><li><code>required</code> ： 是否為必填項，如果設為 true 則表示必須要有值傳入，若沒有，就會出現錯誤提示。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">component</span>(<span class="string">&#x27;props-validation&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">props</span>: &#123;</span><br><span class="line">      <span class="comment">// 單一型別檢查，可接受的型別 String, Number, Object, Boolean, Function(在 Vue 中可使用 Function 驗證型別)</span></span><br><span class="line">      <span class="comment">// null, undefined 會直接通過驗證</span></span><br><span class="line">      <span class="attr">propA</span>: <span class="title class_">Function</span>,</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 多個型別檢查</span></span><br><span class="line">      <span class="attr">propB</span>: [<span class="title class_">String</span>, <span class="title class_">Number</span>],</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 必要值</span></span><br><span class="line">      <span class="attr">propC</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">        <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 預設值</span></span><br><span class="line">      <span class="attr">propD</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">Number</span>,</span><br><span class="line">        <span class="attr">default</span>: <span class="number">300</span></span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 自訂函式</span></span><br><span class="line">      <span class="attr">propE</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="title class_">Object</span>,</span><br><span class="line">        <span class="title function_">default</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">money</span>: <span class="number">300</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 自訂驗證</span></span><br><span class="line">      <span class="attr">propF</span>: &#123;</span><br><span class="line">        <span class="title function_">validator</span>(<span class="params">value</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> value &gt; <span class="number">1000</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, </span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><a href="https://www.hexschool.com/courses/vue3.html">六角學院</a><br><a href="https://ithelp.ithome.com.tw/articles/10254050">[DAY12]跟 Vue.js 認識的30天 - Vue 模組資料傳遞(<code>props</code>)</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js 3 - v-on 修飾符</title>
      <link href="/2021/09/20/Vue-modify/"/>
      <url>/2021/09/20/Vue-modify/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/NBBY8vo.png" alt=""></p><p>修飾符有分為：<br>1.按件修飾符<br>2.滑鼠修飾符<br>3.事件修飾符</p><p><a href="https://codepen.io/Eva-go/pen/RwgMXGN">codepen</a></p><h2 id="按鍵修飾符"><a href="#按鍵修飾符" class="headerlink" title="按鍵修飾符"></a>按鍵修飾符</h2><h3 id="1-1-別名修飾"><a href="#1-1-別名修飾" class="headerlink" title="1-1. 別名修飾"></a>1-1. 別名修飾</h3><ul><li>在特定按鍵，按下去的時候觸發<ul><li><code>.enter</code>, <code>.tab</code>, <code>.delete</code>, <code>.esc</code>, <code>.space</code>, <code>.up</code>, <code>.down</code>, <code>.left</code>, <code>.righ</code></li></ul></li><li>使用<code>.enter</code>只有再按下 enter 鍵才會觸發</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h6</span> <span class="attr">class</span>=<span class="string">&quot;mt-3&quot;</span>&gt;</span>別名修飾<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;trigger(&#x27;enter&#x27;)&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">   <span class="attr">trigger</span>: <span class="keyword">function</span>(<span class="params">name</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(name, <span class="string">&#x27;此事件被觸發了&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="1-2-相應按鍵時才觸發的監聽器"><a href="#1-2-相應按鍵時才觸發的監聽器" class="headerlink" title="1-2. 相應按鍵時才觸發的監聽器"></a>1-2. 相應按鍵時才觸發的監聽器</h3><ul><li>僅在按下相應按鍵時才觸發鼠標或鍵盤事件的監聽器</li><li><code>.ctrl</code>, <code>.alt</code>, <code>.shift</code>, <code>.meta</code></li><li>此範例為 <code>@keyup.shift.enter</code><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h6</span> <span class="attr">class</span>=<span class="string">&quot;mt-3&quot;</span>&gt;</span>相應按鍵時才觸發的監聽器<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup.shift.enter</span>=<span class="string">&quot;trigger(&#x27;shift + Enter&#x27;)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/gQjWYVy.png" alt=""></li></ul><ol start="2"><li>滑鼠修飾符<br><code>.left</code> 只當點擊鼠標左鍵時觸發。<br><code>.right</code> 只當點擊鼠標右鍵時觸發。<br><code>.middle</code> 只當點擊鼠標中鍵時觸發。</li></ol><ul><li>按下滑鼠右鍵<br><code>&lt;span class=&quot;box&quot; @click.right=&quot;trigger(&#39;right button&#39;)&quot;&gt;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>滑鼠修飾符<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span> <span class="attr">class</span>=<span class="string">&quot;mt-3&quot;</span>&gt;</span>滑鼠修飾符<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-3 bg-primary&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> @<span class="attr">click.right</span>=<span class="string">&quot;trigger(&#x27;right button&#x27;)&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/lddG6zT.png" alt=""></p><ol start="3"><li>事件修飾符</li></ol><ul><li>不會限定，是使用滑鼠還是鍵盤，是針對事件本身來進行修飾<br><code>.stop</code> - 調用 <code>event.stopPropagation()</code>。<br><code>.prevent</code> - 調用 <code>event.preventDefault()</code>。<br><code>.capture</code> - 添加事件偵聽器時使用 capture 模式。<br><code>.self</code> - 只當事件是從偵聽器綁定的元素本身觸發時才觸發回調。<br><code>.once</code> - 只觸發一次回調。</li><li>常用的是 <code>&lt;a&gt;</code>外部連結：移除預設事件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>事件修飾符<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span>.stop - 調用 event.stopPropagation()。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>.prevent - 調用 event.preventDefault()。<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span>.capture - 添加事件偵聽器時使用 capture 模式。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span>.self - 只當事件是從偵聽器綁定的元素本身觸發時才觸發回調。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">li</span>&gt;</span>.once - 只觸發一次回調。<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.google.com/&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;trigger(&#x27;prevent&#x27;)&quot;</span>&gt;</span>加入 Prevent<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>資料來源：<br>六角學院 - Vue 3.js</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>認識 Node.js</title>
      <link href="/2021/06/11/node-1/"/>
      <url>/2021/06/11/node-1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  之前在安裝套件時，就有先安裝過 Node.js 但從沒有特別去注意，它是應用在哪一塊、可以做什麼？就找了之前 udemy 全端課程，特意拉此部分來認識一下。</p><p>Node.js，讓我們可以將js檔案拿出瀏覽器，並直接和電腦硬件互動</p><ul><li>js: 進行網頁中的實作、函式、行為的建立。動畫的執行、下拉選單</li><li>Node.js: 允許我們用JS 直接與電腦的硬體互動。例如建立桌面應用程式</li><li>此外，還能在別人的電腦或server用Node.js來用行JS。例如：使用者登入 google 並輸入詢問，而你的瀏覽器會發出請求給google servers，而在這些servers 可以真的執行JS程式碼來執行發出的請求</li></ul><p><img src="https://i.imgur.com/49D3LbW.png" alt=""></p><h2 id="如何使用Node"><a href="#如何使用Node" class="headerlink" title="如何使用Node"></a>如何使用Node</h2><ol><li>首先，建立一個資料夾 <code>intro-to-node</code>，在資料夾內建立檔案<code>index.js</code></li><li>在該資料夾位置，運行<code>node index.js</code></li></ol><p><img src="https://i.imgur.com/fsgHKd8.png" alt=""></p><ul><li>印出檔案內的console<br><img src="https://i.imgur.com/bptXcfu.png" alt=""><br><img src="https://i.imgur.com/QQ1BXXI.png" alt=""></li></ul><h2 id="node-REPL"><a href="#node-REPL" class="headerlink" title="node REPL"></a>node REPL</h2><ul><li>Read Evaluation Print Loop</li><li>要進入：就是在終端機下node<br><img src="https://i.imgur.com/gomqsjQ.png" alt=""></li><li>和google 的console有點類似<br><img src="https://i.imgur.com/hOMWtn5.png" alt=""></li><li>取得些提示 con+ tab 會列出相關的可能性<br><img src="https://i.imgur.com/ijg4eJg.png" alt=""><br><img src="https://i.imgur.com/36ZOTYu.png" alt=""><h3 id="離開"><a href="#離開" class="headerlink" title="離開"></a>離開</h3></li><li><code>.exit</code></li><li>control+c 兩次</li><li><code>clear</code> 可以清除終端機的資料<h2 id="native-node-module"><a href="#native-node-module" class="headerlink" title="native node module"></a>native node module</h2></li><li>當安裝node，他就會包含許多建立好的模組<h3 id="使用node-js-進入電腦本地端的資料"><a href="#使用node-js-進入電腦本地端的資料" class="headerlink" title="使用node.js 進入電腦本地端的資料"></a>使用node.js 進入電腦本地端的資料</h3></li><li>nodejs.org/api 可以查到所有native node module，以及使用方式說明的文件</li><li>當要使用 modual<br><img src="https://i.imgur.com/eIDZjer.png" alt=""></li></ul><p><img src="https://i.imgur.com/DDWBxTn.png" alt=""></p><ul><li>警告 jshint esversion:6<br><img src="https://i.imgur.com/zdRpkQ4.png" alt=""></li></ul><h3 id="實際應用練習：複製檔案"><a href="#實際應用練習：複製檔案" class="headerlink" title="實際應用練習：複製檔案"></a>實際應用練習：複製檔案</h3><ul><li>在原本的資料夾內建立新的檔案<br><img src="https://i.imgur.com/ndvRf3A.png" alt=""><br><img src="https://i.imgur.com/24EYw4k.png" alt=""></li><li>在index.jd 輸入該語法<br><img src="https://i.imgur.com/0oGOWsV.png" alt=""></li><li>輸入後要運行 <code>node index.js</code><br><img src="https://i.imgur.com/hCsZbOF.png" alt=""><ul><li>運行之後會看到 <code>file2</code> 建立完成<br><img src="https://i.imgur.com/YR3MLWP.png" alt=""></li></ul></li><li>若是已經建立好的檔案</li><li>在檔案內輸入資訊<code>I am file2</code><br><img src="https://i.imgur.com/9ODoKY5.png" alt=""></li><li>執行 <code>copyFileSync</code><br><img src="https://i.imgur.com/Jae1spC.png" alt=""></li></ul><hr><h2 id="NPM-package-manager"><a href="#NPM-package-manager" class="headerlink" title="NPM package manager"></a>NPM package manager</h2><ul><li>即為 Node Package Manager 的縮寫，他是套件管理工具</li><li>在安裝node 的同時，就已經裝有 NPM<br><a href="https://tw.alphacamp.co/blog/npm-node-package-manager">NPM是什麼？了解Node Package Manager套件管理機制</a></li><li>npm init<br><img src="https://i.imgur.com/75YtfQR.png" alt=""></li><li>建立一個 package.json<br><img src="https://i.imgur.com/HdtTW6p.png" alt=""><br><img src="https://i.imgur.com/eHkTGKZ.png" alt=""></li></ul><h2 id="如何使用真實npm"><a href="#如何使用真實npm" class="headerlink" title="如何使用真實npm"></a>如何使用真實npm</h2><p><img src="https://i.imgur.com/OQ0764J.png" alt=""></p><ul><li>在要進行安裝的資料夾內，<code>npm install superheroes</code><br><img src="https://i.imgur.com/05qxzDJ.png" alt=""><br><img src="https://i.imgur.com/XOlgK2J.png" alt=""></li><li>參考文件的說明<br><img src="https://i.imgur.com/6xrdtZG.png" alt=""><ul><li>在js檔案中輸入<br><img src="https://i.imgur.com/87emqhz.png" alt=""></li><li>運行 <code>node index.js</code><br><img src="https://i.imgur.com/F9f6Qzj.png" alt=""></li></ul></li></ul><p><a href="https://blog.hiskio.com/what-is-node-js/">什麼是 Node.js？Node.js 完整介紹懶人包！</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js 3 -  多筆資料渲染 v-for</title>
      <link href="/2021/05/17/Vue-v-for/"/>
      <url>/2021/05/17/Vue-v-for/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/NBBY8vo.png" alt=""></p><h2 id="v-for-呈現多筆陣列"><a href="#v-for-呈現多筆陣列" class="headerlink" title="v-for 呈現多筆陣列"></a><code>v-for</code> 呈現多筆陣列</h2><ul><li><code>v-for= item in peopleArr</code> ， item 為 自定義名稱，後面(peopleArr)填入要迴圈的資料<ul><li>item是表示 peopleArr 陣列中每個單一物件</li></ul></li><li>key ：為帶入陣列的 key 值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h3</span>&gt;</span>v-for 與 key<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 人員介紹<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, key) in peopleArr&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; key &#125;&#125; - &#123;&#123; item.name&#125;&#125; / &#123;&#123; item.age &#125;&#125; 歲</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">     <span class="attr">peopleArr</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;Ken&#x27;</span>,</span><br><span class="line">          <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">          <span class="attr">vegan</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;Wong&#x27;</span>,</span><br><span class="line">          <span class="attr">page</span>: <span class="number">35</span>,</span><br><span class="line">          <span class="attr">vegan</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;Merry&#x27;</span>,</span><br><span class="line">          <span class="attr">age</span>: <span class="number">60</span>,</span><br><span class="line">          <span class="attr">vegan</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span><br><span class="line">          <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">          <span class="attr">vegan</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p><a href="https://codepen.io/Eva-go/pen/powVYmN">codepen</a><br><img src="https://i.imgur.com/TebHrmC.png" alt=""></p><h2 id="物件迴圈"><a href="#物件迴圈" class="headerlink" title="物件迴圈"></a>物件迴圈</h2><ul><li>每個item 就是每個物件的資料</li><li>key值為物件的屬性名稱</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h3</span>&gt;</span>v-for 與 key<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 人員介紹<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, key) in peopleObj&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; key &#125;&#125; - &#123;&#123; item.name&#125;&#125; / &#123;&#123; item.age &#125;&#125; 歲</span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">     <span class="attr">peopleObj</span>:&#123;</span><br><span class="line">        <span class="title class_">Salse</span>: &#123;</span><br><span class="line">           <span class="attr">name</span>: <span class="string">&#x27;Ken&#x27;</span>,</span><br><span class="line">          <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">          <span class="attr">vegan</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title class_">Manager</span>: &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;Wong&#x27;</span>,</span><br><span class="line">          <span class="attr">page</span>: <span class="number">35</span>,</span><br><span class="line">          <span class="attr">vegan</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title class_">HumanResource</span>: &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;Merry&#x27;</span>,</span><br><span class="line">          <span class="attr">age</span>: <span class="number">60</span>,</span><br><span class="line">          <span class="attr">vegan</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title class_">Crew</span>: &#123;</span><br><span class="line">           <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span><br><span class="line">          <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">          <span class="attr">vegan</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/tzjh6Ah.png" alt=""></p><h2 id="v-for-與-key"><a href="#v-for-與-key" class="headerlink" title="v-for 與 key"></a>v-for 與 key</h2><h3 id="v-for-可以使用-index-當作-key-嗎？"><a href="#v-for-可以使用-index-當作-key-嗎？" class="headerlink" title="v-for 可以使用 index 當作 key 嗎？"></a>v-for 可以使用 index 當作 key 嗎？</h3><p>以六角課程為範例說明</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>v-for 與 key <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>菜單<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, key) in products&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; key &#125;&#125; - &#123;&#123; item.name&#125;&#125; / &#123;&#123; item.price &#125;&#125; 元</span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">     <span class="attr">products</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;蛋餅&#x27;</span>,</span><br><span class="line">          <span class="attr">price</span>: <span class="number">30</span>,</span><br><span class="line">          <span class="attr">vegan</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;飯糰&#x27;</span>,</span><br><span class="line">          <span class="attr">price</span>: <span class="number">35</span>,</span><br><span class="line">          <span class="attr">vegan</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;小籠包&#x27;</span>,</span><br><span class="line">          <span class="attr">price</span>: <span class="number">60</span>,</span><br><span class="line">          <span class="attr">vegan</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;蘿蔔糕&#x27;</span>,</span><br><span class="line">          <span class="attr">price</span>: <span class="number">30</span>,</span><br><span class="line">          <span class="attr">vegan</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">  <span class="attr">method</span>:&#123;</span><br><span class="line">    <span class="attr">reverseArray</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">products</span>.<span class="title function_">reverse</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/GKjdBGd.png" alt=""></p><ul><li><p>反轉之後，並沒有跟著<br><img src="https://i.imgur.com/ALe8vst.png" alt=""></p></li><li><p>綁定key之後</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, key) in products&quot;</span> <span class="attr">v-bind:key</span>=<span class="string">&#x27;item.name&#x27;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/kbtUwy1.png" alt=""></p><h3 id="v-for-可以使用-index-當作-key-嗎？-1"><a href="#v-for-可以使用-index-當作-key-嗎？-1" class="headerlink" title="v-for 可以使用 index 當作 key 嗎？"></a><code>v-for</code> 可以使用 index 當作 key 嗎？</h3><p>索引是依照位置來判定，所以當資料的位置修改，索引值也會跟著變動，導致後續的渲染錯誤。<br>如果key是會變動的話，可能會導致資料的渲染錯誤</p><h3 id="如果後端提供的資料，沒有唯一索引要如何處理？"><a href="#如果後端提供的資料，沒有唯一索引要如何處理？" class="headerlink" title="如果後端提供的資料，沒有唯一索引要如何處理？"></a>如果後端提供的資料，沒有唯一索引要如何處理？</h3><p>  1.與後端溝通，為何前端要用到key的值<br>  2.拿到資料後，自己產生key，並放入該物件資料中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用v-for時，一定要用key </span><br><span class="line">使用v-for時，不要拿索引當作key</span><br><span class="line">請使用唯一的值當作key的值</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> v-for </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js 3 -  資料雙向綁定 v-model</title>
      <link href="/2021/05/17/Vue-v-model/"/>
      <url>/2021/05/17/Vue-v-model/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/NBBY8vo.png" alt=""></p><p>使用<code>v-model</code>來進行資料的「雙向」綁定， v-model 會根據不同的表單類別來更新元素的內容。<br>主要應用在表單類型進行綁定，常見的表單元素像是 <code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code> 以及 <code>&lt;select&gt;</code> 等。</p><h2 id="v-model-可以與-input-、textarea-綁定"><a href="#v-model-可以與-input-、textarea-綁定" class="headerlink" title="v-model 可以與 input 、textarea 綁定"></a>v-model 可以與 input 、textarea 綁定</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>input<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; name &#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;小明&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/fuPfWXo.png" alt=""></p><p><img src="https://i.imgur.com/Vyon4w6.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>textarea<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">          &#123;&#123; text &#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">text</span>: <span class="string">&quot;一段文字敘述&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/T7AMqwY.png" alt=""></p><p><img src="https://i.imgur.com/fxYLTcU.png" alt=""></p><h2 id="checkbox-單選框"><a href="#checkbox-單選框" class="headerlink" title="checkbox 單選框"></a>checkbox 單選框</h2><ol><li>checkbox與p段落連動</li></ol><ul><li>在input加入<code>v-model=&quot;checkAnswer&quot;</code></li><li>P段洛，放入三元運算：用來判斷當checkAnswer為true，顯示’吃飽了’;反之，’還沒’<ul><li>透過選單的勾選，來顯示 checkAnswer 是 true \ false</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">h3</span>&gt;</span>checkbox 單選框<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span>小明，你是吃飽沒？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; checkAnswer ? &#x27;吃飽了&#x27; : &#x27;還沒&#x27;&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">id</span>=<span class="string">&quot;check1&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkAnswer&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span> <span class="attr">for</span>=<span class="string">&quot;check1&quot;</span>&gt;</span>小明回覆<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">checkAnswer</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/wBR8ESD.png" alt=""></p><p><img src="https://i.imgur.com/cRDgctR.gif" alt=""></p><ol start="2"><li>checkbox 單選延伸</li></ol><ul><li>回傳單一的值，相對使用三元運算比較直觀</li><li><code>checkAnswer2</code> 是空字串，在 input 綁定後，設定false-value、true-value</li><li>將文字綁入：<code>true-value=&quot;吃飽了&quot; false-value=&quot;還沒&quot;</code>，就可以放入資料欄位上</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>checkbox 單選延伸<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>小明，你是吃飽沒？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; checkAnswer2 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkAnswer2&quot;</span> <span class="attr">true-value</span>=<span class="string">&quot;吃飽了&quot;</span> <span class="attr">false-value</span>=<span class="string">&quot;還沒&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">id</span>=<span class="string">&quot;check2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span> <span class="attr">for</span>=<span class="string">&quot;check2&quot;</span>&gt;</span>小明回覆<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">checkAnswer2</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/x4aeut8.png" alt=""></p><p><img src="https://i.imgur.com/qvyj7dH.png" alt=""></p><h2 id="checkbox-複選框"><a href="#checkbox-複選框" class="headerlink" title="checkbox 複選框"></a>checkbox 複選框</h2><ul><li>資料格式為陣列</li><li>覆選框的input裡面要有value</li><li>當綁定v-model，於畫面點選該項目時，會將 input 中的 value，放入的陣列中<ul><li>最後將資料渲染於畫面<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>checkbox 複選框<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>你還要吃什麼？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; checkAnswer3.join(&#x27;&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">id</span>=<span class="string">&quot;check3&quot;</span> <span class="attr">value</span>=<span class="string">&quot;蛋餅&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkAnswer3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span> <span class="attr">for</span>=<span class="string">&quot;check3&quot;</span>&gt;</span>蛋餅<span class="tag">&lt;/<span class="name">label</span>&gt;</span>         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">id</span>=<span class="string">&quot;check4&quot;</span> <span class="attr">value</span>=<span class="string">&quot;蘿蔔糕&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkAnswer3&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span> <span class="attr">for</span>=<span class="string">&quot;check4&quot;</span>&gt;</span>蘿蔔糕<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">id</span>=<span class="string">&quot;check5&quot;</span> <span class="attr">value</span>=<span class="string">&quot;豆漿&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkAnswer3&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span> <span class="attr">for</span>=<span class="string">&quot;check5&quot;</span>&gt;</span>豆漿<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">checkAnswer3</span>: [],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><img src="https://i.imgur.com/V6RUoEF.png" alt=""></p><h2 id="v-model-修飾符"><a href="#v-model-修飾符" class="headerlink" title="v-model 修飾符"></a>v-model 修飾符</h2><p>修飾符為畫面上，v-model的資料和實際data中的資料在綁定之間，額外處理的小方法。</p><ol><li>延遲 Lazy</li></ol><ul><li>輸入文字後，要點擊外面或是按下enter，才會出現</li><li>綁定到html的change事件：當完成輸入框的事件之後，才會綁定到資料集<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>修飾符<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;mt-3&quot;</span>&gt;</span>延遲 Lazy<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">  &#123;&#123; lazyMsg &#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;lazyMsg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/1Jp0XWl.png" alt=""></li></ul><h2 id="純數值-Number"><a href="#純數值-Number" class="headerlink" title="純數值 Number"></a>純數值 Number</h2><p>需要用戶輸入數值，可先將type改為number,並加入修飾符</p><ul><li><code>&lt;input type=&quot;number&quot;&gt;</code>:輸入框無法輸入文字，只能輸入數字，但型別依然是string</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;mt-3&quot;</span>&gt;</span>純數值 Number<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">  &#123;&#123; numberMsg &#125;&#125;&#123;&#123; typeof numberMsg &#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;numberMsg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/48WNFq2.png" alt=""></p><ul><li>要確保輸入的內容為純數字型別：要加修飾符</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;mt-3&quot;</span>&gt;</span>純數值 Number<span class="tag">&lt;/<span class="name">h4</span>&gt;</span> </span><br><span class="line">   &#123;&#123; numberMsg &#125;&#125;&#123;&#123; typeof numberMsg &#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">v-model.number</span>=<span class="string">&quot;numberMsg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ANESock.png" alt=""></p><h2 id="trim"><a href="#trim" class="headerlink" title="trim"></a>trim</h2><p>將資料內容的前後空白鍵，刪除</p><ul><li>應用於要輸入e-mail帳號，避免用戶不小心在前後加入空白，而造成資料錯誤<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;mt-3&quot;</span>&gt;</span>修剪 Trim<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">       這是一段&#123;&#123; trimMsg &#125;&#125;緊黏的文字</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;trimMsg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/SCJddsn.png" alt=""></li></ul><p>參考資料：<br><a href="https://book.vue.tw/CH1/1-4-directive.html">重新認識 Vue.js | Kuro Hsu</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js 3 - 綁定方式多變化</title>
      <link href="/2021/05/16/Vue-bind2/"/>
      <url>/2021/05/16/Vue-bind2/</url>
      
        <content type="html"><![CDATA[<h2 id="動態屬性綁定-注意大小寫"><a href="#動態屬性綁定-注意大小寫" class="headerlink" title="動態屬性綁定(注意大小寫)"></a>動態屬性綁定(注意大小寫)</h2><ul><li>宣告變數dynamic，將 dynamic 綁定於點擊事件上 <code>:click=&quot;dynamic = dynamic === &#39;disabled&#39; ? &#39;readonly&#39;:&#39;disabled&#39;&quot;</code><ul><li>如果變數結果是 disable 的話就會切換成 readonly，反之，就會切換為 disabled</li></ul></li><li>接著可以將值動態地加入 HTML 屬性上 <code>:[dynamic]</code><ul><li>綁定後，就會發現輸入框隨著切換，有不同效果<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>動態屬性綁定(注意大小寫)<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-on:click</span>=<span class="string">&quot;dynamic = dynamic === &#x27;disabled&#x27; ? &#x27;readonly&#x27;:&#x27;disabled&#x27;&quot;</span>&gt;</span>切換為 &#123;&#123; dynamic &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:</span>[<span class="attr">dynamic</span>] <span class="attr">:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JS</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">dynamic</span>: <span class="string">&#x27;disabled&#x27;</span>,</span><br><span class="line">      <span class="attr">breakfastShop</span>: &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;奇蹟早餐&#x27;</span>, </span><br><span class="line">        <span class="attr">imgUrl</span>: <span class="string">&#x27;https://images.unsplash.com/photo-1600182610361-4b4d664e07b9?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=200&amp;q=80&#x27;</span>,</span><br><span class="line">        <span class="attr">resizeImg</span>: <span class="string">&#x27;https://images.unsplash.com/photo-1600182610361-4b4d664e07b9?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;q=80&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><code>readony</code>:可以選擇輸入框，但無法輸入值<br><code>disabled</code>:無法點選輸入框<br><img src="https://i.imgur.com/GfAhQJk.png" alt=""></p><p><img src="https://i.imgur.com/YUf3XZk.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">再次補充說明：</span><br><span class="line">    1. dynamic = 【這邊是最前面的變數，用來存放後面回傳回來的值】</span><br><span class="line">    2. dynamic === &#x27;disabled&#x27; ? 【這邊就是中間判斷式的部分，判斷 dynamic 變數是否為 &#x27;disabled&#x27;】</span><br><span class="line">    3. &#x27;readonly&#x27;:&#x27;disabled&#x27; 【這邊就是最後面的值，會依照前方的判斷式來決定回傳 &#x27;readonly&#x27; 還是 &#x27;disabled&#x27;，如果判斷式結果為 True 則回傳 &#x27;readonly&#x27; ，反之回傳 &#x27;disabled&#x27;】</span><br></pre></td></tr></table></figure><h2 id="HTML-樣式綁定"><a href="#HTML-樣式綁定" class="headerlink" title="HTML 樣式綁定"></a>HTML 樣式綁定</h2><p>樣式綁定是時常使用到的效果，能透過此方式，使顏色改變、增加一點簡易動畫的效果。</p><h2 id="範例解說"><a href="#範例解說" class="headerlink" title="範例解說"></a>範例解說</h2><ul><li>替 box 增加旋轉效果</li><li>綁定class可以用陣列方式、或物件方式來添加，以下範例為物件方式<ul><li>物件key值對應 className，物件的值是對應 true\false(判斷式)</li><li>若className 有 <code>-</code> ， 注意要 “bg-danger”</li></ul></li><li>事件的綁定 <code>change()</code> 透過函式來切換 true\false<code>this[key] = !this[key];</code></li><li>切換是否旋轉、切換背景色 <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--bs-light);</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--bs-gray);</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">transition</span>: all .<span class="number">5s</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box</span><span class="selector-class">.rotate</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>)</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">h2</span>&gt;</span>切換 Class<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>物件寫法<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 物件key值對應 className，物件的值是對應 true\false --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; rotate: isTransform ,&#x27;bg-danger&#x27;:boxColor&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-outline-primary&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;change(&#x27;isTransform&#x27;)&quot;</span>&gt;</span>選轉物件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-outline-primary ms-1&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;change(&#x27;boxColor&#x27;)&quot;</span>&gt;</span>切換色彩<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">App</span> = &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">isTransform</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">boxColor</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="attr">change</span>: <span class="keyword">function</span> (<span class="params">key</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>[key] = !<span class="variable language_">this</span>[key];</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">addClass</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">arrayClass</span>.<span class="title function_">push</span>(...arr);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/KFqN9hz.png" alt=""></li></ul><p><img src="https://i.imgur.com/b9OCub3.gif" alt=""></p><h3 id="整合為一個物件"><a href="#整合為一個物件" class="headerlink" title="整合為一個物件"></a>整合為一個物件</h3><p>將上個範例的兩個class樣式，整合成一個物件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> <span class="attr">class</span>=<span class="string">&quot;mt-4&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>物件寫法 2<span class="tag">&lt;/<span class="name">h5</span>&gt;</span>     </span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&#x27;classObj&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">App</span> = &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">isTransform</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">boxColor</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">      <span class="attr">classObj</span>:&#123;</span><br><span class="line">        <span class="attr">rotata</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;bg-danger&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="attr">change</span>: <span class="keyword">function</span> (<span class="params">key</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>[key] = !<span class="variable language_">this</span>[key];</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">addClass</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">arrayClass</span>.<span class="title function_">push</span>(...arr);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/41AKFc8.png" alt=""></p><p><img src="https://i.imgur.com/StALtsi.png" alt=""></p><h2 id="綁定樣式，陣列寫法"><a href="#綁定樣式，陣列寫法" class="headerlink" title="綁定樣式，陣列寫法"></a>綁定樣式，陣列寫法</h2><ul><li>針對單一元素，加入多個class<ul><li>此方式就不用 true\false 的判斷動作，只要綁定在陣列之中的樣式，就會套入效果</li><li>像是範例，就是使按鈕背景色彩為紅色(‘btn-danger’)、無法點擊(‘disabled’)<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>陣列寫法<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;[&#x27;disabled&#x27;,&#x27;btn-danger&#x27;]&quot;</span>&gt;</span>請操作本元件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-outline-primary&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;addClass([&#x27;btn-primary&#x27;, &#x27;active&#x27;])&quot;</span>&gt;</span>為陣列加入</span><br><span class="line">             Class<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/RZFOrdK.png" alt=""></li></ul></li></ul><ul><li>另一種，製作陣列，並將陣列放入<ul><li>將arrayClass，綁定在標籤的class上</li><li>在點擊按鈕，綁定點擊事件，<code>addClass(arr)</code>，在該函式傳入參數，將陣列內容加入arrayClass，並套入綁定的標籤上</li><li>相對應的方法：<br><img src="https://i.imgur.com/VFfDXPY.png" alt=""></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>陣列寫法<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;arrayClass&quot;</span>  &gt;</span>請操作本元件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">&quot;btn btn-outline-primary&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-on:click</span>=<span class="string">&quot;addClass([&#x27;btn-primary&#x27;, &#x27;active&#x27;])&quot;</span>&gt;</span>為陣列加入 Class<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">App</span> = &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">       <span class="comment">// Array 操作</span></span><br><span class="line">      <span class="attr">arrayClass</span>: [<span class="string">&#x27;&#x27;</span>],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">   </span><br><span class="line">    <span class="title function_">addClass</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">arrayClass</span>.<span class="title function_">push</span>(...arr);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/PZd0sKO.png" alt=""></p><ul><li><code>btn-primary</code>:背景色為綠色<br><img src="https://i.imgur.com/S0zLJKb.png" alt=""></li></ul><h4 id="補充：混合寫法"><a href="#補充：混合寫法" class="headerlink" title="補充：混合寫法"></a>補充：混合寫法</h4><ul><li>將bootstrap的class放入，且加入arrayClass<ul><li><code>:class=&quot;[arrayClass,&#39;text-danger&#39;]</code>，也就是除了放入 arrayClass 這個變數之外，我們還可以放入新的class給予不同樣式<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>陣列寫法<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;[arrayClass,&#x27;text-danger&#x27;]&quot;</span>&gt;</span>請操作本元件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-outline-primary&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;addClass([&#x27;btn-primary&#x27;, &#x27;active&#x27;])&quot;</span>&gt;</span>為陣列加入</span><br><span class="line">              Class<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><p><img src="https://i.imgur.com/d3dqSTj.png" alt=""></p><h2 id="行內樣式style"><a href="#行內樣式style" class="headerlink" title="行內樣式style"></a>行內樣式style</h2><h4 id="要綁定style的時候"><a href="#要綁定style的時候" class="headerlink" title="要綁定style的時候"></a>要綁定style的時候</h4><ul><li>key會帶入style的屬性(注意要以駝峰式)，如background-color，要改為backgroundColor</li><li>值則是帶入style相對應的值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>行內樣式<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>綁定行內樣式<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;backgroundColor:&#x27;red&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="加入準備好的資料格式"><a href="#加入準備好的資料格式" class="headerlink" title="加入準備好的資料格式"></a>加入準備好的資料格式</h3><ul><li><p>將設定好的物件，裡面有包含數個樣式，直接綁定至style<br><img src="https://i.imgur.com/z93Jmam.png" alt=""></p></li><li><p>背景色彩，紅色，邊框5px<br><img src="https://i.imgur.com/lWYdxIi.png" alt=""></p></li></ul><h3 id="同時多個樣式"><a href="#同時多個樣式" class="headerlink" title="同時多個樣式"></a>同時多個樣式</h3><ul><li>以陣列裡面包多個物件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;[styleObject,styleObject2]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/11h8F7J.png" alt=""></li></ul><p><img src="https://i.imgur.com/62sDl0J.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js 3 - 事件綁定</title>
      <link href="/2021/05/16/Vue-v-on/"/>
      <url>/2021/05/16/Vue-v-on/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/NBBY8vo.png" alt=""></p><ul><li>建立add、minus兩個按鈕<ul><li>點選add增加數字、點選minus減少數字</li></ul></li><li>讓add按鈕綁定<code>addFn</code>函式：<code>v-on:click=&quot;addFn&quot;</code> <code>on</code> <code>click</code>事件，執行<code>addFn</code>函式</li><li>綁定後，在<code>methods</code>撰寫<code>addFn</code>函式內容，要取得 data 中的 num 才能進行運算 =&gt;<code>this.num++</code></li><li>同理，在minus的按鈕，函式內運算<code>this.num++</code>，並將點擊事件放入<code>button</code><ul><li>v-on:Event 事件綁定，有兩種撰寫方式<br><img src="https://i.imgur.com/IUUcznh.png" alt=""></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;addFn&quot;</span>&gt;</span>Add<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- v-on 改為@ --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;MinusFun&quot;</span>&gt;</span>Minus<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">       <span class="attr">num</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">addFn</span>(<span class="params"></span>) &#123;</span><br><span class="line">       <span class="comment">//num.value = num.value + 1;</span></span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">num</span> ++;</span><br><span class="line">    &#125;,</span><br><span class="line">     <span class="title class_">MinusFun</span>()&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">num</span>--;</span><br><span class="line">     &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p><a href="https://codepen.io/Eva-go/pen/bGRLXNW">codepen</a></p><h2 id="事件與class的綁定"><a href="#事件與class的綁定" class="headerlink" title="事件與class的綁定"></a>事件與class的綁定</h2><ul><li>於 box 綁定旋轉的效果 <code>:class=&quot;&#123; rotate: isTransform &#125;</code></li><li>在button綁定觸發旋轉的事件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">   <span class="attribute">margin</span>:<span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">transition</span>: all .<span class="number">5s</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box</span><span class="selector-class">.rotate</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>)</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h3</span>&gt;</span>觸發事件 與 縮寫*<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; rotate: isTransform &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-outline-primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeClass&quot;</span> &gt;</span>選轉物件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      </span><br><span class="line">       <span class="attr">isTransform</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">     <span class="title function_">changeClass</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">isTransform</span> =!<span class="variable language_">this</span>.<span class="property">isTransform</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">  </span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="帶入參數"><a href="#帶入參數" class="headerlink" title="帶入參數"></a>帶入參數</h2><ul><li>建立 <code>change()</code> 函式以帶入參數方式，來變化 isTransform 的 true\false<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>帶入參數*<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; rotate: isTransform &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-outline-primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;change(&#x27;isTransform&#x27;)&quot;</span>&gt;</span>選轉物件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      </span><br><span class="line">       <span class="attr">isTransform</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">     <span class="title function_">changeClass</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">isTransform</span> =!<span class="variable language_">this</span>.<span class="property">isTransform</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">change</span>(<span class="params">key</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>[key] = !<span class="variable language_">this</span>[key];</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">  </span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="動態物件方法"><a href="#動態物件方法" class="headerlink" title="動態物件方法 {}"></a>動態物件方法 {}</h2></li><li>在一個元素上，加入多個事件</li><li>注意：此方式無法傳入參數<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>動態物件方法 &#123;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 此方法無法傳入參數 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> @=<span class="string">&quot;&#123;</span></span></span><br><span class="line"><span class="string"><span class="tag">    mousedown:down,</span></span></span><br><span class="line"><span class="string"><span class="tag">    mouseup:up</span></span></span><br><span class="line"><span class="string"><span class="tag"> &#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      </span><br><span class="line">       <span class="attr">isTransform</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">     <span class="title function_">changeClass</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">isTransform</span> =!<span class="variable language_">this</span>.<span class="property">isTransform</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">change</span>(<span class="params">key</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>[key] = !<span class="variable language_">this</span>[key];</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">down</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;按下&quot;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">up</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;放開&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">  </span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/qO3AcxL.gif" alt=""></p><p><a href="https://codepen.io/Eva-go/pen/abwYwPa">codepen</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js 3 - 屬性綁定</title>
      <link href="/2021/05/16/Vue-bind/"/>
      <url>/2021/05/16/Vue-bind/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/NBBY8vo.png" alt=""></p><p>  屬性綁定可以輕鬆的將data中的資料，與HTML的標籤屬性綁定，這樣一來可以動態的變更資料。</p><h2 id="原本-HTML-的樣子"><a href="#原本-HTML-的樣子" class="headerlink" title="原本 HTML 的樣子"></a>原本 HTML 的樣子</h2><ul><li>img中原本有個圖片資料</li><li>v-bind是指令，<code>：</code>後接的是HTML的屬性</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>綁定屬性 v-bind<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; breakfastShop.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://images.unsplash.com/photo-1600182610361-4b4d664e07b9?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=200&amp;q=80&quot;</span> <span class="attr">class</span>=<span class="string">&quot;square-img&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JS</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">breakfastShop</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;奇蹟早餐&#x27;</span>,</span><br><span class="line">        <span class="attr">imgUrl</span>: <span class="string">&#x27;https://images.unsplash.com/photo-1600182610361-4b4d664e07b9?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=200&amp;q=80&#x27;</span>,</span><br><span class="line">        <span class="attr">resizeImg</span>: <span class="string">&#x27;https://images.unsplash.com/photo-1600182610361-4b4d664e07b9?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;q=80&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="修改-gt-綁定JS中-breakfastShop-物件資料內容"><a href="#修改-gt-綁定JS中-breakfastShop-物件資料內容" class="headerlink" title="修改 =&gt; 綁定JS中 breakfastShop 物件資料內容"></a>修改 =&gt; 綁定JS中 breakfastShop 物件資料內容</h3><p><img src="https://i.imgur.com/H3UzhrB.png" alt=""></p><ul><li>將原本<code>src</code> =&gt; <code>v-bind:src=&quot;breakfastShop.imgUrl&quot;</code><ul><li>此外title 屬性，也能照樣綁定喔！  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>綁定屬性 v-bind<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; breakfastShop.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;breakfastShop.imgUrl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;square-img&quot;</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;breakfastShop.name&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/Xhtez9s.png" alt=""></li></ul></li></ul><h3 id="縮寫形式"><a href="#縮寫形式" class="headerlink" title="縮寫形式"></a>縮寫形式</h3><ul><li>留下冒號<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>縮寫形式 <span class="tag">&lt;<span class="name">code</span>&gt;</span>:<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;breakfastShop.imgUrl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;square-img&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;breakfastShop.name&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="其他屬性的綁定"><a href="#其他屬性的綁定" class="headerlink" title="其他屬性的綁定"></a>其他屬性的綁定</h2><ul><li>當他是飽的狀態，就無法按下送出<ul><li>預設是false 所以可以送出表單</li><li>但當點擊狀態切換(isFull: true)，此時就會無法點擊送出按鈕</li></ul></li><li>由範例可得知，可以透過 true\false 的狀態切換，製造出不同互動效果<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>更多屬性綁定<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">         小明還想點餐：</span><br><span class="line">         <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;我要吃蘿蔔糕&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">:disabled</span>=<span class="string">&quot;isFull&quot;</span>&gt;</span>送出<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">         <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;change(&#x27;isFull&#x27;)&quot;</span>&gt;</span>狀態切換<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/GVQXr8f.png" alt=""></p><ul><li>預設是false，所以可以點擊送出<br><img src="https://i.imgur.com/4HmkD5f.png" alt=""></li></ul><p><img src="https://i.imgur.com/w91MEBD.png" alt=""></p><p>資料來源：<br>六角學院 - Vue.js 3 課程</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js 3 - 起手式</title>
      <link href="/2021/05/16/Vue-basic/"/>
      <url>/2021/05/16/Vue-basic/</url>
      
        <content type="html"><![CDATA[<p>今天要介紹的是 Vue.js3 的起手式，主要參考<a href="https://vuejs.org/v2/guide/#Getting-Started">官方文件</a>來學習</p><h3 id="載入方式"><a href="#載入方式" class="headerlink" title="載入方式"></a>載入方式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://unpkg.com/vue@next&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="引入之後，在index-html檔案"><a href="#引入之後，在index-html檔案" class="headerlink" title="引入之後，在index.html檔案"></a>引入之後，在<code>index.html</code>檔案</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//JS</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;I am Eva!&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>畫面就會出現相應的文字<br><img src="https://i.imgur.com/l7MiTCV.png" alt=""></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCSS- ClothesStore</title>
      <link href="/2021/03/05/scss-ClothesStore/"/>
      <url>/2021/03/05/scss-ClothesStore/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/v5qnxzN.png" alt=""></p><p><a href="https://eva813.github.io/Eva_portfolio/sass-ClothesStore/ClothesStore.html">成品</a></p><h2 id="scss-檔案的建立"><a href="#scss-檔案的建立" class="headerlink" title="scss 檔案的建立"></a>scss 檔案的建立</h2><p>所建立的各分檔，個別會負責不同的區塊，並透過<code>@import</code>放入主要的sass檔</p><ul><li>main.scss 引入其他分檔<br><img src="https://i.imgur.com/PLNNF5k.png" alt=""></li><li>abstracts<ul><li>/_variables.scss：設定常用的變數，如：顏色、字體大小</li><li>/_mixin.scss：設定某些區段中，重複用到的樣式，並於該區段要使用的時候引用</li></ul></li><li>base<ul><li>/_base.scss：為設定大框架，如html、body、container，等主幹的大小、字型的設定</li></ul></li><li>components:放置部分功能元件<ul><li>/_button.scss：按鈕的設定</li><li>/_heading.scss：標題</li><li>/_logo.scss</li><li>/_dropdown.scss</li></ul></li><li>layout （設計網頁版面配置(Layout)）<ul><li>/_header.scss</li><li>/_navigation.scss</li><li>/_products.scss</li><li>/_slidshow.scss</li><li>/_footer.scss</li></ul></li><li>pages 通常是用來放置其他分頁（網頁內會連結到其他相關分頁）</li><li>venders 放置外部套件</li></ul><p><img src="https://i.imgur.com/GmeHZ7w.png" alt=""></p><h3 id="1-基礎設置"><a href="#1-基礎設置" class="headerlink" title="(1)基礎設置"></a>(1)基礎設置</h3><h4 id="1-1-Grid-練習"><a href="#1-1-Grid-練習" class="headerlink" title="(1.1)Grid 練習"></a>(1.1)Grid 練習</h4><p><code>_base.scss</code></p><ul><li>總共要設置10欄</li><li>列的則是設置4區塊</li><li>並設置每個區塊都有1.6rem的gap<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>:<span class="built_in">minmax</span>(<span class="number">6rem</span>,<span class="number">1</span>fr) <span class="built_in">repeat</span>(<span class="number">8</span>,<span class="built_in">minmax</span>(min-content,<span class="number">16</span> rem))   <span class="built_in">minmax</span>(<span class="number">6rem</span>,<span class="number">1</span>fr);<span class="comment">//10欄</span></span><br><span class="line">    <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">4</span>,min-content);</span><br><span class="line">    <span class="attribute">grid-row</span>-<span class="attribute">gap</span>:<span class="number">1.6rem</span> ;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/QA3NLgt.png" alt=""></p><ul><li><code>minmax(min, max)</code><br><code>minmax(6rem,1fr)</code>:設定格線最小6rem，最大1fr<br>fr 單位就是為了格線布局而生，fraction，中文意思是分數，當使用在網格軌道上時，可以直接想像成 “我的這個空位要佔有總 fr 數量的幾等份”</li><li><code>repeat(8,minmax(min-content,16rem))</code>:重複8個，最小：min-content;最大16rem<ul><li>repeat() 重複網格線及間距<ul><li>max-content/min-content 最小內容尺寸/最大內容尺寸<ul><li>max-content：給予網格區域所需的最大尺寸空間，內容盡可能避免折行。</li><li>min-content：給予網格區域所需的最小尺寸空間，內容盡可能的折行，但不會溢出邊界。</li></ul></li></ul></li></ul></li></ul><p><a href="https://ithelp.ithome.com.tw/articles/10248418">[Day19] grid-template 屬性之 rows/columns</a><br><a href="https://www.youtube.com/watch?v=lZ2JX_6SGNI">Min &amp; Max Content Sizing in CSS Grid — 1/3 Flexibility</a><br><a href="http://csscoke.com/2013/10/17/css-layout-generator/">CSS Layout很難？用這招30秒就讓你輕鬆生出網頁版面！</a></p><hr><h4 id="1-2-常用變數"><a href="#1-2-常用變數" class="headerlink" title="(1.2)常用變數"></a>(1.2)常用變數</h4><ul><li><code>_variable.scss</code>map與function的搭配使用</li><li>設定不同的顏色，並設置函式，以利後續使用</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$colors</span>:(</span><br><span class="line">  primary:<span class="number">#333</span>,</span><br><span class="line">  secondary:<span class="number">#ffe</span>,</span><br><span class="line">  tertiary:<span class="number">#f2f0f1</span>,</span><br><span class="line">  quaternary:<span class="number">#f5b149</span></span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"><span class="comment">//創造函式</span></span><br><span class="line"><span class="comment">//函式名稱為color代入參數為$color-name，使用map代入物件，最為回傳的結果</span></span><br><span class="line"><span class="keyword">@function</span> <span class="attribute">color</span>(<span class="variable">$color-name</span>)&#123;</span><br><span class="line">  <span class="keyword">@return</span> map-get(<span class="variable">$map</span>: <span class="variable">$colors</span>, <span class="variable">$key</span>:<span class="variable">$color-name</span> )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$font-size</span>:(</span><br><span class="line">  <span class="attribute">xl</span>:<span class="number">3rem</span>,</span><br><span class="line">  <span class="attribute">lg</span>:<span class="number">2.5rem</span>,</span><br><span class="line">  <span class="attribute">md</span>:<span class="number">2rem</span>,</span><br><span class="line">  <span class="attribute">sm</span>:<span class="number">1.8rem</span>,</span><br><span class="line">  <span class="attribute">xs</span>:<span class="number">1.6rem</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">@function</span> size(<span class="variable">$size</span>)&#123;</span><br><span class="line">  <span class="keyword">@return</span> map-get(<span class="variable">$map</span>: <span class="variable">$font-size</span>, <span class="variable">$key</span>:<span class="variable">$size</span> )</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="2-layout-header-scss"><a href="#2-layout-header-scss" class="headerlink" title="(2)layout/_header.scss"></a>(2)<code>layout/_header.scss</code></h3><p>header的版面</p><ul><li><code>grid-column: 1/-1; (1/11) grid-row: 1/2;</code>表示所佔的區隔<br><img src="https://i.imgur.com/C1W2Urq.png" alt=""></li><li>而在header這區，在設置grid劃分區塊<ul><li>有9欄</li><li>列設置3區塊<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header</span>&#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span>/-<span class="number">1</span>; <span class="comment">//1/11</span></span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">1</span>/<span class="number">2</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="built_in">repeat</span>(<span class="number">7</span>,<span class="built_in">minmax</span>(min-content,<span class="number">16rem</span>)) <span class="number">1</span>fr;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">3</span>,min-content);</span><br><span class="line"> <span class="attribute">grid-gap</span>: <span class="number">2rem</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><code>grid-column: 1/-1; //1/11  ; grid-row: 1/2;</code> <a href="https://stackoverflow.com/questions/49005233/whats-the-difference-between-grid-column-value-1-1-and-1-2">What’s the difference between grid-column value 1/1 and 1/2?</a></li></ul><h3 id="3-logo的大小設置"><a href="#3-logo的大小設置" class="headerlink" title="(3)logo的大小設置"></a>(3)logo的大小設置</h3><p><code>_logo.scss</code></p><ul><li>注意：設立所設定的欄和列的區塊，是在header設置的grid底下<br><img src="https://i.imgur.com/OEkTxyS.png" alt=""></li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.logo</span>&#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span>/<span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">1</span>/<span class="number">2</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="comment">//class=&quot;logo-img&quot;</span></span><br><span class="line">  &amp;-<span class="selector-tag">img</span>&#123;  </span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10rem</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-heading"><a href="#4-heading" class="headerlink" title="(4)heading"></a>(4)heading</h3><ul><li>標題的位置一樣利用grid來設定</li><li>在文字的字體、大小、間距進行調整<br><code>_heading.scss</code><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.heading</span>&#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">4</span>/<span class="number">7</span>;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">2</span>/<span class="number">3</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  &amp;-text&#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Great Vibes&#x27;</span>,cursive;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">size</span>(xl)*<span class="number">2</span>; <span class="comment">//結果為6rem</span></span><br><span class="line">    <span class="attribute">font-weight</span>: lighter;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">0.5rem</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/JfkrqEb.png" alt=""></li></ul><h3 id="5-heading中的navigation"><a href="#5-heading中的navigation" class="headerlink" title="(5)heading中的navigation"></a>(5)heading中的navigation</h3><p> <code>layout/_navigation.scss</code></p><ul><li><code>.first-nav</code>為放置右上角</li><li><code>.second-nav</code>為放置下方，中間的位置<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.first-nav</span>&#123; </span><br><span class="line">  <span class="comment">//放在最後三欄</span></span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">7</span>/<span class="number">10</span>;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">1</span>/<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">@include</span> navigation;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.second-nav</span>&#123;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">3</span>/<span class="number">8</span>;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">3</span>/<span class="number">4</span>;</span><br><span class="line">  <span class="keyword">@include</span> navigation;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.dropdown</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/PWJoEoH.png" alt=""></p><ul><li>@mixin，創造navigstion共用樣式<ul><li>使navigation的li-list可以橫向分散排列</li><li>設定hover效果，使游標摸到顏色變淺<code>lighten()</code><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//.first-nav-list</span></span><br><span class="line"><span class="keyword">@mixin</span> navigation&#123;</span><br><span class="line"></span><br><span class="line">  &amp;-list&#123;  </span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;-item&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;-link&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">color</span>(primary);</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">size</span>(sm);</span><br><span class="line">    <span class="attribute">transition</span>: all .<span class="number">3s</span>;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="built_in">lighten</span>(<span class="built_in">color</span>(primary),<span class="number">40%</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/t6KdpJ9.png" alt=""></li></ul></li></ul><h3 id="6-下拉選項：dropdown-list的箭頭符號"><a href="#6-下拉選項：dropdown-list的箭頭符號" class="headerlink" title="(6)下拉選項：dropdown list的箭頭符號"></a>(6)下拉選項：dropdown list的箭頭符號</h3><p><code>components/_dropdown.scss</code></p><ul><li><code>font-family: &#39;Font Awesome 5 Free&#39;</code>：把icon當作字體使用<br><a href="https://yuwensaf.github.io/6110beb1/">使用 fontAwesome 動態加入連結 icon</a></li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dropdown-li</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line"> <span class="comment">//創造下拉選單的箭頭符號</span></span><br><span class="line"> &amp;<span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">   <span class="attribute">font-family</span>: <span class="string">&#x27;Font Awesome 5 Free&#x27;</span>;</span><br><span class="line">   <span class="attribute">content</span>: <span class="string">&#x27;\f078&#x27;</span>;</span><br><span class="line">   <span class="attribute">font-weight</span>:bold ;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/4pg8oNR.png" alt=""></p><ul><li><p>製作下拉式選單的三角形</p><ul><li>先利用border製作出上、下、左、右的三角<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dropdown</span>&#123;</span><br><span class="line"> &amp;<span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">1.5rem</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">7.3rem</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">15px</span> solid red;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">15px</span> solid green;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">15px</span> solid orange;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">15px</span> solid blue;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/chq5TM1.png" alt=""></li></ul></li><li><p>調整上方各色的三角形，並留下要保留的一個三角形</p></li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&amp;<span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">1.5rem</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">7.3rem</span>;</span><br><span class="line">  <span class="comment">// border-top: 15px solid red;</span></span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">15px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">15px</span> solid orange;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">15px</span> solid transparent;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/YhxKI4C.png" alt=""></p><ul><li><code>right: -2.8rem;</code>:條整位置對齊正方形list</li><li><code>border-bottom: 15px solid darken(color(tertiary),5%);</code>：修改三角形的顏色，使整體為灰色</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dropdown</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">3rem</span>;</span><br><span class="line">  <span class="attribute">right</span>: -<span class="number">2.8rem</span>; <span class="comment">//使整個往右移動</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10rem</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="built_in">darken</span>(<span class="built_in">color</span>(tertiary),<span class="number">5%</span>);</span><br><span class="line">  <span class="keyword">@include</span> navigation;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0.2rem</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">1.5rem</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">7.3rem</span>;</span><br><span class="line">    <span class="comment">// border-top: 15px solid red;</span></span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">15px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">15px</span> solid <span class="built_in">darken</span>(<span class="built_in">color</span>(tertiary),<span class="number">5%</span>);</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">15px</span> solid transparent;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/JMI2Zgc.png" alt=""></p><ul><li>hover使下拉選單消失\出現<ul><li>建立游標摸到<code>.dropdown-li</code>，會顯示下拉選單</li><li><code>visibility</code>、<code>opacity</code><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.dropdown-li</span>&#123;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> <span class="selector-class">.dropdown</span>&#123;</span><br><span class="line">  <span class="attribute">visibility</span>: visible;</span><br><span class="line">   <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.dropdown</span>&#123;</span><br><span class="line"><span class="attribute">visibility</span>: hidden;</span><br><span class="line">   <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: opicity .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><img src="https://i.imgur.com/vY3cbuj.gif" alt=""></p><p><img src="https://i.imgur.com/0zOvMTI.png" alt=""></p><h2 id="使slideshow可以跳轉-如幻燈片效果"><a href="#使slideshow可以跳轉-如幻燈片效果" class="headerlink" title="使slideshow可以跳轉(如幻燈片效果)"></a>使slideshow可以跳轉(如幻燈片效果)</h2><ul><li><p>使用<code>@keyframes</code>做出動畫位置</p></li><li><p>Animation Duration(動畫整個完成一次的時間): (fade-in + visible) × images = duration.</p><ul><li>假設你要讓圖片花1秒fade-in，再讓他顯示1秒。而你共有3張圖片，所以總共所需時間為6秒。</li></ul></li><li><p>Animation Delay:(fade-in + visible) × (ordinal position − 1) = delay.</p></li><li><p>Keyframes: 100 ÷ animation duration = percentage for 1 second.(100/20=5%)，5％為1秒，所以4秒大約是20％的位置</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.slideshow</span>&#123;</span><br><span class="line"></span><br><span class="line"> &amp;-slide&#123;</span><br><span class="line">    <span class="comment">//使圖片、文字都放在同一個位置</span></span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">   <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">width</span>: inherit;</span><br><span class="line">   <span class="attribute">height</span>: inherit;<span class="comment">//預設先讓slide消失</span></span><br><span class="line"></span><br><span class="line">   <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">animation</span>: slideshow <span class="number">20s</span> linear infinite ;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> slideshow&#123; </span><br><span class="line"></span><br><span class="line">  <span class="comment">//主要是0~20時圖片顯示，之後都消失，讓其他圖片得宜顯示</span></span><br><span class="line">  <span class="comment">//0~2%創造fade的效果</span></span><br><span class="line">  <span class="number">0%</span>&#123;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="number">2%</span>&#123;</span><br><span class="line">    <span class="attribute">visibility</span>: visible;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//2%~18% slide要顯示</span></span><br><span class="line">  <span class="number">18%</span>&#123;</span><br><span class="line">    <span class="attribute">visibility</span>: visible;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//18~20要消失</span></span><br><span class="line">  <span class="number">20%</span>&#123;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span>&#123;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://snook.ca/archives/html_and_css/simplest-css-slideshow">Simplest CSS Slideshow</a><br><a href="https://www.smashingmagazine.com/2012/04/pure-css3-cycling-slideshow/#4">CSS3 Keyframes Animation</a><br><a href="https://pjchender.blogspot.com/2015/12/cssanimation-keyframes.html">[筆記] CSS動畫Animation — @keyframes</a><br><a href="https://www.oxxostudio.tw/articles/201803/css-animation.html">完整解析 CSS 動畫 ( CSS Animation )</a></p></li><li><p>設置延遲時間(4秒)，使每張圖片呈現(css的撰寫方式)</p><ul><li><code>:nth-child()</code>選擇第幾張圖片<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*設置延遲時間，讓每張slide呈現4秒替換*/</span></span><br><span class="line"> <span class="selector-class">.slideshow-slide</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span><br><span class="line">   <span class="attribute">animation-delay</span>: <span class="number">0s</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="selector-class">.slideshow-slide</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span><br><span class="line">   <span class="attribute">animation-delay</span>: <span class="number">4s</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="selector-class">.slideshow-slide</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span><br><span class="line">   <span class="attribute">animation-delay</span>: <span class="number">8s</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="selector-class">.slideshow-slide</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>)&#123;</span><br><span class="line">   <span class="attribute">animation-delay</span>: <span class="number">12s</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="selector-class">.slideshow-slide</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>)&#123;</span><br><span class="line">   <span class="attribute">animation-delay</span>: <span class="number">16s</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li>將上方轉化為<code>@each</code>的寫法<ul><li>先創造一個列表<code>$animlist</code>，在each迴圈時要但進去的項目</li><li>在each迴圈中<code>.slideshow-slide:nth-child</code>放入slide of number(取得列表中第一個值)，後面接著寫下要執行的動作<code>animation-delay: nth($item,2);</code></li></ul></li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///改寫為=&gt;$animlist:第幾個 延遲秒數,</span></span><br><span class="line"><span class="comment">//#&#123;nth($item,1)&#125;: 1表示(2 4s)，第一個值=2</span></span><br><span class="line"><span class="variable">$animList</span>:<span class="number">1</span> <span class="number">0s</span>,<span class="number">2</span> <span class="number">4s</span>,<span class="number">3</span> <span class="number">8s</span>,<span class="number">4</span> <span class="number">12s</span>, <span class="number">5</span> <span class="number">16s</span>;</span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$item</span> in <span class="variable">$animList</span> &#123;</span><br><span class="line">   <span class="selector-class">.slideshow-slide</span><span class="selector-pseudo">:nth-child</span>(#&#123;nth($item,<span class="number">1</span>)&#125;)&#123;</span><br><span class="line">     <span class="attribute">animation-delay</span>: <span class="built_in">nth</span>(<span class="variable">$item</span>,<span class="number">2</span>);</span><br><span class="line">     <span class="comment">//2就是指秒數</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.youtube.com/watch?v=O4hPOMX8AaU">Sass Tutorials #9 - Nth Function In Lists</a></p><h2 id="產品區下方see-more按鈕"><a href="#產品區下方see-more按鈕" class="headerlink" title="產品區下方see more按鈕"></a>產品區下方see more按鈕</h2><ul><li>html part<ul><li>有三個<code>arrow-line</code>，於後續在scss中會運用此三個div製作箭頭符號<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;products-btn&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-bg&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arrow&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arrow-line arrow-line-1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arrow-line arrow-line-2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arrow-line arrow-line-3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;btn-text&quot;</span>&gt;</span></span><br><span class="line">           See More</span><br><span class="line">         <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li>創造arrow<br><code>transform: rotateZ</code> :Z軸 (使其斜向旋轉45度)<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&amp;-line &#123;</span><br><span class="line">     <span class="attribute">height</span>: .<span class="number">2rem</span>;</span><br><span class="line">     <span class="attribute">background-color</span>: <span class="built_in">color</span>(secondary);</span><br><span class="line">     <span class="attribute">position</span>: absolute;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">   &amp;-line-<span class="number">2</span> &#123;</span><br><span class="line">    </span><br><span class="line">     <span class="attribute">width</span>: <span class="number">1rem</span>;</span><br><span class="line">     <span class="comment">//透過旋轉線2,線3使其成為交叉</span></span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">45deg</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   &amp;-line-<span class="number">3</span> &#123;</span><br><span class="line">    </span><br><span class="line">     <span class="attribute">width</span>: <span class="number">1rem</span>;</span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">45deg</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/s62AXMY.png" alt=""></li></ul><p><code>transform-origin去設定物件變形的起始點</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&amp;-line &#123;</span><br><span class="line">      <span class="attribute">height</span>: .<span class="number">2rem</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="built_in">color</span>(secondary);</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="comment">//將x變成arrow &gt; ;因預設原點是在center，所以須將原點拉到右邊，形成箭頭</span></span><br><span class="line">      <span class="attribute">transform-origin</span><span class="selector-pseudo">:right</span> ;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/wbRTSeb.png" alt=""></p><p><a href="https://juejin.cn/post/6844903780937367565">CSS 属性篇(三)：transform-origin属性</a></p><ul><li>增加橫向直線</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&amp;-line-<span class="number">1</span>&#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">2rem</span>;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">0.7rem</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/sdIdcZI.png" alt=""></p><ul><li>設置動畫，透過摸到箭頭，會延展<ul><li>bg的的寬度進行延展</li></ul></li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span>&#123;</span><br><span class="line"></span><br><span class="line">&amp;<span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-bg</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">18rem</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  &amp;-bg&#123;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">4rem</span>;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">4rem</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">color</span>(primary) ;</span><br><span class="line">    <span class="comment">//使其變圓形</span></span><br><span class="line">     <span class="attribute">border-radius</span>: <span class="number">5rem</span> ;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transition</span>: width .<span class="number">2s</span> ;</span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line">  &amp;-line-<span class="number">1</span>&#123; </span><br><span class="line"> </span><br><span class="line">      <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">0.7rem</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//* line-1預設看不到，透過hover出現</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/vQjUp05.gif" alt=""></p><ul><li><p>使see more 出現</p><ul><li>先修改see more的顏色</li><li>即便改變顏色，還是會被bg覆蓋，所以要調整z-index<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn</span>&#123;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-text</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">color</span>(secondary);</span><br><span class="line">   &#125;</span><br><span class="line">  </span><br><span class="line"> </span><br><span class="line">  &amp;-text&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">size</span>(xs);</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">color</span>(primary);</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/bo8TJLy.gif" alt=""></li></ul></li><li><p>將箭頭向右移動，並呈現完整箭頭符號</p><ul><li>設定<code>.arrow</code>右移，並讓line-1得宜呈現並延展<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn</span>&#123;</span><br><span class="line"></span><br><span class="line">   &amp;<span class="selector-pseudo">:hover</span> <span class="selector-class">.arrow</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">1rem</span>);</span><br><span class="line">  &#125;</span><br><span class="line">   &amp;<span class="selector-pseudo">:hover</span> <span class="selector-class">.arrow-line-1</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">2rem</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="selector-class">.arrow</span>&#123;</span><br><span class="line">    <span class="keyword">@include</span> flexPosition;</span><br><span class="line">    <span class="attribute">transition</span>: transform .<span class="number">2s</span> ;</span><br><span class="line">    </span><br><span class="line">    &amp;-line-<span class="number">1</span>&#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">0.7rem</span>);</span><br><span class="line">      <span class="attribute">transition</span>: width .<span class="number">2s</span> ;</span><br><span class="line">      &#125;</span><br><span class="line">   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/9pptj0t.gif" alt=""></li></ul></li></ul><h2 id="表尾區塊"><a href="#表尾區塊" class="headerlink" title="表尾區塊"></a>表尾區塊</h2><p><img src="https://i.imgur.com/yHeHkU8.png" alt=""></p><h3 id="1-footer區塊的樣式"><a href="#1-footer區塊的樣式" class="headerlink" title="(1)footer區塊的樣式"></a>(1)footer區塊的樣式</h3><p> <code>layout/_footer.scss</code></p><ul><li>footer有三區，中間是表單，左右邊分別為資訊連結<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer</span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span>/-<span class="number">1</span>;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">4</span>/<span class="number">5</span>;</span><br><span class="line">  <span class="keyword">@include</span> flexPosition(space-around);</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">5rem</span> <span class="number">0</span> ;</span><br><span class="line">  <span class="attribute">border-top</span>: .<span class="number">1rem</span> solid <span class="built_in">color</span>(primary);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/tSWtPTW.png" alt=""></p><ul><li>透過<code>＠mixin</code>一次修改2區的條例項目（<code>mixin_scss</code>）<ul><li>其中包含文字大小、樣式、hover效果<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> footerList &#123;</span><br><span class="line">  &amp;-heading&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">size</span>(lg);</span><br><span class="line">    <span class="attribute">color</span>:<span class="built_in">color</span>(primary);</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;-item&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1rem</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;-link&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">size</span>(xs);</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">lighten</span>(<span class="built_in">color</span>(primary),<span class="number">15%</span>);</span><br><span class="line">    <span class="attribute">transition</span>: color .<span class="number">2s</span> ;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">      <span class="attribute">color</span>:<span class="built_in">lighten</span>(<span class="built_in">color</span>(primary),<span class="number">35%</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/X9BA5K0.gif" alt=""></li></ul></li></ul><h3 id="2-社群icon"><a href="#2-社群icon" class="headerlink" title="(2)社群icon"></a>(2)社群icon</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.social-icons</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line"></span><br><span class="line">    &amp;-item&#123;</span><br><span class="line">      <span class="attribute">list-style</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line">    &amp;-link&#123;</span><br><span class="line">      <span class="attribute">text-decoration</span>: none;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">4rem</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">4rem</span>;</span><br><span class="line">      <span class="attribute">border</span>:.<span class="number">1rem</span> solid <span class="built_in">color</span>(primary);</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/IZzM7eK.png" alt=""></p><ul><li><code>border-radius: 100%;</code>調整為圓形外框</li><li>a標籤的前放為i的圖示，所以flex的設置，是針對<code>social-icons-lik</code><br><img src="https://i.imgur.com/kd6jbyV.png" alt=""></li><li>利用<code>@each</code>來套入icon的顏色</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&amp;-link&#123;</span><br><span class="line">      <span class="attribute">text-decoration</span>: none;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">4rem</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">4rem</span>;</span><br><span class="line">      <span class="attribute">border</span>:.<span class="number">1rem</span> solid <span class="built_in">color</span>(primary);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//修改icon成圓形</span></span><br><span class="line">      <span class="comment">// display: block;</span></span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="keyword">@include</span> flexPosition;</span><br><span class="line"></span><br><span class="line">      <span class="selector-tag">i</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="built_in">size</span>(md);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="variable">$socialMediaColors</span>: <span class="number">1</span> <span class="number">#3b5998</span>, <span class="number">2</span> <span class="number">#b31217</span>, <span class="number">3</span> <span class="number">#dc4e41</span>, <span class="number">4</span> <span class="number">#55acee</span>, <span class="number">5</span> <span class="number">#517fa4</span>, <span class="number">6</span> <span class="number">#0077b5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$color</span> in <span class="variable">$socialMediaColors</span> &#123;</span><br><span class="line">  <span class="selector-class">.social-icons-item</span><span class="selector-pseudo">:nth-child</span>(#&#123;nth(($color),<span class="number">1</span>)&#125;) <span class="selector-class">.social-icons-link</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="built_in">nth</span>(<span class="variable">$color</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="attribute">border</span>:.<span class="number">1rem</span> solid <span class="built_in">nth</span>(<span class="variable">$color</span>,<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><ul><li>轉為css<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.social-icons-item</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) <span class="selector-class">.social-icons-link</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#3b5998</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0.1rem</span> solid <span class="number">#3b5998</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.social-icons-item</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) <span class="selector-class">.social-icons-link</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#b31217</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0.1rem</span> solid <span class="number">#b31217</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.social-icons-item</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) <span class="selector-class">.social-icons-link</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#dc4e41</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0.1rem</span> solid <span class="number">#dc4e41</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.social-icons-item</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) <span class="selector-class">.social-icons-link</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#55acee</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0.1rem</span> solid <span class="number">#55acee</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.social-icons-item</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>) <span class="selector-class">.social-icons-link</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#517fa4</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0.1rem</span> solid <span class="number">#517fa4</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.social-icons-item</span><span class="selector-pseudo">:nth-child</span>(<span class="number">6</span>) <span class="selector-class">.social-icons-link</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0077b5</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0.1rem</span> solid <span class="number">#0077b5</span>; &#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/8aWeLiw.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> grid </tag>
            
            <tag> SCSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 預處理器- Sass/SCSS 基本介紹</title>
      <link href="/2021/03/05/sass-1/"/>
      <url>/2021/03/05/sass-1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/e59PuUk.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>CSS預處理器，增加了一些編寫的特性，也可以說是運用程式化的方式寫CSS。</p><ul><li>其中SASS最廣泛使用：Sass包含SASS與SCSS兩種<ul><li>兩者之間不同之處有以下兩點：</li><li>1.文件擴展名不同，Sass 是以“.sass”後綴為擴展名，而SCSS 是以“.scss”後綴為擴展名</li><li>2.語法書寫方式不同，Sass是以嚴格的縮進式語法規則來書寫，不帶大括號({})和分號(;)，而SCSS的語法書寫和我們的CSS語法書寫方式非常類似。<h2 id="安裝sass"><a href="#安裝sass" class="headerlink" title="安裝sass"></a>安裝sass</h2><a href="https://github.com/sass/sass">sass-github</a></li></ul></li><li>在專案底下，安裝<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g sass</span><br></pre></td></tr></table></figure></li><li>安裝後，建立<code>index.scss</code>檔案<br><img src="https://i.imgur.com/cQtE8T5.png" alt=""></li><li>手動轉擋<br><img src="https://i.imgur.com/6TYjGnV.png" alt=""><ul><li>會出現css檔案<br><img src="https://i.imgur.com/SHoaMLN.png" alt=""></li></ul></li></ul><h2 id="使用node-sass編譯"><a href="#使用node-sass編譯" class="headerlink" title="使用node-sass編譯"></a>使用node-sass編譯</h2><ol><li>先取得package.json檔案<br>安裝語法：<code>npm init --yes</code><br>(要注意安裝的路徑位置)<br><img src="https://i.imgur.com/f9QFcH0.png" alt=""><br><img src="https://i.imgur.com/4B623eU.png" alt=""></li><li>安裝node-sass</li></ol><ul><li><code>npm i -g node-sass</code>  (i -&gt; install)<br><img src="https://i.imgur.com/vgGzk85.png" alt=""></li><li>查尋安裝是否完成<br><img src="https://i.imgur.com/EdeoV1H.png" alt=""></li></ul><ol start="3"><li>將檔案編譯為css<br>建立css(資料夾)<h3 id="使用watch，使每次修改sass檔案時，會自動編譯到css中"><a href="#使用watch，使每次修改sass檔案時，會自動編譯到css中" class="headerlink" title="使用watch，使每次修改sass檔案時，會自動編譯到css中"></a>使用watch，使每次修改sass檔案時，會自動編譯到css中</h3></li></ol><ul><li>在package.jason檔案中的<code>&quot;scripts&quot;</code></li><li>要注意編譯資料的位置<ul><li>css :為資料夾路徑 </li><li>scss/main.scss:建立的css路徑</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">   <span class="string">&quot;watch&quot;</span>: <span class="string">&quot;node-sass -o css scss/main.scss -w&quot;</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ul><li>在終端機要輸入<br><code>npm run watch</code>，<code>control+c</code>退出<br><img src="https://i.imgur.com/KNReHQL.png" alt=""></li></ul><h2 id="基本語法實作"><a href="#基本語法實作" class="headerlink" title="基本語法實作"></a>基本語法實作</h2><h3 id="變數"><a href="#變數" class="headerlink" title="變數"></a>變數</h3><ul><li>在變數前加上<code>$</code>，來宣告要使用的變數</li><li>運用抽取變數方式，使運用版面顏色時，可以有一致性，修改版面時也較快速</li><li>變數：數量不要超過10個，自己在記憶上會混亂<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 創造顏色、字大小的變數</span></span><br><span class="line"><span class="variable">$white</span>:<span class="number">#fff</span>;</span><br><span class="line"><span class="variable">$black</span>:<span class="number">#000</span>;</span><br><span class="line"><span class="selector-class">.button</span>&#123;</span><br><span class="line"><span class="attribute">text-align</span>:center;</span><br><span class="line"><span class="attribute">background-color</span>:<span class="variable">$black</span>;</span><br><span class="line"><span class="attribute">border</span>:<span class="number">1px</span> solid <span class="variable">$black</span>;</span><br><span class="line"><span class="attribute">color</span>:<span class="variable">$white</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$font-lg</span>:<span class="number">40px</span>;</span><br><span class="line"><span class="variable">$font-md</span>:<span class="number">30px</span>;</span><br><span class="line"><span class="variable">$font-sm</span>:<span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">h3</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">$font-md</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$color-secondary</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="scope-of-sass-variable"><a href="#scope-of-sass-variable" class="headerlink" title="scope of sass variable"></a>scope of sass variable</h4></li><li>一般常見屬於global scope</li><li>如果將變數設在，標間架構中-&gt;local scope<br><img src="https://i.imgur.com/oAeBzah.png" alt=""></li><li>在後面加上<code>！global</code>就變成全域<br><img src="https://i.imgur.com/jbDV03A.png" alt=""></li></ul><p>PS: 還是建議以global 的方式進行修改，才不會造成維護的混亂</p><ul><li>命名中使用<code>-</code>以及<code>_</code>，在sass中是一樣的<ul><li>如<code>$font-lg</code>改為<code>$font_lg</code>一樣也會有效</li></ul></li></ul><h3 id="Nested-巢狀"><a href="#Nested-巢狀" class="headerlink" title="Nested 巢狀"></a>Nested 巢狀</h3><h4 id="1-針對nav下的ul、li"><a href="#1-針對nav下的ul、li" class="headerlink" title="1.針對nav下的ul、li"></a>1.針對nav下的<code>ul</code>、<code>li</code></h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">$color-primary</span>;</span><br><span class="line">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="variable">$font-sm</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$color-secondary</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>轉換為css<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: orange; &#125;</span><br><span class="line">  <span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none; &#125;</span><br><span class="line">  <span class="selector-class">.nav</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: gray; &#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/wQXDhMZ.png" alt=""></li></ul><h4 id="2-增加hover的效果"><a href="#2-增加hover的效果" class="headerlink" title="2.增加hover的效果"></a>2.增加hover的效果</h4><ul><li><code>&amp;</code>，來指出<code>parent element</code>：在這便是指<code>&lt;a&gt;</code></li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">$color-primary</span>;</span><br><span class="line">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="variable">$font-sm</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$color-secondary</span>;</span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="variable">$color-tertiary</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>轉換為css<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: orange; &#125;</span><br><span class="line">  <span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none; &#125;</span><br><span class="line">  <span class="selector-class">.nav</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: gray; &#125;</span><br><span class="line">    <span class="selector-class">.nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: royalblue; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/IL4dwvL.png" alt=""></p><h4 id="巢狀層級不可以太多層，否則會出現效率問題"><a href="#巢狀層級不可以太多層，否則會出現效率問題" class="headerlink" title="巢狀層級不可以太多層，否則會出現效率問題"></a>巢狀層級不可以太多層，否則會出現效率問題</h4><h3 id="import-是什麼"><a href="#import-是什麼" class="headerlink" title="@import 是什麼"></a>@import 是什麼</h3><ul><li>import 讓我們可以拉出特定區塊或是根據功能性不同拆成不同區塊，來撰寫scss，並利用@import放入主要的scss檔案，最後彙整到同一個css之中。</li><li>再用一個css引入(@import)，各個功能</li><li>要引入的檔案命名：在要import的檔案要加<code>_</code></li></ul><blockquote><p>六角學院<br><img src="https://i.imgur.com/SRD31V7.png" alt=""></p></blockquote><p><code>_test.scss</code>為撰寫footer樣式的檔案</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">h3</span>&#123;</span><br><span class="line">  <span class="attribute">font-style</span>:italic ;</span><br><span class="line">  <span class="attribute">border</span>: blue <span class="number">3px</span> solid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>main.scss</code> 要引入檔案的主要檔案</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&quot;test&quot;</span>;</span><br></pre></td></tr></table></figure><p>轉譯為css(main.css)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font-style</span>: italic;</span><br><span class="line">  <span class="attribute">border</span>: blue <span class="number">3px</span> solid; &#125;</span><br></pre></td></tr></table></figure><h2 id="mixin-與-include"><a href="#mixin-與-include" class="headerlink" title="@mixin 與 @include"></a>@mixin 與 @include</h2><ul><li>當在多個地方想使用同一種style的方式。可以組成一組的樣式，並於scss中重複使用。</li><li>以 <code>@mixin</code> 開頭，並自定義一個名稱</li><li>需要它的時候就用 <code>@include</code>呼叫</li></ul><ol><li>設定對齊方式<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> horizontal-list&#123;</span><br><span class="line"> <span class="selector-tag">li</span>&#123;</span><br><span class="line"> <span class="attribute">display</span>:inline-block;</span><br><span class="line"> <span class="attribute">margin</span>:&#123;</span><br><span class="line">   <span class="attribute">left</span>:-<span class="number">2px</span>;</span><br><span class="line">   <span class="attribute">right</span>:<span class="number">2em</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*當要引用時*/</span></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span>&#123;</span><br><span class="line">  <span class="keyword">@include</span> horizontal-list</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>調整字體大小（以帶參數的方式）<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 發現h1,h3樣式一樣</span></span><br><span class="line"><span class="keyword">@mixin</span> headingStyles(<span class="variable">$fontSize</span>)&#123;</span><br><span class="line">  <span class="comment">//以代參數方式來放入不同字體大小的變數設定</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">$fontSize</span>;</span><br><span class="line"> <span class="attribute">color</span>: <span class="variable">$color-secondary</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-tag">h1</span>&#123;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">@include</span> headingStyles(<span class="variable">$font-lg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">h3</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@include</span> headingStyles(<span class="variable">$font-md</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>在css的地方，可以看到字的大小不同<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.banner</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">color</span>: gray;</span><br><span class="line">  <span class="attribute">text-align</span>: center; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">color</span>: gray;</span><br><span class="line">  <span class="attribute">text-align</span>: center; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li>加入動畫效果</li></ol><ul><li>在<code>footer h3</code>加上<code>hover</code></li><li><code>@mixin transition($param...)</code>加上設定參數特性<ul><li>當要同時設定特性中的多個值時，要記得在參數後面加上<code>...</code></li></ul></li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 發現h1,h3樣式一樣</span></span><br><span class="line"><span class="keyword">@mixin</span> headingStyles(<span class="variable">$fontSize</span>)&#123;</span><br><span class="line">  <span class="comment">//以代參數方式來放入不同字體大小的變數設定</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">$fontSize</span>;</span><br><span class="line"> <span class="attribute">color</span>: <span class="variable">$color-secondary</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">@mixin</span> transition(<span class="variable">$param</span>...) &#123;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="variable">$param</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-tag">h1</span>&#123;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">@include</span> headingStyles(<span class="variable">$font-lg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">h3</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@include</span> headingStyles(<span class="variable">$font-md</span>);</span><br><span class="line">  <span class="keyword">@include</span> transition(<span class="attribute">color</span> .<span class="number">5s</span> ,background-color <span class="number">1s</span>);</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">$color-tertiary</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$color-primary</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>轉譯為css<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">color</span>: gray;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">transition</span>: color <span class="number">0.5s</span>, background-color <span class="number">1s</span>; &#125;</span><br><span class="line">  <span class="selector-class">.footer</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: royalblue;</span><br><span class="line">    <span class="attribute">background-color</span>: orange; &#125;</span><br></pre></td></tr></table></figure></li></ul><p><a href="https://ithelp.ithome.com.tw/articles/10197303">Day27：小事之 Transition 與 Animation</a><br><a href="https://cythilya.github.io/2017/08/27/css-animation/#transition-%E6%BC%B8%E8%AE%8A">CSS3 Animation</a></p><p><a href="https://5xruby.tw/posts/play-sass-mixin-and-include">新手也可以輕鬆玩轉 SASS - @mixin and @include</a></p><h3 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h3><ul><li>透過函式的建立，可以在需要使用時，不斷地呼叫使用</li><li><code>@function fontSize($size)&#123; @return $size*2; &#125;</code>建立函式</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@function</span> fontSize(<span class="variable">$size</span>)&#123;</span><br><span class="line">   <span class="keyword">@return</span> <span class="variable">$size</span>*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="selector-tag">h1</span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="built_in">fontSize</span>(<span class="variable">$font-sm</span>);</span><br><span class="line">  <span class="comment">//字的大小會變成 20px*2 =&gt;40px</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>轉譯為css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.banner</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>; &#125;</span><br></pre></td></tr></table></figure><ul><li>將文字大小，預先設定預設值</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//設定預設為25px</span></span><br><span class="line"><span class="keyword">@function</span> fontSize(<span class="variable">$size</span>:<span class="number">25px</span>)&#123;</span><br><span class="line">   <span class="keyword">@return</span> <span class="variable">$size</span>*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="built_in">fontSize</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>轉譯為css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">50px</span>; &#125;</span><br><span class="line">  <span class="comment">/* 25*2=&gt;50 */</span></span><br></pre></td></tr></table></figure><ul><li>若插入數字</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="built_in">fontSize</span>(<span class="number">30px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>轉譯為css<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">60px</span>; &#125;</span><br><span class="line">  <span class="comment">/* 30*2=&gt;50 */</span></span><br></pre></td></tr></table></figure><h3 id="內建函式介紹"><a href="#內建函式介紹" class="headerlink" title="內建函式介紹"></a>內建函式介紹</h3></li></ul><ol><li><code>lighten()</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.nav&#123;</span><br><span class="line">  background-color: lighten($color-primary,20%);&#125;</span><br></pre></td></tr></table></figure>css<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffc966</span>; &#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>顏色變淡<br><img src="https://i.imgur.com/WhTLwso.png" alt=""></li></ul><ol start="2"><li><code>darken()</code><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">darken</span>(<span class="variable">$color-primary</span>,<span class="number">20%</span>);&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>編譯為css<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#996300</span>; &#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/LRzx1fH.png" alt=""></li></ul><p>3.<code>transparentize()</code></p><ul><li>透明度從0-1 (1是完全透明)<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">transparentize</span>(<span class="variable">$color-primary</span>,<span class="number">0.6</span>);&#125;</span><br></pre></td></tr></table></figure></li><li>編譯為css<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">165</span>, <span class="number">0</span>, <span class="number">0.4</span>); &#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/6ON5Rfk.png" alt=""></li></ul><p>4.<code>mix()</code></p><ul><li>將顏色混合<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span>&#123;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="built_in">mix</span>(blue,green);&#125;</span><br></pre></td></tr></table></figure>css<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#004080</span>; &#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/M9sFOr6.png" alt=""></li></ul><h4 id="加入百分比（利用百分比來調配顏色的比重）"><a href="#加入百分比（利用百分比來調配顏色的比重）" class="headerlink" title="加入百分比（利用百分比來調配顏色的比重）"></a>加入百分比（利用百分比來調配顏色的比重）</h4><ul><li><code>mix(blue,green,10%)</code>表示只有10%的藍色，90%為綠色<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span>&#123;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="built_in">mix</span>(blue,green,<span class="number">10%</span>);&#125;</span><br></pre></td></tr></table></figure>css<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#00731a</span>; &#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/TdUkHSn.png" alt=""></li></ul><hr><h2 id="補充scss檔案編制"><a href="#補充scss檔案編制" class="headerlink" title="補充scss檔案編制"></a>補充scss檔案編制</h2><ul><li>主要視自己專案上的區分來編制<br>vendor:外部套件，放置bootstrap或其他frameworks、liberaries、hover.css<br>utils(helpers):工具類的class，放置字的大小、margin、border顏色設置、hover效果<br>partials:放置一些部分區域的css，如：nav、footer; layout: （共通的佈局）如表頭、表尾，就是每頁都會出現<br>而這幾個檔案，放在main.scss要有順序<br><img src="https://i.imgur.com/tjRLJjK.png" alt=""><br>base:p段落、h1..等的全站設定(css reset)<br>components ：元件，如按鈕、卡片的設定</li></ul><hr><p>參考資料：<a href="https://tw.alphacamp.co/blog/css-preprocessor-sass-scss">alphacamp-Sass/SCSS 基本語法介紹，搞懂CSS 預處理器</a></p>]]></content>
      
      
      <categories>
          
          <category> SCSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SCSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>API-youtube</title>
      <link href="/2021/02/23/API-youtube/"/>
      <url>/2021/02/23/API-youtube/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/HyrwBQl.png" alt=""></p><p><a href="https://eva813.github.io/Eva_portfolio/YoutubeAPI/YoutubeAPI.html">成品</a></p><h2 id="觀察功能需求"><a href="#觀察功能需求" class="headerlink" title="觀察功能需求"></a>觀察功能需求</h2><ul><li>搜尋框，輸入搜尋關鍵字，下方會列出5筆列表<ul><li>有圖片縮圖、影片標題、影片描述</li></ul></li><li>按下next page 會取得下5筆資料</li><li>按下prev page，會取得上5筆資料</li></ul><p>ajax 在同一個頁面，不做刷新就可以改變頁面的內容。<br>q: query</p><h2 id="youtube-API-application-programming-interface-資料查看"><a href="#youtube-API-application-programming-interface-資料查看" class="headerlink" title="youtube API(application programming interface)資料查看"></a>youtube API(application programming interface)資料查看</h2><p><a href="https://developers.google.com/youtube/v3/docs/">YouTube 資料 API 參考手冊</a></p><p>取得授權：<a href="https://console.developers.google.com/projectselector2/apis/credentials?pli=1&supportedpurview=project">憑證</a></p><p><img src="https://i.imgur.com/asf7coq.png" alt=""></p><p>API 金鑰:AIzaSyCKPRCaNS-PQJLl2jzoQEf-O4I0tnrtd8M</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jQuery API D ocument =&gt; 表示看官方文件</span><br><span class="line">串API =&gt;</span><br></pre></td></tr></table></figure><h4 id="檢視範例，ajax資料的情形"><a href="#檢視範例，ajax資料的情形" class="headerlink" title="檢視範例，ajax資料的情形"></a>檢視範例，ajax資料的情形</h4><p><img src="https://i.imgur.com/wc6VWtV.png" alt=""></p><p><img src="https://i.imgur.com/tSYR4vu.png" alt=""></p><h2 id="JS-部分"><a href="#JS-部分" class="headerlink" title="JS 部分"></a>JS 部分</h2><h3 id="1-嘗試串接Youtube-API"><a href="#1-嘗試串接Youtube-API" class="headerlink" title="1.嘗試串接Youtube API"></a>1.嘗試串接Youtube API</h3><ul><li>首先需考量，我們所需要的資料參數有哪些(</li><li>在抓取成功的部分，要設置抓取五筆搜尋到的五筆資料，並將其呈現於頁面<ul><li>除了5筆資料外，還需要跳轉上、下頁的按鈕<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getVideo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> value = $(<span class="string">&#x27;#search-field&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">  <span class="keyword">let</span> youtubeURL = <span class="string">&quot;https://www.googleapis.com/youtube/v3/search&quot;</span>;</span><br><span class="line">  $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: youtubeURL,</span><br><span class="line">    <span class="attr">data</span>: &#123;<span class="comment">//將要放入網址的參數放在這</span></span><br><span class="line">      <span class="attr">part</span>:</span><br><span class="line">        <span class="string">&#x27;id,snippet&#x27;</span>,<span class="comment">// 必填，把需要的資訊列出來</span></span><br><span class="line">      <span class="attr">q</span>: value,<span class="comment">// 查詢文字</span></span><br><span class="line">      <span class="attr">maxResults</span>: <span class="number">5</span>,<span class="comment">// 預設為五筆資料，可以設定1~50</span></span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;video&quot;</span>,</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&#x27;AIzaSyCKPRCaNS-PQJLl2jzoQEf-O4I0tnrtd8M&#x27;</span><span class="comment">// 使用 API 只能取得公開的播放清單</span></span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="comment">//console.log(data);</span></span><br><span class="line">      <span class="keyword">let</span> nextPageToken = data.<span class="property">nextPageToken</span>;</span><br><span class="line">      <span class="keyword">let</span> prevPageToken = data.<span class="property">prevPageToken</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//試著將收到的資料傳入，並呈現於畫面中</span></span><br><span class="line">      <span class="title function_">insertItems</span>(data);</span><br><span class="line"></span><br><span class="line">      <span class="title function_">getBtn</span>(data, prevPageToken, nextPageToken)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;, <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;oh no&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>網址放入參數<br><a href="https://pjchender.blogspot.com/2018/08/js-javascript-url-parameters.html">[JS] 使用 JavaScript 解析網址與處理網址中的參數（URL Parameters）</a></li></ul></li></ul><h3 id="2-將資料呈現於頁面-insertItems"><a href="#2-將資料呈現於頁面-insertItems" class="headerlink" title="2.將資料呈現於頁面(insertItems())"></a>2.將資料呈現於頁面(insertItems())</h3><ul><li>透過迴圈方式將要抓取的資料依序填入</li><li>觀察原本畫面結構，並依據去找尋資料中符合的資料<ul><li>videoId、videoTitle、description、channelTitle…</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">insertItems</span>(<span class="params">item</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> output = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  $.<span class="title function_">each</span>(item.<span class="property">items</span>, <span class="keyword">function</span> (<span class="params">index, value</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> videoId = item.<span class="property">items</span>[index].<span class="property">id</span>.<span class="property">videoId</span>;</span><br><span class="line">    <span class="keyword">let</span> videoTitle = item.<span class="property">items</span>[index].<span class="property">snippet</span>.<span class="property">title</span>;</span><br><span class="line">    <span class="keyword">let</span> description = item.<span class="property">items</span>[index].<span class="property">snippet</span>.<span class="property">description</span>;</span><br><span class="line">    <span class="keyword">let</span> thumbnailURL = item.<span class="property">items</span>[index].<span class="property">snippet</span>.<span class="property">thumbnails</span>.<span class="property">high</span>.<span class="property">url</span>;<span class="comment">//高解析度影片縮圖</span></span><br><span class="line">    <span class="keyword">let</span> channelTitle = item.<span class="property">items</span>[index].<span class="property">snippet</span>.<span class="property">channelTitle</span>;</span><br><span class="line">    <span class="keyword">let</span> publishedDate = item.<span class="property">items</span>[index].<span class="property">snippet</span>.<span class="property">publishedAt</span>;</span><br><span class="line">    <span class="comment">// 按鈕</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    output += <span class="string">`&lt;li&gt;&lt;div class=&quot;list-left&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;img src=&quot; <span class="subst">$&#123;thumbnailURL&#125;</span>&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;list-right&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;h3&gt;</span></span><br><span class="line"><span class="string">    &lt;a data-fancybox data-type=&quot;iframe&quot; data-src=&quot;https://www.youtube.com/embed/<span class="subst">$&#123;videoId&#125;</span>&quot; &quot;href=&quot;javascript:;&quot;&gt; <span class="subst">$&#123;videoTitle&#125;</span> &lt;/a&gt;&lt;/h3&gt; &lt;small&gt;By &lt;span class=&quot;cTitle&quot;&gt; <span class="subst">$&#123;channelTitle&#125;</span>&lt;/span&gt; on <span class="subst">$&#123;publishedDate&#125;</span>&lt;/small&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt; <span class="subst">$&#123;description&#125;</span> &lt;p&gt;&lt;/div&gt;&lt;/li&gt; &lt;div classs=&quot;clearfix&quot;&gt;&lt;/div&gt; </span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line"></span><br><span class="line">    $(<span class="string">&#x27;#results&#x27;</span>).<span class="title function_">html</span>(output);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="3-製作上、下頁的按鈕鍵"><a href="#3-製作上、下頁的按鈕鍵" class="headerlink" title="3.製作上、下頁的按鈕鍵"></a>3.製作上、下頁的按鈕鍵</h2><ul><li>注意該函式要帶入的參數有哪些</li><li>我們要判斷為，在第一頁時，只有下一頁的按鈕<ul><li>判斷方式為，<code>(!prevPageToken)</code>沒有上一頁的token</li><li>（截圖）</li></ul></li><li>在判斷之中，我們需要將要插入的標籤與內容，放入，並append到畫面要呈現的位置</li><li>注意：在插入的button之中，加入<code>data-token=&quot;$&#123;nextPageToken&#125;&quot; data-query=&quot;$&#123;value&#125;&quot;</code>，用於後續抓取屬性內容。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getBtn</span>(<span class="params">value, prevPageToken, nextPageToken</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(nextPageToken)</span><br><span class="line">  <span class="keyword">if</span> (!prevPageToken) &#123;</span><br><span class="line">    <span class="keyword">var</span> btnOutput = $(<span class="string">`&lt;div class=&quot;button-container&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;button id=&quot;next-button&quot; class=&quot;paging-button&quot; data-token=&quot;<span class="subst">$&#123;nextPageToken&#125;</span>&quot; data-query=&quot;<span class="subst">$&#123;value&#125;</span>&quot; onclick=&quot;pressNext();&quot;&gt; Next Page&lt;/button&gt;&lt;/div&gt;`</span></span><br><span class="line">    )</span><br><span class="line">    $(<span class="string">&quot;#buttons&quot;</span>).<span class="title function_">append</span>(btnOutput);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> btnOutput = $(<span class="string">`&lt;div class=&quot;button-container&quot;&gt;&lt;button id=&quot;prev-button&quot; class=&quot;paging-button&quot; data-token=&quot;<span class="subst">$&#123;prevPageToken&#125;</span>&quot; data-query=&quot;<span class="subst">$&#123;value&#125;</span>&quot; onclick=&quot;pressPrev();&quot;&gt; Prev Page&lt;/button&gt;  </span></span><br><span class="line"><span class="string">    &lt;button id=&quot;next-button&quot; class=&quot;paging-button&quot;  data-token=&quot;<span class="subst">$&#123;nextPageToken&#125;</span>&quot; data-query=&quot;<span class="subst">$&#123;value&#125;</span>&quot; onclick=&quot;pressNext();&quot;&gt;Next Page&lt;/button&gt;&lt;/div&gt;`</span>)</span><br><span class="line">    $(<span class="string">&quot;#buttons&quot;</span>).<span class="title function_">append</span>(btnOutput);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://developers.google.com/youtube/v3/guides/implementation/pagination">Youtube:Implementation: Pagination</a></p><h2 id="4-下一頁點下後，下五筆的資料"><a href="#4-下一頁點下後，下五筆的資料" class="headerlink" title="4.下一頁點下後，下五筆的資料"></a>4.下一頁點下後，下五筆的資料</h2><ul><li>同樣以ajax的方式來抓取<ul><li>在參數的地方我們要抓取的是，按取下一頁的token</li></ul></li><li>success之中所應用的函示，同樣為插入5筆的資料，以及上下頁的按鈕</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取得下一頁的資料</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">pressNext</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> youtubeURL = <span class="string">&quot;https://www.googleapis.com/youtube/v3/search&quot;</span>;</span><br><span class="line">  <span class="keyword">let</span> token = $(<span class="string">&#x27;#next-button&#x27;</span>).<span class="title function_">data</span>(<span class="string">&#x27;token&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> value = $(<span class="string">&#x27;#search-field&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">  $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: youtubeURL,</span><br><span class="line">    <span class="attr">data</span>: &#123;<span class="comment">//將要放入網址的參數放在這</span></span><br><span class="line">      <span class="attr">part</span>:</span><br><span class="line">        <span class="string">&#x27;id,snippet&#x27;</span>,<span class="comment">// 必填，把需要的資訊列出來</span></span><br><span class="line">      <span class="attr">q</span>: value,<span class="comment">// 查詢文字</span></span><br><span class="line">      <span class="attr">pageToken</span>: token,</span><br><span class="line">      <span class="attr">maxResults</span>: <span class="number">5</span>,<span class="comment">// 預設為五筆資料，可以設定1~50</span></span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;video&quot;</span>,</span><br><span class="line"></span><br><span class="line">      <span class="attr">key</span>: <span class="string">&#x27;AIzaSyCKPRCaNS-PQJLl2jzoQEf-O4I0tnrtd8M&#x27;</span><span class="comment">// 使用 API 只能取得公開的播放清單</span></span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">      <span class="keyword">let</span> nextPageToken = data.<span class="property">nextPageToken</span>;</span><br><span class="line">      <span class="keyword">let</span> prevPageToken = data.<span class="property">prevPageToken</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 清空內容</span></span><br><span class="line">      $(<span class="string">&#x27;#results&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">      $(<span class="string">&#x27;#buttons&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">      <span class="comment">//試著將收到的資料傳入，並呈現於畫面中</span></span><br><span class="line">      <span class="title function_">insertItems</span>(data);</span><br><span class="line"></span><br><span class="line">      <span class="title function_">getBtn</span>(data, prevPageToken, nextPageToken)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;, <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;oh no&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-上一頁"><a href="#5-上一頁" class="headerlink" title="5.上一頁"></a>5.上一頁</h3><ul><li>同樣的抓取方式，只有要帶入的資料有些差異</li><li><code>token = $(&#39;#prev-button&#39;).data(&#39;token&#39;);</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//前一頁</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">pressPrev</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 清空內容</span></span><br><span class="line">  $(<span class="string">&#x27;#results&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;#buttons&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> youtubeURL = <span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">`https://www.googleapis.com/youtube/v3/search?`</span>);</span><br><span class="line">  <span class="keyword">let</span> token = $(<span class="string">&#x27;#prev-button&#x27;</span>).<span class="title function_">data</span>(<span class="string">&#x27;token&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> value = $(<span class="string">&#x27;#search-field&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">  $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: youtubeURL,</span><br><span class="line">    <span class="attr">data</span>: &#123;<span class="comment">//將要放入網址的參數放在這</span></span><br><span class="line">      <span class="attr">part</span>:</span><br><span class="line">        <span class="string">&#x27;id,snippet&#x27;</span>,<span class="comment">// 必填，把需要的資訊列出來</span></span><br><span class="line">      <span class="attr">q</span>: value,<span class="comment">// 查詢文字</span></span><br><span class="line">      <span class="attr">pageToken</span>: token,</span><br><span class="line">      <span class="attr">maxResults</span>: <span class="number">5</span>,<span class="comment">// 預設為五筆資料，可以設定1~50</span></span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;video&quot;</span>,</span><br><span class="line"></span><br><span class="line">      <span class="attr">key</span>: <span class="string">&#x27;AIzaSyCKPRCaNS-PQJLl2jzoQEf-O4I0tnrtd8M&#x27;</span><span class="comment">// 使用 API 只能取得公開的播放清單</span></span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">      <span class="keyword">let</span> nextPageToken = data.<span class="property">nextPageToken</span>;</span><br><span class="line">      <span class="keyword">let</span> prevPageToken = data.<span class="property">prevPageToken</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 清空內容</span></span><br><span class="line">      $(<span class="string">&#x27;#results&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">      $(<span class="string">&#x27;#buttons&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">      <span class="comment">//試著將收到的資料傳入，並呈現於畫面中</span></span><br><span class="line">      <span class="title function_">insertItems</span>(data);</span><br><span class="line"></span><br><span class="line">      <span class="title function_">getBtn</span>(data, prevPageToken, nextPageToken)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;, <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;oh no&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><a href="https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/177833/">HTML5 自定義屬性 data-* 和 jQuery.data 詳解<br>2018.06.20</a><br><a href="https://pjchender.blogspot.com/2017/01/html-5-data-attribute.html">[技術分享] 什麼是 HTML 5 中的資料屬性（data-* attribute）</a></p><h3 id="6-運用fancybox的方式彈出"><a href="#6-運用fancybox的方式彈出" class="headerlink" title="6.運用fancybox的方式彈出"></a>6.運用fancybox的方式彈出</h3><ul><li><p>使用fancyBox展示影片</p><ul><li><a href="http://fancyapps.com/fancybox/3/docs/#iframe">fancybox Documention</a></li><li><a href="https://cdnjs.com/libraries/fancybox">fancybox-CDN</a></li></ul></li><li><p>使用iframe連結欲嵌入的外部影片連結</p><ul><li>iframe 是框架的一種，也稱為內置框架或內聯框架，用來在網頁內嵌入另外一個網頁<br><a href="https://fancyapps.com/fancybox/3/docs/#iframe"></a></li></ul></li><li><p>透過CDN方式連結fancybox套件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- fancyBox --&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css&quot;</span> /&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.5.7/jquery.fancybox.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>在我們點選該影片名稱區，插入影片id</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;h3&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">data-fancybox</span> <span class="attr">data-type</span>=<span class="string">&quot;iframe&quot;</span> <span class="attr">data-src</span>=<span class="string">&quot;https://www.youtube.com/embed/$&#123;videoId&#125;&quot;</span> &quot;<span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span> $&#123;videoTitle&#125; </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/h3&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;[data-fancybox]&#x27;</span>).<span class="title function_">fancybox</span>(&#123;</span><br><span class="line">  toolbar  : <span class="literal">false</span>,</span><br><span class="line">  smallBtn : <span class="literal">true</span>,</span><br><span class="line">  iframe : &#123;</span><br><span class="line">    preload : <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><a href="https://orow.github.io/2019/03/16/jQuery-youtube-search/">[jQuery] - 練習-Youtube Search Engine</a></p></li></ul><hr><p>補充知識：<br>XMLHttpRequest(XHR):是一種規範，用來發ajax使用</p><p>token(令牌)：唯一的、可以認證身份或取得資料</p><p>GET:向伺服器發request，（伺服器會告訴我們要發伺服器的網址，我們向它請求資訊）</p><h4 id="用瀏覽器debug"><a href="#用瀏覽器debug" class="headerlink" title="用瀏覽器debug"></a>用瀏覽器debug</h4><p><img src="https://i.imgur.com/IlQ8Glx.png" alt=""></p><ul><li>可在watch加上要觀察的變數<br><img src="https://i.imgur.com/7RcELS4.png" alt=""></li></ul><hr><p>參考資料<br><a href="https://ithelp.ithome.com.tw/articles/10194007">[30apis] Day 7 : YouTube Data API + 基礎 Fetch API</a><br><a href="https://www.c-sharpcorner.com/article/how-to-implement-youtube-video-search-using-youtube-data-api-v3-in-wordpress-web2/">How To Implement A Youtube Video Search Using Youtube Data API V3</a><br><a href="https://hackmd.io/@c36ICNyhQE6-iTXKxoIocg/S1eYdtA1P">Youtube Data API 使用手札</a><br><a href="https://a42033.gitbooks.io/api/content/Youtube/youtube_data_api/applicate.html">Youtube Data API 申請</a><br><a href="https://console.cloud.google.com/iam-admin/quotas?hl=zh-tw&_ga=2.128962188.1087850229.1615615433-929425058.1615373715&orgonly=true&angularJsUrl=%2Fprojectselector%2Fiam-admin%2Fquotas%3Fhl%3Dzh-tw%26_ga%3D2.128962188.1087850229.1615615433-929425058.1615373715%26supportedpurview%3Dproject%26orgonly%3Dtrue%26folder%3Dtrue%26organizationId%3Dtrue&project=my-youtube-api-307211&folder=&organizationId=&supportedpurview=project">配額</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;error&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;code&quot;</span>: <span class="number">403</span>,</span><br><span class="line">    <span class="string">&quot;message&quot;</span>: <span class="string">&quot;The request cannot be completed because you have exceeded your \u003ca href=\&quot;/youtube/v3/getting-started#quota\&quot;\u003equota\u003c/a\u003e.&quot;</span>,</span><br><span class="line">    <span class="string">&quot;errors&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;message&quot;</span>: <span class="string">&quot;The request cannot be completed because you have exceeded your \u003ca href=\&quot;/youtube/v3/getting-started#quota\&quot;\u003equota\u003c/a\u003e.&quot;</span>,</span><br><span class="line">        <span class="string">&quot;domain&quot;</span>: <span class="string">&quot;youtube.quota&quot;</span>,</span><br><span class="line">        <span class="string">&quot;reason&quot;</span>: <span class="string">&quot;quotaExceeded&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><a href="https://stackoverflow.com/questions/31075893/im-getting-favicon-ico-error">favicon.ico error</a></p><p>問題：</p><ul><li>script.js: Allow attribute will take precedence over ‘allowfullscreen’.<br><img src="https://i.imgur.com/0JiThlt.png" alt=""></li></ul>]]></content>
      
      
      <categories>
          
          <category> Ajax 實作練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ajax </tag>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>串接API- 天氣預報</title>
      <link href="/2021/02/23/API-weather/"/>
      <url>/2021/02/23/API-weather/</url>
      
        <content type="html"><![CDATA[<p><a href="https://eva813.github.io/Eva_portfolio/weatherAPI/weatherAPI.html">成品</a></p><p><img src="https://i.imgur.com/odl0KcP.png" alt=""></p><h1 id="觀察功能需求"><a href="#觀察功能需求" class="headerlink" title="觀察功能需求"></a>觀察功能需求</h1><ul><li>從公開的氣象資料平台取得氣象資料</li><li>建立下拉式選單，選擇地區，並按下按鈕取得氣象資料</li><li>呈現當日天氣狀況(包含氣溫、圖示、描述)</li><li>呈現未來一週的天氣預報(包含日期、星期;氣溫、圖示、描述)</li></ul><h2 id="了解要串接的資料open-data"><a href="#了解要串接的資料open-data" class="headerlink" title="了解要串接的資料open data"></a>了解要串接的資料open data</h2><p>至中央氣象局-氣象開放資料平台的網站，註冊會員<br>註冊並登入之後，要取得授權碼<br><img src="https://i.imgur.com/KoRQyNL.png" alt=""><br>到<a href="https://opendata.cwb.gov.tw/dist/opendata-swagger.html">中央氣象局開放資料平臺之資料擷取API</a>，查看要取用的資料<br>我的授權碼：CWB-F0145DA5-2539-4333-BAFD-466910C1EECC</p><p>參考資料：<br><a href="https://www.youtube.com/watch?v=QDdn3yrsyCQ">https://www.youtube.com/watch?v=QDdn3yrsyCQ</a><br><a href="https://ithelp.ithome.com.tw/articles/10222662">[Day 13 - 即時天氣] 建立一個即時天氣 App - 前置準備</a></p><h2 id="尋找要參考實現畫面呈現的資料"><a href="#尋找要參考實現畫面呈現的資料" class="headerlink" title="尋找要參考實現畫面呈現的資料"></a>尋找要參考實現畫面呈現的資料</h2><p>畫面主要樣式是參考：<br><a href="https://webdesign.tutsplus.com/tutorials/build-a-simple-weather-app-with-vanilla-javascript--cms-33893">Build a Simple Weather App With Vanilla JavaScript</a></p><h2 id="JS部分"><a href="#JS部分" class="headerlink" title="JS部分"></a>JS部分</h2><h3 id="1-利用Ajax串接資料"><a href="#1-利用Ajax串接資料" class="headerlink" title="1.利用Ajax串接資料"></a>1.利用Ajax串接資料</h3><ul><li>根據平台提供的url作為取得資料的地方</li><li>利用sucess/error，來查看是否有成功取得資料<ul><li>依據console.log()出要串接的資料<br><img src="https://i.imgur.com/Kdm159o.png" alt=""></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getCity</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> url = <span class="string">&quot;https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-D0047-091?Authorization=CWB-F0145DA5-2539-4333-BAFD-466910C1EECC&amp;format=JSON&quot;</span>;</span><br><span class="line"></span><br><span class="line">  $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: url,</span><br><span class="line"></span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">   </span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;oh no&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h3 id="2-製作下拉式選單"><a href="#2-製作下拉式選單" class="headerlink" title="2.製作下拉式選單"></a>2.製作下拉式選單</h3><ul><li>當串到想要的資料後，希望能在下拉選單，呈現出各個地區，以供選擇<br><img src="https://i.imgur.com/I2QTip1.png" alt=""></li><li>因為地區有很多，以迴圈方式來填入資料<ul><li><code>i</code>的長度 <code>data.records.locations[0].location.length</code><br><img src="https://i.imgur.com/QaNMU8d.png" alt=""></li><li><code>opt = $(&#39;&lt;option&gt;&lt;/option&gt;&#39;)</code>創立選項標籤</li><li>利用<code>attr</code>,<code>html</code>填入該地區的index，以及地區名稱<br><img src="https://i.imgur.com/xc7bwaP.png" alt=""></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getCity</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> url = <span class="string">&quot;https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-D0047-091?Authorization=CWB-F0145DA5-2539-4333-BAFD-466910C1EECC&amp;format=JSON&quot;</span>;</span><br><span class="line"></span><br><span class="line">  $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: url,</span><br><span class="line"></span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="comment">//console.log(data);</span></span><br><span class="line">      <span class="keyword">let</span> selectCity = $(<span class="string">&#x27;#selector-list&#x27;</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; data.<span class="property">records</span>.<span class="property">locations</span>[<span class="number">0</span>].<span class="property">location</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> opt = $(<span class="string">&#x27;&lt;option&gt;&lt;/option&gt;&#x27;</span>);</span><br><span class="line">        opt.<span class="title function_">attr</span>(<span class="string">&quot;data-index&quot;</span>, i);</span><br><span class="line">        opt.<span class="title function_">html</span>(data.<span class="property">records</span>.<span class="property">locations</span>[<span class="number">0</span>].<span class="property">location</span>[i].<span class="property">locationName</span>);</span><br><span class="line">        selectCity.<span class="title function_">append</span>(opt);</span><br><span class="line">      &#125;</span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;oh no&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="3-點選-submit-按鈕時要跳出取得今日天氣以及未來一週的天氣"><a href="#3-點選-submit-按鈕時要跳出取得今日天氣以及未來一週的天氣" class="headerlink" title="3.點選(submit)按鈕時要跳出取得今日天氣以及未來一週的天氣"></a>3.點選(submit)按鈕時要跳出取得今日天氣以及未來一週的天氣</h3><ul><li>在sucess:中放入取得今日天氣、週天氣的函式<ul><li>在此要宣告<code>selectedCityIndex</code>變數，並取得被選取的city index<code>$(&#39;#selector-list&#39;).get(0).selectedIndex</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getCity</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> url = <span class="string">&quot;https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-D0047-091?Authorization=CWB-F0145DA5-2539-4333-BAFD-466910C1EECC&amp;format=JSON&quot;</span>;</span><br><span class="line"></span><br><span class="line">  $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: url,</span><br><span class="line"></span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">      <span class="keyword">let</span> selectCity = $(<span class="string">&#x27;#selector-list&#x27;</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; data.<span class="property">records</span>.<span class="property">locations</span>[<span class="number">0</span>].<span class="property">location</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> opt = $(<span class="string">&#x27;&lt;option&gt;&lt;/option&gt;&#x27;</span>);</span><br><span class="line">        opt.<span class="title function_">attr</span>(<span class="string">&quot;data-index&quot;</span>, i);</span><br><span class="line">        opt.<span class="title function_">html</span>(data.<span class="property">records</span>.<span class="property">locations</span>[<span class="number">0</span>].<span class="property">location</span>[i].<span class="property">locationName</span>);</span><br><span class="line">        selectCity.<span class="title function_">append</span>(opt);</span><br><span class="line">      &#125;</span><br><span class="line">      $(<span class="string">&#x27;button&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        e.<span class="title function_">preventDefault</span>();</span><br><span class="line">        <span class="title function_">clear</span>();</span><br><span class="line">        <span class="keyword">let</span> selectedCityIndex = $(<span class="string">&#x27;#selector-list&#x27;</span>).<span class="title function_">get</span>(<span class="number">0</span>).<span class="property">selectedIndex</span>;</span><br><span class="line">        <span class="title function_">getWeather</span>(data, selectedCityIndex);</span><br><span class="line">        <span class="title function_">weekWeather</span>(data, selectedCityIndex);</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;oh no&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><a href="https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/287007/">jQuery獲取Select選擇的Text和Value：</a></li></ul></li></ul><h3 id="4-取得今日天氣-getWeather"><a href="#4-取得今日天氣-getWeather" class="headerlink" title="4.取得今日天氣(getWeather();)"></a>4.取得今日天氣(<code>getWeather();</code>)</h3><ul><li>傳入參數分別為data\locationIndex:data為串接到的天氣資料,locationIndex，為放入要取的資料中的index</li><li>我們想要取得的氣象資料，分別有地區、溫度(最低溫、最高溫)、天氣描述、icon圖示<ul><li><code>name</code>變數就是要取得資料內的地區名稱<br><img src="https://i.imgur.com/SZZSUnh.png" alt=""></li><li><code>weather</code>變數就是取得氣象資料<br><img src="https://i.imgur.com/pVwq3xe.png" alt=""></li><li><code>weatherDescription</code>以及<code>weatherCode</code>分別就是氣象描述以及給予氣象描述的編號<br><img src="https://i.imgur.com/qeUH1iw.png" alt=""></li></ul></li><li><code>let weatherImg = checkImg(weatherCode);</code>依據天氣描述的分類放入對應圖示</li><li>抓取到所需要的變數資料後，就是將要填入呈現畫面的html標籤以及變數放入</li><li><code>after()</code>在該區塊後面在插入想要呈現的其他標籤內容</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getWeather</span>(<span class="params">data, locationIndex</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//console.log(data, locationIndex)</span></span><br><span class="line">  <span class="keyword">let</span> name = data.<span class="property">records</span>.<span class="property">locations</span>[<span class="number">0</span>].<span class="property">location</span>[locationIndex].<span class="property">locationName</span>;</span><br><span class="line">  <span class="keyword">let</span> weather = data.<span class="property">records</span>.<span class="property">locations</span>[<span class="number">0</span>].<span class="property">location</span>[locationIndex].<span class="property">weatherElement</span>;</span><br><span class="line">  <span class="comment">//console.log(name);</span></span><br><span class="line">  <span class="comment">//console.log(weather);</span></span><br><span class="line">  <span class="comment">// 天氣描述</span></span><br><span class="line">  <span class="keyword">let</span> weatherDescription = weather[<span class="number">6</span>].<span class="property">time</span>[<span class="number">0</span>].<span class="property">elementValue</span>[<span class="number">0</span>].<span class="property">value</span>;</span><br><span class="line">  <span class="keyword">let</span> weatherCode = weather[<span class="number">6</span>].<span class="property">time</span>[<span class="number">0</span>].<span class="property">elementValue</span>[<span class="number">1</span>].<span class="property">value</span>;</span><br><span class="line">  <span class="keyword">let</span> minTemp = weather[<span class="number">8</span>].<span class="property">time</span>[<span class="number">0</span>].<span class="property">elementValue</span>[<span class="number">0</span>].<span class="property">value</span>;</span><br><span class="line">  <span class="keyword">let</span> maxTemp = weather[<span class="number">12</span>].<span class="property">time</span>[<span class="number">0</span>].<span class="property">elementValue</span>[<span class="number">0</span>].<span class="property">value</span>;</span><br><span class="line">  <span class="keyword">let</span> weatherImg = <span class="title function_">checkImg</span>(weatherCode);</span><br><span class="line">  <span class="comment">// 今天日期</span></span><br><span class="line">  <span class="comment">// let date = getDate().toUTCString();</span></span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(weatherCode);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> li = $(<span class="string">&#x27;&lt;li&gt;&lt;/li&gt;&#x27;</span>).<span class="title function_">appendTo</span>(<span class="string">&#x27;.cities&#x27;</span>);</span><br><span class="line">  li.<span class="title function_">addClass</span>(<span class="string">&quot;city&quot;</span>);</span><br><span class="line">  li.<span class="title function_">html</span>(<span class="string">`</span></span><br><span class="line"><span class="string">  &lt;h2 class=&quot;city-name&quot; data-name=&quot;<span class="subst">$&#123;name&#125;</span>,&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;span&gt;<span class="subst">$&#123;name&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;sup&gt;Today&lt;/sup&gt;</span></span><br><span class="line"><span class="string">  &lt;/h2&gt;</span></span><br><span class="line"><span class="string">  &lt;div class=&quot;city-temp&quot;&gt;<span class="subst">$&#123;<span class="built_in">Math</span>.round(minTemp)&#125;</span>&lt;sup&gt;°C&lt;/sup&gt; ~ <span class="subst">$&#123;<span class="built_in">Math</span>.round(maxTemp)&#125;</span>&lt;sup&gt;°C&lt;/sup&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;figure class=&#x27;weather-icon&#x27;&gt;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;weatherImg&#125;</span></span></span><br><span class="line"><span class="string">    &lt;figcaption&gt;<span class="subst">$&#123;weatherDescription&#125;</span>&lt;/figcaption&gt;</span></span><br><span class="line"><span class="string">  &lt;/figure&gt;</span></span><br><span class="line"><span class="string">`</span>);</span><br><span class="line">  $(<span class="string">&#x27;.cities&#x27;</span>).<span class="title function_">after</span>(<span class="string">`&lt;h2 class=&quot;sec-h2&quot;&gt;未來一週預報&lt;/h2&gt;`</span>)</span><br><span class="line">  $(<span class="string">&#x27;.cities&#x27;</span>).<span class="title function_">append</span>(li);</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-根據weather-code分類，分配的圖示-checkImg"><a href="#5-根據weather-code分類，分配的圖示-checkImg" class="headerlink" title="5.根據weather code分類，分配的圖示(checkImg())"></a>5.根據weather code分類，分配的圖示(<code>checkImg()</code>)</h3><ul><li>將分類的代碼區分到各個天氣狀況</li><li>依分類代碼下判斷，並回傳要放入的圖示</li><li><code>weatherTypes.isThunderstorm.includes(weatherData)</code><ul><li>利用<code>includes()</code>取得 weatherTypes中各天氣情形陣列中，是否有符合參數的數值<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">checkImg</span>(<span class="params">code</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> weatherData = +code;</span><br><span class="line">  <span class="keyword">const</span> weatherTypes = &#123;</span><br><span class="line">    <span class="attr">isThunderstorm</span>: [<span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">34</span>, <span class="number">35</span>, <span class="number">36</span>, <span class="number">41</span>],</span><br><span class="line">    <span class="attr">isClear</span>: [<span class="number">1</span>],</span><br><span class="line">    <span class="attr">isCloudyFog</span>: [<span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">28</span>],</span><br><span class="line">    <span class="attr">isCloudy</span>: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>],</span><br><span class="line">    <span class="attr">isFog</span>: [<span class="number">24</span>],</span><br><span class="line">    <span class="attr">isPartiallyClearWithRain</span>: [</span><br><span class="line">      <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>,</span><br><span class="line">      <span class="number">13</span>, <span class="number">14</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">29</span>, <span class="number">30</span>,</span><br><span class="line">      <span class="number">31</span>, <span class="number">32</span>, <span class="number">38</span>, <span class="number">39</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">isSnowing</span>: [<span class="number">23</span>, <span class="number">37</span>, <span class="number">42</span>],</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// console.log(data)</span></span><br><span class="line">  <span class="comment">// console.log(weatherTypes.isPartiallyClearWithRain)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// let s = weatherTypes.isThunderstorm.includes(weatherData);</span></span><br><span class="line">  <span class="comment">// console.log(s);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (weatherTypes.<span class="property">isThunderstorm</span>.<span class="title function_">includes</span>(weatherData)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`&lt;img class=&quot;city-icon&quot; src=&quot;./img/thunderstorm.png&quot; alt=&quot;weather-img&quot;&gt;`</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (weatherTypes.<span class="property">isClear</span>.<span class="title function_">includes</span>(weatherData)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`&lt;img class=&quot;city-icon&quot; src=&quot;./img/clear.png&quot; alt=&quot;weather-img&quot;&gt;`</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (weatherTypes.<span class="property">isCloudyFog</span>.<span class="title function_">includes</span>(weatherData)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`&lt;img class=&quot;city-icon&quot; src=&quot;./img/cloudyfog.png&quot; alt=&quot;weather-img&quot;&gt;`</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (weatherTypes.<span class="property">isCloudy</span>.<span class="title function_">includes</span>(weatherData)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`&lt;img class=&quot;city-icon&quot; src=&quot;./img/cloud-and-sun.png&quot; alt=&quot;weather-img&quot;&gt;`</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (weatherTypes.<span class="property">isFog</span>.<span class="title function_">includes</span>(weatherData)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`&lt;img class=&quot;city-icon&quot; src=&quot;./img/fog.png&quot; alt=&quot;weather-img&quot;&gt;`</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (weatherTypes.<span class="property">isPartiallyClearWithRain</span>.<span class="title function_">includes</span>(weatherData)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`&lt;img class=&quot;city-icon&quot; src=&quot;./img/clearwithrainy.png&quot; alt=&quot;weather-img&quot;&gt;`</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">`&lt;img class=&quot;city-icon&quot; src=&quot;./img/snow.png&quot; alt=&quot;weather-img&quot;&gt;`</span>; &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><a href="https://ithelp.ithome.com.tw/articles/10225927">[Day 21 - 即時天氣] 處理天氣圖示以及 useMemo 的使用</a><br><a href="https://www.oxxostudio.tw/articles/201908/js-array.html#array_includes">JavaScript Array 陣列操作方法大全 ( 含 ES6 )</a><br>includes(weatherData):<a href="https://cythilya.github.io/2017/05/08/javascript-find-item-in-an-array/">JavaScript 陣列處理：找東西 - indexOf、$.inArray 與 filter</a><br><a href="https://opendata.cwb.gov.tw/opendatadoc/MFC/D0047.pdf">預報因子欄位中文說明表</a></li></ul></li></ul><hr><h3 id="6-取得未來一週的天氣"><a href="#6-取得未來一週的天氣" class="headerlink" title="6.取得未來一週的天氣"></a>6.取得未來一週的天氣</h3><ul><li>此作法與取的當日天氣有些類似，不過因為要取得未來一週6天的資料，所以須以迴圈的方式來取的並填入資料</li><li><code>let i = 1; i &lt; 7; i++</code>從1開始，6天</li><li><code>timeIndex= 2 * i</code>是為了抓取一週時間所設置的index<br><img src="https://i.imgur.com/xSanS8F.png" alt=""></li><li>日期、星期的取得<ul><li>以算出tomorrow為目標，並帶入i，就會執行出往後六天的日期<br><img src="https://i.imgur.com/ZqSmPOy.png" alt=""><ul><li>並從上圖，分別擷取出月份、日期、星期的資料</li></ul></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">weekWeather</span>(<span class="params">data, locationIndex</span>) &#123;</span><br><span class="line">  <span class="comment">// $(&#x27;.week-ul&#x27;).html(&#x27;&#x27;);</span></span><br><span class="line">  <span class="keyword">var</span> weather = data.<span class="property">records</span>.<span class="property">locations</span>[<span class="number">0</span>].<span class="property">location</span>[locationIndex].<span class="property">weatherElement</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> timeIndex = <span class="number">2</span> * i;</span><br><span class="line">    <span class="keyword">let</span> weekday = $(<span class="string">&#x27;&lt;li&gt;&lt;/li&gt;&#x27;</span>).<span class="title function_">appendTo</span>(<span class="string">&#x27;.week-ul&#x27;</span>);</span><br><span class="line">    weekday.<span class="title function_">addClass</span>(<span class="string">&#x27;day&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;id&#x27;</span>, <span class="string">`day-<span class="subst">$&#123;i&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> weatherDescription = weather[<span class="number">6</span>].<span class="property">time</span>[timeIndex].<span class="property">elementValue</span>[<span class="number">0</span>].<span class="property">value</span>;</span><br><span class="line">    <span class="keyword">let</span> weatherCode = weather[<span class="number">6</span>].<span class="property">time</span>[timeIndex].<span class="property">elementValue</span>[<span class="number">1</span>].<span class="property">value</span>;</span><br><span class="line">    <span class="keyword">let</span> minTemp = weather[<span class="number">8</span>].<span class="property">time</span>[timeIndex].<span class="property">elementValue</span>[<span class="number">0</span>].<span class="property">value</span>;</span><br><span class="line">    <span class="keyword">let</span> maxTemp = weather[<span class="number">12</span>].<span class="property">time</span>[timeIndex].<span class="property">elementValue</span>[<span class="number">0</span>].<span class="property">value</span>;</span><br><span class="line">    <span class="keyword">let</span> weatherImg = <span class="title function_">checkImg</span>(weatherCode);</span><br><span class="line">    <span class="comment">//console.log(weatherDescription);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//////日期、星期的擷取//////</span></span><br><span class="line">    <span class="keyword">let</span> today = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="keyword">let</span> tomorrow = <span class="keyword">new</span> <span class="title class_">Date</span>(today);</span><br><span class="line">    tomorrow.<span class="title function_">setDate</span>(tomorrow.<span class="title function_">getDate</span>() + i);</span><br><span class="line">    <span class="keyword">let</span> weekDay = tomorrow.<span class="title function_">getDay</span>();</span><br><span class="line">    <span class="keyword">let</span> weekMonth = tomorrow.<span class="title function_">getMonth</span>()</span><br><span class="line">    <span class="keyword">let</span> date = tomorrow.<span class="title function_">getDate</span>();</span><br><span class="line">    <span class="keyword">const</span> dayNamesEn = [<span class="string">&#x27;Sun&#x27;</span>, <span class="string">&#x27;Mon&#x27;</span>, <span class="string">&#x27;Tue&#x27;</span>, <span class="string">&#x27;Wed&#x27;</span>, <span class="string">&#x27;Thu&#x27;</span>, <span class="string">&#x27;Fri&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>];</span><br><span class="line">    <span class="keyword">const</span> monthNamesEn = [</span><br><span class="line">      <span class="string">&#x27;Jan&#x27;</span>, <span class="string">&#x27;Feb&#x27;</span>, <span class="string">&#x27;Mar&#x27;</span>, <span class="string">&#x27;Apr&#x27;</span>, <span class="string">&#x27;May&#x27;</span>, <span class="string">&#x27;Jun&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Jul&#x27;</span>, <span class="string">&#x27;Aug&#x27;</span>, <span class="string">&#x27;Sep&#x27;</span>, <span class="string">&#x27;Oct&#x27;</span>, <span class="string">&#x27;Nov&#x27;</span>, <span class="string">&#x27;Dec&#x27;</span></span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">let</span> inweekDay = dayNamesEn[weekDay]</span><br><span class="line">    <span class="keyword">let</span> inweekMonth = monthNamesEn[weekMonth];</span><br><span class="line">    <span class="keyword">let</span> indate = date;</span><br><span class="line">    <span class="comment">///////////</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    weekday.<span class="title function_">html</span>(<span class="string">`&lt;li class=&quot;day&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;h2 class=&quot;whichDay&quot; data-name=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;span&gt;<span class="subst">$&#123;indate&#125;</span> <span class="subst">$&#123;inweekMonth&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;sup&gt;<span class="subst">$&#123;inweekDay&#125;</span>&lt;/sup&gt;</span></span><br><span class="line"><span class="string">          &lt;/h2&gt;</span></span><br><span class="line"><span class="string">          &lt;div class=&quot;week-temp&quot;&gt;<span class="subst">$&#123;minTemp&#125;</span>&lt;sup&gt;°C&lt;/sup&gt; ~ <span class="subst">$&#123;maxTemp&#125;</span>&lt;sup&gt;°C&lt;/sup&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;</span></span><br><span class="line"><span class="string">          &lt;figure class=&#x27;weather-icon&#x27;&gt;</span></span><br><span class="line"><span class="string">            <span class="subst">$&#123;weatherImg&#125;</span></span></span><br><span class="line"><span class="string">            &lt;figcaption&gt;<span class="subst">$&#123;weatherDescription&#125;</span>&lt;/figcaption&gt;</span></span><br><span class="line"><span class="string">          &lt;/figure&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;`</span>)</span><br><span class="line">    $(<span class="string">&#x27;.week-ul&#x27;</span>).<span class="title function_">append</span>(weekday);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://flaviocopes.com/how-to-get-tomorrow-date-javascript/">抓取明天日期:How to get tomorrow’s date using JavaScript</a><br><a href="https://eyesofkids.gitbooks.io/javascript-start-from-es6/content/part3/datetime.html">日期與時間</a></p><h3 id="7-當文件準備好"><a href="#7-當文件準備好" class="headerlink" title="7.當文件準備好"></a>7.當文件準備好</h3><ul><li>先執行要串接的資料</li><li>於選擇地區時，跳出提醒文字</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="title function_">getCity</span>();</span><br><span class="line"></span><br><span class="line">  $(<span class="string">&#x27;#selector-list&#x27;</span>).<span class="title function_">change</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;.msg&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;別忘了按下SUBMIT&#x27;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="8-清除資料"><a href="#8-清除資料" class="headerlink" title="8.清除資料"></a>8.清除資料</h3><ul><li>建立在點選submit後，要先執行的步驟，為清除原本頁面的資料<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">clear</span>(<span class="params"></span>) &#123;</span><br><span class="line">$(<span class="string">&#x27;.cities&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;.sec-h2&#x27;</span>).<span class="title function_">empty</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;.week-ul&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;.msg&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure><a href="https://blog.csdn.net/sunpeiyumail/article/details/7665668">JQuery中html、append、appendTo、after、insertAfter</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Ajax 實作練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ajax </tag>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS實作- typingGame</title>
      <link href="/2021/01/22/js-typingGame/"/>
      <url>/2021/01/22/js-typingGame/</url>
      
        <content type="html"><![CDATA[<p><a href="https://eva813.github.io/Eva_portfolio/typeGame/typeGame.html">成品</a><br><img src="https://i.imgur.com/fC1gVUt.png" alt=""></p><h2 id="觀察功能需求"><a href="#觀察功能需求" class="headerlink" title="觀察功能需求"></a>觀察功能需求</h2><ul><li>在difficuly地方，有設置難易度，並於重新整理後，仍然儲存選擇的難易度<ul><li>使用到取表格中的值</li><li>localstorage的方式，儲存設置的難易度</li></ul></li><li>創造出隨機的單字，並呈現於畫面<ul><li>輸入的值與隨機出現的值要核對</li></ul></li><li>左上方有倒數計時;右上方有分數的計算<ul><li><code>setInterval</code>設定倒數</li></ul></li><li>設置reload的按鈕<ul><li>在要加入文字內容的容器中，添加<code>location.reload()</code></li></ul></li></ul><h2 id="HTML-部分"><a href="#HTML-部分" class="headerlink" title="HTML 部分"></a>HTML 部分</h2><p>1.icon來源<br><a href="https://www.codegrepper.com/code-examples/c/font-awesome+-+cdnjs.com+-+The+best+FOSS+CDN+for+web">font-awesome - cdnjs</a></p><ul><li>fa-cog<br><img src="https://i.imgur.com/uN4HVq7.png" alt=""></li></ul><p>1.設置難易度選單</p><ul><li><p>difficulty為<code>label</code></p></li><li><p>下拉選單使用<code>option</code></p><p><img src="https://i.imgur.com/99JhtOs.png" alt=""></p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;settings&quot;</span> <span class="attr">class</span>=<span class="string">&quot;settings&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;settings-form&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;difficulty&quot;</span>&gt;</span>Difficulty<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;difficulty&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;easy&quot;</span>&gt;</span>Easy<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;medium&quot;</span>&gt;</span>Medium<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;hard&quot;</span>&gt;</span>Hard<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="JS-部分"><a href="#JS-部分" class="headerlink" title="JS 部分"></a>JS 部分</h2><h3 id="1-如何隨機取到已製作好的單字"><a href="#1-如何隨機取到已製作好的單字" class="headerlink" title="1.如何隨機取到已製作好的單字"></a>1.如何隨機取到已製作好的單字</h3><p><code>words[Math.floor(Math.random() * words.length)]</code></p><ul><li><code>$(&#39;#word&#39;).text(randomItem);</code>讓文字呈現於畫面中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> words = [</span><br><span class="line">  <span class="string">&#x27;sigh&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;tense&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;airplane&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;ball&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;pies&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;juice&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;warlike&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;bad&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;north&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;dependent&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;steer&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;silver&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;highfalutin&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;superficial&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;quince&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;eight&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;feeble&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;admit&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;drag&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;loving&#x27;</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getRandomword</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//https://www.codegrepper.com/code-examples/javascript/get+random+word+from+array+javascript</span></span><br><span class="line">  randomItem = words[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * words.<span class="property">length</span>)];</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">  $(<span class="string">&#x27;#word&#x27;</span>).<span class="title function_">text</span>(randomItem);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">getRandomword</span>()</span><br></pre></td></tr></table></figure><h3 id="2-單字的核對"><a href="#2-單字的核對" class="headerlink" title="2.單字的核對"></a>2.單字的核對</h3><ul><li>要確認抓到的單字是否一樣</li><li><code>let text = $(&#39;#text&#39;).val(); let Item = randomItem;</code></li><li><code>console.log(Item);</code>查看抓取到的單字</li><li>設定文字核對一樣，就執行分數加一，以及創造另一組新單字  </li><li>每次輸入完，並呈現新單字的同時，要清空輸入框的內容<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//輸入單字核對</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkWord</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> text = $(<span class="string">&#x27;#text&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">  <span class="keyword">let</span> <span class="title class_">Item</span> = randomItem;</span><br><span class="line">  <span class="comment">//console.log(Item);</span></span><br><span class="line">  <span class="keyword">if</span> (text === <span class="title class_">Item</span>) &#123;</span><br><span class="line">    <span class="title function_">getRandomword</span>();</span><br><span class="line">    <span class="title function_">updateScore</span>();</span><br><span class="line">    $(<span class="string">&#x27;#text&#x27;</span>).<span class="title function_">val</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-倒數計時"><a href="#3-倒數計時" class="headerlink" title="3.倒數計時"></a>3.倒數計時</h3><ul><li>設置起始時間為10</li><li><code>setInterval()</code>「不斷循環」地固定延遲了某段時間之後，才去執行對應的程式碼，使用 <code>clearInterval()</code>来終止</li><li>在秒數倒計完之後，終止循環，並呈現結束畫面</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Init time</span></span><br><span class="line"><span class="keyword">let</span> time = <span class="number">10</span>;</span><br><span class="line"><span class="comment">// 倒數計時</span></span><br><span class="line"><span class="comment">//https://jsfiddle.net/satyasrinivaschekuri/y03m54Le/</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">countTime</span>(<span class="params"></span>) &#123;</span><br><span class="line">  time--;</span><br><span class="line">  $(<span class="string">&#x27;#time&#x27;</span>).<span class="title function_">text</span>(<span class="string">`<span class="subst">$&#123;time&#125;</span>s`</span>)</span><br><span class="line">  <span class="keyword">if</span> (time &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(downloadTimer);</span><br><span class="line">    <span class="title function_">gameOver</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//   &#125; else &#123;</span></span><br><span class="line">  <span class="comment">//     time--;</span></span><br><span class="line">  <span class="comment">//     $(&#x27;#time&#x27;).text(`$&#123;time&#125;s`)</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> downloadTimer = <span class="built_in">setInterval</span>(countTime, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h4 id="4-倒數計時結束，終止畫面"><a href="#4-倒數計時結束，終止畫面" class="headerlink" title="4.倒數計時結束，終止畫面"></a>4.倒數計時結束，終止畫面</h4><p><img src="https://i.imgur.com/r9oXFmc.png" alt=""></p><ul><li>在該div容器中，插入要顯示的標籤與內容</li><li>利用<code>display:flex</code>呈現該內容</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//遊戲結束</span></span><br><span class="line"><span class="comment">//location.reload()</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">gameOver</span>(<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&#x27;#end-game-container&#x27;</span>).<span class="title function_">html</span>(<span class="string">`&lt;h1&gt;Time ran out&lt;/h1&gt;</span></span><br><span class="line"><span class="string">  &lt;p&gt;Your final score is <span class="subst">$&#123;score&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">  &lt;button onclick=&quot;location.reload()&quot;&gt;Reload&lt;/button&gt;</span></span><br><span class="line"><span class="string">  `</span>)</span><br><span class="line">  <span class="comment">// 顯示指定的flex容器</span></span><br><span class="line">  $(<span class="string">&quot;#end-game-container&quot;</span>).<span class="title function_">css</span>(<span class="string">&#x27;display&#x27;</span>, <span class="string">&#x27;flex&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-設置難易度"><a href="#5-設置難易度" class="headerlink" title="5.設置難易度"></a>5.設置難易度</h3><ul><li>設定在表格變動選項後的綁定事件</li><li>抓取難易度選項的值，並以其值作為儲存local storage的內容</li><li>接著將儲存的難易度，呈現於畫面<code>$(&#39;#difficulty&#39;).val()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果儲存端不是空值(已有選擇)，就以此為主，否則的話就是medium</span></span><br><span class="line"><span class="keyword">let</span> difficulty = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;difficulty&#x27;</span>) !== <span class="literal">null</span></span><br><span class="line">  ? <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;difficulty&#x27;</span>)</span><br><span class="line">  : <span class="string">&#x27;medium&#x27;</span>;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"> <span class="comment">//設置select的選擇</span></span><br><span class="line">  $(<span class="string">&#x27;form&#x27;</span>).<span class="title function_">change</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    difficulty = $(<span class="string">&#x27;#difficulty&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;difficulty&#x27;</span>, difficulty);</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//使畫面的難易度選擇，呈現儲存的選項</span></span><br><span class="line">  $(<span class="string">&#x27;#difficulty&#x27;</span>).<span class="title function_">val</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> a = $(<span class="string">&#x27;#difficulty&#x27;</span>).<span class="title function_">val</span>()</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;difficulty&#x27;</span>) !== <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> a = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;difficulty&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> a = <span class="string">&#x27;medium&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;) </span><br><span class="line">  </span><br></pre></td></tr></table></figure><h3 id="6-調整難易度，每次打對題目可以增加秒數"><a href="#6-調整難易度，每次打對題目可以增加秒數" class="headerlink" title="6.調整難易度，每次打對題目可以增加秒數"></a>6.調整難易度，每次打對題目可以增加秒數</h3><ul><li>在<code>checkWord()</code>函式中，如過答對題目的條件下設置</li><li>判斷如果難易度為高、中、低時，可以添加的秒數分別為多少</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//time += 5;</span></span><br><span class="line">    <span class="keyword">if</span> (difficulty === <span class="string">&#x27;hard&#x27;</span>) &#123;</span><br><span class="line">      time += <span class="number">2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (difficulty === <span class="string">&#x27;medium&#x27;</span>) &#123;</span><br><span class="line">      time += <span class="number">3</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      time += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判斷完之後，隨之繼續倒數時間</span></span><br><span class="line">    <span class="title function_">countTime</span>();</span><br></pre></td></tr></table></figure><h3 id="7-設定結束時，分數-gt-5-，會出現good-job圖示"><a href="#7-設定結束時，分數-gt-5-，會出現good-job圖示" class="headerlink" title="7.設定結束時，分數(&gt;=5)，會出現good job圖示"></a>7.設定結束時，分數(&gt;=5)，會出現good job圖示</h3><p><img src="https://i.imgur.com/2YKGGsw.png" alt=""></p><ul><li>在css檔案加入show的class，並插入該圖示的顯現方式</li><li>於js部分，將判斷式，加入<code>gameOver()a</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加判斷，分數達到一標準，會出現圖示</span></span><br><span class="line">  <span class="keyword">let</span> s = score</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(s)</span><br><span class="line">  <span class="keyword">if</span> (s &gt; = <span class="number">5</span>) &#123;</span><br><span class="line">    $(<span class="string">&quot;#end-game-container&quot;</span>).<span class="title function_">find</span>(<span class="string">&#x27;img&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;show&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS實作練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> jQuery  </tag>
            
            <tag> toggleClass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS實作- 猜數字遊戲</title>
      <link href="/2021/01/22/js-guessNumber/"/>
      <url>/2021/01/22/js-guessNumber/</url>
      
        <content type="html"><![CDATA[<p><a href="https://eva813.github.io/Eva_portfolio/guessNumber/guessNumber.html">成品</a></p><h2 id="觀察功能需求"><a href="#觀察功能需求" class="headerlink" title="觀察功能需求"></a>觀察功能需求</h2><ul><li>練習語音辨識的使用： speech recognition API<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition">SpeechRecognition-MDN</a></li></ul></li><li>根據不同情形，有不一樣的回覆<ul><li>依據猜測數字的情形給予：go higher,go lower</li></ul></li></ul><p><img src="https://i.imgur.com/IjVZV5d.png" alt=""></p><ul><li>數字猜中後，會出現恭喜答對等敘述，並呈現<code>Play Again</code>的按鈕</li></ul><p><img src="https://i.imgur.com/MhtrTrR.png" alt=""></p><h2 id="js部分"><a href="#js部分" class="headerlink" title="js部分"></a>js部分</h2><h3 id="1-設定隨機數字"><a href="#1-設定隨機數字" class="headerlink" title="1.設定隨機數字"></a>1.設定隨機數字</h3><ul><li><code>Math.floor(Math.random() * 100) + 1</code>取得1-100</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 取得隨1-100隨機數字</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">theRandomNum</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">  <span class="comment">//沒有加1，數字會是0-99</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> randomNum = <span class="title function_">theRandomNum</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;randomNum:&#x27;</span>, randomNum);</span><br></pre></td></tr></table></figure><h3 id="2-SpeechRecognition"><a href="#2-SpeechRecognition" class="headerlink" title="2.SpeechRecognition"></a>2.SpeechRecognition</h3><ul><li>第一步要先將SpeechRecognition設為全域變數<ul><li>檢查瀏覽器是否有支援不需要 prefix 的 speechRecognition 介面，若沒有則將 webkit 標頭的 webkitSpeechRecognition 指定給該全域變數，</li></ul></li><li>要使用 speechRecognition ，必須透過 SpeechRecognition 建構式建立一個物件實例。</li><li><code>recognition.onresult</code> 設定取得語音辨識的結果</li><li>執行<code>writeMessage(myWord);checkNumber(myWord);</code>兩個函式<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> <span class="title class_">SpeechRecognition</span> = <span class="variable language_">window</span>.<span class="property">SpeechRecognition</span> || <span class="variable language_">window</span>.<span class="property">webkitSpeechRecognition</span>;</span><br><span class="line">  <span class="keyword">var</span> recognition = <span class="keyword">new</span> <span class="title class_">SpeechRecognition</span>();</span><br><span class="line">  <span class="comment">//設定辨識語言。</span></span><br><span class="line">  recognition.<span class="property">lang</span> = <span class="string">&#x27;zh-tw&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (e) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">error</span>(e);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 開始語音辨識</span></span><br><span class="line">recognition.<span class="title function_">start</span>();</span><br><span class="line"><span class="comment">//取得語音辨識的結果</span></span><br><span class="line">recognition.<span class="property">onresult</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="comment">//console.log(event);</span></span><br><span class="line">  <span class="keyword">let</span> myWord = event.<span class="property">results</span>[<span class="number">0</span>][<span class="number">0</span>].<span class="property">transcript</span></span><br><span class="line">  <span class="comment">//console.log(&#x27;You said: &#x27;, myWord);</span></span><br><span class="line">  <span class="title function_">writeMessage</span>(myWord);</span><br><span class="line">  <span class="title function_">checkNumber</span>(myWord);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>簡易測試，取得得語音辨識 :point_down: <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//取得語音辨識的結果</span></span><br><span class="line">recognition.<span class="property">onresult</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;You said: &#x27;</span>, event.<span class="property">results</span>[<span class="number">0</span>][<span class="number">0</span>].<span class="property">transcript</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/QLWaJB0.png" alt=""></li></ul><p><img src="https://i.imgur.com/FfF5Aqv.png" alt=""></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API/Using_the_Web_Speech_API">Using the Web Speech API</a><br><a href="https://www.freecodecamp.org/news/how-to-build-a-simple-speech-recognition-app-a65860da6108/">How to build a simple speech recognition app</a></p><h3 id="3-記錄下使用者所說的話"><a href="#3-記錄下使用者所說的話" class="headerlink" title="3.記錄下使用者所說的話"></a>3.記錄下使用者所說的話</h3><ul><li>在<code>msg</code>的div插入辨識語言的結果文字<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">writeMessage</span>(<span class="params">myWord</span>) &#123;</span><br><span class="line">  $(<span class="string">&#x27;#msg&#x27;</span>).<span class="title function_">html</span>(<span class="string">`</span></span><br><span class="line"><span class="string">  &lt;div&gt;You said:&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;span class=&quot;box&quot;&gt;<span class="subst">$&#123;myWord&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">  `</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-核對隨機數字與猜的數字是否一致"><a href="#4-核對隨機數字與猜的數字是否一致" class="headerlink" title="4.核對隨機數字與猜的數字是否一致"></a>4.核對隨機數字與猜的數字是否一致</h3></li><li>設定當辨識到的不是數字：This is not a valid number</li><li>當範圍不在1-100之間：Number must be between 1 and 100</li><li>猜中數字的結果：Congrats! You have guessed the number!</li><li>數字猜測GO LOWER,GO HIGHER<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">checkNumber</span>(<span class="params">myWord</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> number = +myWord; <span class="comment">//轉為數字</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="title class_">Number</span>.<span class="built_in">isNaN</span>(number)) &#123;</span><br><span class="line">    $(<span class="string">&#x27;#msg&#x27;</span>).<span class="title function_">append</span>(<span class="string">`&lt;div&gt;This is not a valid number&lt;/div&gt;`</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//設定語句</span></span><br><span class="line">  <span class="keyword">if</span> (number &gt; <span class="number">100</span> || number &lt; <span class="number">1</span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;#msg&#x27;</span>).<span class="title function_">append</span>(<span class="string">`&lt;div&gt;Number must be between 1 and 100&lt;/div&gt;`</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (number === randomNum) &#123;</span><br><span class="line">    $(<span class="string">&#x27;body&#x27;</span>).<span class="title function_">html</span>(<span class="string">`</span></span><br><span class="line"><span class="string">    &lt;h2&gt;Congrats! You have guessed the number! &lt;br&gt;&lt;br&gt; </span></span><br><span class="line"><span class="string">    It was <span class="subst">$&#123;number&#125;</span>&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;button class=&quot;play-again&quot; id=&quot;play-again&quot; &gt; Play Again &lt;/button&gt;</span></span><br><span class="line"><span class="string">    `</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (number &gt; randomNum) &#123;</span><br><span class="line">    $(<span class="string">&#x27;#msg&#x27;</span>).<span class="title function_">append</span>(<span class="string">`&lt;div&gt;GO LOWER&lt;/div&gt;`</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $(<span class="string">&#x27;#msg&#x27;</span>).<span class="title function_">append</span>(<span class="string">`&lt;div&gt;GO HIGHER&lt;/div&gt;`</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>透過 Number.isNaN() 語法可以判斷，若回傳 true，則表示值為 NaN，否則為 false</li></ul><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN">Number.isNaN()</a></p><h3 id="5-使猜數字可以持續猜，直到答對為止"><a href="#5-使猜數字可以持續猜，直到答對為止" class="headerlink" title="5.使猜數字可以持續猜，直到答對為止"></a>5.使猜數字可以持續猜，直到答對為止</h3><ul><li><code>recognition.onend</code>使用於控制語音識別的服務，並應用在結束語音識別時的情境。</li><li><code>recognition.start();</code>每次數字猜完後，都會重新開始語音識別，直到猜中。</li><li>在數字猜中後，會出現<code>play again</code>按鈕，所以要設定此按鈕，按下後能夠重新開始遊戲 =&gt;<code>window.location.reload()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//https://stackoverflow.com/questions/51080738/how-to-make-speech-recognition-continous-for-a-fix-time-period</span></span><br><span class="line">recognition.<span class="property">onend</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  recognition.<span class="title function_">start</span>();</span><br><span class="line">  <span class="comment">//點擊按鈕，重啟遊戲畫面</span></span><br><span class="line">  $(<span class="string">&#x27;body&#x27;</span>).<span class="title function_">find</span>(<span class="string">&#x27;#play-again&#x27;</span>).<span class="title function_">click</span>(</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">location</span>.<span class="title function_">reload</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://ithelp.ithome.com.tw/articles/10187827">實戰智慧插座 14 - 我說開燈就開燈 ( 語音辨識 )</a></p><hr><p>其他參考資料:<br><a href="https://tutorialzine.com/2017/08/converting-from-speech-to-text-with-javascript">Converting from Speech to Text with JavaScript</a><br><a href="https://davidwalsh.name/speech-recognition">JavaScript Speech Recognition</a><br><a href="https://ithelp.ithome.com.tw/articles/10248999">Day21 – Speech Recognition (lukechu)</a><br><a href="https://ithelp.ithome.com.tw/articles/10196577">Day 21 - Speech Detection (Arel)</a><br><a href="https://ithelp.ithome.com.tw/articles/10224891?sc=rss.qu">DAY20 : Speech Detection (BROWN)</a></p>]]></content>
      
      
      <categories>
          
          <category> JS實作練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> jQuery  </tag>
            
            <tag> random </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS實作- 新年倒數</title>
      <link href="/2021/01/16/js-countDown/"/>
      <url>/2021/01/16/js-countDown/</url>
      
        <content type="html"><![CDATA[<p><a href="https://eva813.github.io/Eva_portfolio/countDown/countDown.html">成品</a></p><p><img src="https://i.imgur.com/et0bQ96.png" alt=""></p><h2 id="觀察功能需求"><a href="#觀察功能需求" class="headerlink" title="觀察功能需求"></a>觀察功能需求</h2><ul><li>計算天、小時、分鐘、秒數的倒數</li><li>最下面顯示倒數年份</li><li>page load的圖示(會旋轉1秒鐘)之後顯示倒數</li></ul><h2 id="CSS部分"><a href="#CSS部分" class="headerlink" title="CSS部分"></a>CSS部分</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*增加讓螢幕寬度變化時，字的大小隨之改變</span></span><br><span class="line"><span class="comment">如果螢幕寬度為 500px 以下*/</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">500px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">45px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.time</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.time</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.time</span> small &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://ithelp.ithome.com.tw/articles/10196578">Day22：小事之 Media Query</a><a href="https://malagege.github.io/blog/2019/05/05/CSS%E8%A8%AD%E5%AE%9A%E9%9F%BF%E6%87%89%E5%BC%8F-RWD-%E6%9C%89%E5%B9%BE%E7%A8%AE%E6%96%B9%E6%B3%95/">CSS設定響應式(RWD)有幾種方法</a></p><h2 id="JS部分"><a href="#JS部分" class="headerlink" title="JS部分"></a>JS部分</h2><h3 id="1-宣告最終日期-新的一年1-1的日期"><a href="#1-宣告最終日期-新的一年1-1的日期" class="headerlink" title="1. 宣告最終日期(新的一年1/1的日期)"></a>1. 宣告最終日期(新的一年1/1的日期)</h3><ul><li>要先宣告取得目前的年份</li><li>再利用此變數帶入，要倒數的最終日期</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//getFullYear(),用來取得日期物件當中本地時間的年份</span></span><br><span class="line"><span class="keyword">const</span> currentYear = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line"><span class="keyword">const</span> newYearTime = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">`January 01 <span class="subst">$&#123;currentYear + <span class="number">1</span>&#125;</span> 00:00:00`</span>);</span><br></pre></td></tr></table></figure><p>時間日期<br><a href="https://www.fooish.com/javascript/date">JavaScript Date 時間和日期</a><br><a href="https://www.w3schools.com/jsref/jsref_getfullyear.asp">getFullYear() Method</a></p><h3 id="2-倒數計時的日、時、分、秒"><a href="#2-倒數計時的日、時、分、秒" class="headerlink" title="2. 倒數計時的日、時、分、秒"></a>2. 倒數計時的日、時、分、秒</h3><ul><li><p><code>currentTime</code> 取得目前時間<br><img src="https://i.imgur.com/b3sgw3L.png" alt=""></p></li><li><p><code>diff = newYearTime - currentTime;</code>:計算出目前與未來最終日期的時間差異(此相減得出的是毫秒)<br><img src="https://i.imgur.com/ly5elua.png" alt=""></p></li><li><p>計算天數、小時、秒數</p><ul><li><code>const d</code>1天等於24小時，1小時等於60分鐘，1分鐘等於60秒，1秒等於1000毫秒。所以，msec / 1000 / 60 / 60 / 24 保留整數就是天數。</li><li><code>h = Math.floor(diff / 1000 / 60 / 60) % 24</code>:計算小時，並以除以24之後的餘數，來得到剩餘的小時。</li><li>分鐘、以及秒數也是用同樣方式計算取得。</li></ul></li><li><p>將取得的日期帶入畫面</p><ul><li>使用<code>.html()</code>：<code>$(&#39;#days&#39;).html(d);</code></li><li>在小時、分鐘、秒，是以兩位數呈現，需要當數字少於10，要呈現01,02…，所以使用三元運算子<code>$(&#39;#hours&#39;).html(h &lt; 10 ? &#39;0&#39; + h : h);</code>，當數字小於10，要0+h;反之就只要呈現h。</li></ul></li><li><p>最後要設定<code>setInterval(updateCountdown, 1000);</code> ，使其每秒倒數。</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">updateCountdown</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> currentTime = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="comment">//console.log(currentTime);</span></span><br><span class="line">  <span class="keyword">const</span> diff = newYearTime - currentTime;</span><br><span class="line">  <span class="comment">//diff計算出來是毫秒</span></span><br><span class="line">  <span class="comment">//days</span></span><br><span class="line">  <span class="keyword">const</span> d = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>);</span><br><span class="line">  <span class="comment">//取得除以24之後的餘數</span></span><br><span class="line">  <span class="keyword">const</span> h = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span>) % <span class="number">24</span>;</span><br><span class="line">  <span class="keyword">const</span> m = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff / <span class="number">1000</span> / <span class="number">60</span>) % <span class="number">60</span>;</span><br><span class="line">  <span class="keyword">const</span> s = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff / <span class="number">1000</span>) % <span class="number">60</span>;</span><br><span class="line">  $(<span class="string">&#x27;#days&#x27;</span>).<span class="title function_">html</span>(d);</span><br><span class="line">  <span class="comment">//當數字少於10，要呈現01,02...</span></span><br><span class="line">  $(<span class="string">&#x27;#hours&#x27;</span>).<span class="title function_">html</span>(h &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + h : h);</span><br><span class="line">  $(<span class="string">&#x27;#minutes&#x27;</span>).<span class="title function_">html</span>(m &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + m : m);</span><br><span class="line">  $(<span class="string">&#x27;#seconds&#x27;</span>).<span class="title function_">html</span>(s &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + s : s);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//設定每一秒都會循環倒數</span></span><br><span class="line"><span class="built_in">setInterval</span>(updateCountdown, <span class="number">1000</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>參考資料：<br><a href="http://zhi-yuan-chenge.blogspot.com/2015/10/jsjavascript_16.html">【JS】javascript時間Date()介紹與補零應用的技巧!!!</a><br><a href="https://kknews.cc/zh-tw/code/8g4vo3e.html">js和vue實現時分秒倒計時的方法</a><br>三元運算子：<br><a href="https://ithelp.ithome.com.tw/articles/10218274">Day19【ES6 小筆記】三元運算子-以哥哥的擇偶條件為例</a></p><h3 id="3-載入圖示"><a href="#3-載入圖示" class="headerlink" title="3.載入圖示"></a>3.載入圖示</h3><ul><li>設定在載入之後，要隔多久執行功能</li><li>在此設定載入1秒之後，要移除loading畫面，呈現出倒數的時間</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&#x27;#loading&#x27;</span>).<span class="title function_">remove</span>();</span><br><span class="line">  <span class="comment">//要在css檔案的countdown，先設置display：none</span></span><br><span class="line">  $(<span class="string">&#x27;#countdown&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;display&#x27;</span>, <span class="string">&#x27;flex&#x27;</span>);</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h3 id="4-放入要倒數的年份"><a href="#4-放入要倒數的年份" class="headerlink" title="4.放入要倒數的年份"></a>4.放入要倒數的年份</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#year&#x27;</span>).<span class="title function_">html</span>(currentYear + <span class="number">1</span>)</span><br></pre></td></tr></table></figure><hr><p><a href="https://ithelp.ithome.com.tw/articles/10238189">網頁練習 -倒數計時器實作(上)</a><br><a href="https://www.cssscript.com/best-countdown-timer/">5 Best Countdown Timer JavaScript Libraries (2020 Update)</a><br><a href="https://ithelp.ithome.com.tw/articles/10238547">網頁練習 -倒數計時器實作(下)</a></p>]]></content>
      
      
      <categories>
          
          <category> JS實作練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> jQuery </tag>
            
            <tag> setInterval </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS實作- scrollBlog</title>
      <link href="/2021/01/16/js-scrollBlog/"/>
      <url>/2021/01/16/js-scrollBlog/</url>
      
        <content type="html"><![CDATA[<p><a href="https://eva813.github.io/Eva_portfolio/scrollBlog/scrollBlog.html">成品</a></p><h2 id="觀察功能需求"><a href="#觀察功能需求" class="headerlink" title="觀察功能需求"></a>觀察功能需求</h2><p>1.隨著頁面的往下捲動，會載入新的資料</p><ul><li>一開始頁面載入，會呈現5筆資料，捲動往下，會再載入5筆</li><li>使用<a href="https://jsonplaceholder.typicode.com/">{JSON} Placeholder</a>的資料來串接(運用ajax)</li><li>設定捲動位置，並於該位置時，會呈現載入的圖示</li><li>setTimeout來呈現載入的時間與畫面</li></ul><p>2.網頁的各資料是有順序，資料左上會有編碼</p><ul><li>利用資料本身的id作為序號</li><li>於js時，帶入該變數取值</li></ul><h2 id="css部分"><a href="#css部分" class="headerlink" title="css部分"></a>css部分</h2><h3 id="1-製作左上方，數字"><a href="#1-製作左上方，數字" class="headerlink" title="1.製作左上方，數字"></a>1.製作左上方，數字</h3><ul><li>利用<code>position: absolute;</code>定位位置，並利用並利用<code>top</code>、<code>left</code>調整位置</li><li>使用<code>display: flex;</code>調整數字的位置，<code>align-items: center;justify-content: center;</code>使水平、垂直置中<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post</span> <span class="selector-class">.number</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#296ca8</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">7px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/FkIcque.png" alt=""></li></ul><h3 id="2-載入畫面的原點圖示"><a href="#2-載入畫面的原點圖示" class="headerlink" title="2.載入畫面的原點圖示"></a>2.載入畫面的原點圖示</h3><ul><li>先製作load的基本設定，如flex的排列、位置固定於下方，以及透明度的顯示</li><li>針對原點訂定背景、原點大小。新增動畫效果，<code>animation: bounce 0.5s ease-in infinite;</code></li><li>動畫名稱<code>@keyframes bounce</code>，設定在某時間點，<code>translateY</code>，的位置。</li><li>為了讓圓點的跳動時間不同，針對2、3的原點，設定延遲時間<code>animation-delay: 0.2s;</code><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.loader</span> &#123;</span><br><span class="line">  <span class="comment">/* opacity: 0; */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">position</span>: fixed; <span class="comment">/*位置固定於最下面*/</span></span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">0.3s</span> ease-in;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.loader</span><span class="selector-class">.show</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*製作圓點*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.circle</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">animation</span>: bounce <span class="number">0.5s</span> ease-in infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.circle</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: <span class="number">0.1s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.circle</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">animation-delay</span>: <span class="number">0.2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> bounce &#123;</span><br><span class="line">  <span class="number">0%</span>,</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">10px</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/RuhdRt7.gif" alt=""></p><h2 id="js部分"><a href="#js部分" class="headerlink" title="js部分"></a>js部分</h2><h3 id="1-jsonplaceholder"><a href="#1-jsonplaceholder" class="headerlink" title="1.jsonplaceholder:"></a>1.jsonplaceholder:</h3><ul><li>為取得資料的位置</li><li>抓取5筆的方式，後面參數的設定而來<br><a href="https://jsonplaceholder.typicode.com/posts?_limit5">https://jsonplaceholder.typicode.com/posts?_limit5</a></li></ul><h3 id="2-使用ajax串接API"><a href="#2-使用ajax串接API" class="headerlink" title="2.使用ajax串接API"></a>2.使用ajax串接API</h3><ul><li><a href="https://hackmd.io/Ciayzu-vQcyrh-WeVNeOPQ?view">Async/Await 非同步流程控制-筆記</a></li><li>參考<a href="https://petetasker.com/using-async-await-jquerys-ajax">Using async await with jQuery’s $.ajax</a>、<a href="https://stackoverflow.com/questions/27612372/how-to-await-the-ajax-request">How to await the ajax request?</a>，使用jQuery’s<code>$.ajax</code>執行async</li><li>在try裡面，放入一般<code>$.ajax</code>抓取API資料的方式，如url、type、dataType</li><li>首先，在連結的部分，我們希望每次抓取5筆資料，呈現1頁，所以在外面設置<code>let limit = 5;let page = 1</code>於url中加入該變數</li><li>在抓取資料成功時，放入function，並用<code>$.each</code>來執行<ul><li>在<code>$.each</code>先傳入該資料(data)陣列，其<code>function (index, value)</code>放入索引以及值的內容。</li><li>宣告<code>postEl</code>變數，創造名為<code>post</code>的<code>div</code>=&gt; <code>$(&#39;\&lt;div /&gt;&#39;)</code></li><li>加入<code>post</code>class</li><li>加入html</li><li>最後將此變數，放置呈現文章的容器<code>postEl.appendTo(&#39;#posts-container&#39;);</code></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> limit = <span class="number">5</span></span><br><span class="line"><span class="keyword">let</span> page = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">doAjax</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> result;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    result = <span class="keyword">await</span> $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`https://jsonplaceholder.typicode.com/posts?_limit=<span class="subst">$&#123;limit&#125;</span>&amp;_page=<span class="subst">$&#123;page&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">      <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">      <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      </span><br><span class="line">      $.<span class="title function_">each</span>(data, <span class="keyword">function</span> (<span class="params">index, value</span>) &#123;</span><br><span class="line">          <span class="keyword">const</span> postEl = $(<span class="string">&#x27;&lt;div /&gt;&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;post&#x27;</span>).<span class="title function_">html</span>(<span class="string">`&lt;div class=&quot;number&quot;&gt;<span class="subst">$&#123;value.id&#125;</span>&lt;/div&gt; &lt;div class=&quot;post-info&quot;&gt;&lt;h2 class=&quot;post-title&quot;&gt;<span class="subst">$&#123;value.title&#125;</span>&lt;/h2&gt;&lt;p class=&quot;post-body&quot;&gt;<span class="subst">$&#123;value.body&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;`</span>)</span><br><span class="line">          <span class="comment">//console.log(postEl)</span></span><br><span class="line">          postEl.<span class="title function_">appendTo</span>(<span class="string">&#x27;#posts-container&#x27;</span>);</span><br><span class="line">          <span class="comment">//$(&#x27;#posts-container&#x27;).append(postEl)</span></span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">doAjax</span>();</span><br></pre></td></tr></table></figure><p>查看是否有成功取得資料：<code>console.log(data);</code><br><img src="https://i.imgur.com/wJPpdfh.png" alt=""></p><h3 id="使用jQuery創造div"><a href="#使用jQuery創造div" class="headerlink" title="使用jQuery創造div"></a>使用jQuery創造div</h3><p><a href="https://stackoverflow.com/questions/10402567/jquery-div-vs-div">https://stackoverflow.com/questions/10402567/jquery-div-vs-div</a></p><h4 id="each"><a href="#each" class="headerlink" title="each()"></a><code>each()</code></h4><p><a href="https://api.jquery.com/jquery.each/">jQuery.each()</a></p><h3 id="3-Infinite-Scroll無限捲動-瀑布流"><a href="#3-Infinite-Scroll無限捲動-瀑布流" class="headerlink" title="3.Infinite Scroll無限捲動(瀑布流)"></a>3.Infinite Scroll無限捲動(瀑布流)</h3><ul><li><code>scrollTop</code>網頁右邊的卷軸到最上端網頁的距離有多少</li><li><code>scrollHeight</code> 取得整個沒被擋住的高、<code>clientHeight</code> 取得元素的高度（含padding 不含 border）</li><li>完整內容高度 (scrollHeight) = 內容頂端與捲軸頂端的距離 (scrollTop) + 捲軸本身高度 (clientHeight) + 內容底端與捲軸底端的距離。</li></ul><p>例子:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="variable language_">window</span>).<span class="title function_">scroll</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> scrollVal = $(<span class="variable language_">this</span>).<span class="title function_">scrollTop</span>();</span><br><span class="line">    $(<span class="string">&quot;span.qScrollTop&quot;</span>).<span class="title function_">text</span>(scrollVal);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(scrollVal &gt; <span class="number">500</span>)&#123;</span><br><span class="line">  <span class="comment">/* 如果滾動的物件捲動 &gt; 500 則觸發指定的動作。*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="注意：window本身沒有scrollTop-Left這個屬性，所以window-scrollTop是undefined的"><a href="#注意：window本身沒有scrollTop-Left這個屬性，所以window-scrollTop是undefined的" class="headerlink" title="注意：window本身沒有scrollTop/Left這個屬性，所以window.scrollTop是undefined的"></a>注意：window本身沒有scrollTop/Left這個屬性，所以window.scrollTop是undefined的</h4><p>所以可能要從body、document來取得</p><h4 id="本段落語法："><a href="#本段落語法：" class="headerlink" title="本段落語法："></a>本段落語法：</h4><ul><li>上述說明各視窗高度得解釋，在此if判斷式中<code>scrollTop + clientHeight &gt;= scrollHeight - 5</code>來計算，當捲軸捲到該位置時，要呈現載入畫面</li><li>接著根據載入畫面函式，來放入載入以及呈現接續畫面得設定<ul><li>使用<code>setTimeout()</code>，在1秒後消除載入圖示，接著在300毫秒後，馬上換頁執行載入新資料</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">scroll</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> scrollTop = $(<span class="variable language_">this</span>).<span class="title function_">scrollTop</span>();</span><br><span class="line">  <span class="keyword">var</span> scrollHeight = $(<span class="string">&#x27;body&#x27;</span>).<span class="title function_">prop</span>(<span class="string">&quot;scrollHeight&quot;</span>);</span><br><span class="line">  <span class="comment">//一樣 var scrollHeight2 = document.documentElement.scrollHeight;</span></span><br><span class="line">  <span class="keyword">var</span> clientHeight = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span>;</span><br><span class="line">  <span class="comment">//https://stackoverflow.com/questions/10423759/plain-javascript-to-jquery-clientheight</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// console.log(&#x27;scrollTop:&#x27;, scrollTop);</span></span><br><span class="line">  <span class="comment">// console.log(&#x27;scrollHeight:&#x27;, scrollHeight);</span></span><br><span class="line">  <span class="comment">// console.log(&#x27;clientHeight:&#x27;, clientHeight);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (scrollTop + clientHeight &gt;= scrollHeight - <span class="number">5</span>) &#123;</span><br><span class="line">    <span class="comment">//console.log(&#x27;show up 123&#x27;)</span></span><br><span class="line">    <span class="title function_">showLoading</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//顯示載入圖示，並取得更多串接資料</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showLoading</span>(<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&#x27;.loader&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;show&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    $(<span class="string">&#x27;.loader&#x27;</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;show&#x27;</span>);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      page++;</span><br><span class="line">      <span class="title function_">doAjax</span>();</span><br><span class="line">    &#125;, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">  &#125;, <span class="number">1000</span>);  <span class="comment">//1秒之後消失</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>參考資料：<br><a href="https://pjchender.blogspot.com/2015/04/jquery.html">[筆記] 計算網頁底部位置，當網頁達到底部時才產生效果─jQuery</a><br><a href="https://shubo.io/element-size-scrolling/#%E7%84%A1%E9%99%90%E6%8D%B2%E5%8B%95-infinite-scroll">一次搞懂 clientHeight/scrollHeight/scrollTop的區別</a><br><a href="https://kuro.tw/posts/2019/02/23/%E8%AB%87%E8%AB%87-JavaScript-%E7%9A%84-setTimeout-%E8%88%87-setInterval/">談談 JavaScript 的 setTimeout 與 setInterval</a></p><h3 id="4-篩選輸入框資料"><a href="#4-篩選輸入框資料" class="headerlink" title="4.篩選輸入框資料"></a>4.篩選輸入框資料</h3><ul><li>綁定事件為<code>.keyup</code>指放開鍵盤的那個剎那，觸發該事件</li><li>執行的函式內容為：<ul><li><code>var text</code>取得輸入值並轉為小寫</li><li>利用迴圈，去搜尋關鍵字，判斷，值轉為小寫文字的內容是否符合條件</li><li>-1 ：意指條件不符合</li><li><code>indexOf()</code> 方法用來判斷字串字串變數中是否包含某字串。</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//輸入框搜尋//https://makitweb.com/jquery-search-text-in-the-element-with-contains-selector/  (=&gt;Loop all .content )</span></span><br><span class="line">  $(<span class="string">&#x27;#filter&#x27;</span>).<span class="title function_">keyup</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Search text</span></span><br><span class="line">    <span class="keyword">var</span> text = $(<span class="string">&#x27;#filter&#x27;</span>).<span class="title function_">val</span>().<span class="title function_">toLowerCase</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Hide all content class element</span></span><br><span class="line">    $(<span class="string">&#x27;.post&#x27;</span>).<span class="title function_">hide</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Search </span></span><br><span class="line">    $(<span class="string">&#x27;.post&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ($(<span class="variable language_">this</span>).<span class="title function_">text</span>().<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&quot;&quot;</span> + text + <span class="string">&quot;&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">        $(<span class="variable language_">this</span>).<span class="title function_">closest</span>(<span class="string">&#x27;.post&#x27;</span>).<span class="title function_">show</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>參考資料：<br><a href="https://medium.com/@yitailin/%E6%AF%94%E8%BC%83-keydown-keypress-keyup-%E7%9A%84%E5%B7%AE%E7%95%B0-4e873ba17e81">比較 keydown, keypress, keyup 的差異</a><br><a href="https://makitweb.com/jquery-search-text-in-the-element-with-contains-selector/">jQuery – Search text in the Element with :contains() Selector</a><br><a href="https://www.fooish.com/javascript/string/indexOf.html">JavaScript String indexOf()</a></p><hr><p>補充參考：<br><a href="https://whien.medium.com/js20min-day-20-ajax-%E9%9D%9E%E5%90%8C%E6%AD%A5%E8%99%95%E7%90%86-asynchronous-javascript-and-xml-e74a059ab639">JS20min Day — 20 AJAX 非同步處理 (Asynchronous JavaScript and XML)</a><br><a href="https://www.youtube.com/watch?v=NOprCnnjHm0">回呼函式 Callbacks、Promises 物件、Async/Await 非同步流程控制 - 彭彭直播 at 2019/04/07</a></p>]]></content>
      
      
      <categories>
          
          <category> JS實作練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> ajax  </tag>
            
            <tag> setTimeout </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS實作- DOM Array Methods</title>
      <link href="/2021/01/15/js-DOMArrayMethods/"/>
      <url>/2021/01/15/js-DOMArrayMethods/</url>
      
        <content type="html"><![CDATA[<p><a href="https://eva813.github.io/Eva_portfolio/ArrayMethods/arrayMethod.html">成品</a><br><img src="https://i.imgur.com/gtaxVol.png" alt=""></p><h1 id="需求觀察"><a href="#需求觀察" class="headerlink" title="需求觀察"></a>需求觀察</h1><ul><li>使用fetch來串接API</li><li>透過左側按鈕，使用陣列的方法來實現不同事件<ul><li>運用<code>forEach()</code>來將陣列資料呈現到畫面</li><li>運用<code>map()</code>計算金額的倍數</li><li><code>filter()</code>篩選出符合條件的資料</li><li><code>sort()</code>用來排序資料</li><li><code>reduce()</code>計算陣列中資料的累加結果</li></ul></li></ul><h1 id="使用fetch來串接資料"><a href="#使用fetch來串接資料" class="headerlink" title="使用fetch來串接資料"></a>使用fetch來串接資料</h1><ul><li>實作專案的資料來源<code>https://randomuser.me/api</code></li></ul><p>1.原本使用<code>fetch</code></p><ul><li>送出 Request，如果得到回應就會回傳帶有 Response 的 Promise 物件，使用 then 將回傳值傳遞下去。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getRandomUser</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://randomuser.me/api&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span>    response.<span class="title function_">json</span>()).<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><a href="https://www.oxxostudio.tw/articles/201908/js-fetch.html">JavaScript Fetch API 使用教學</a></li></ul><p>2.Fetch 搭配 async、await</p><ul><li>使用async很容易：在定義function時，開頭加上 async</li><li>用fetch取得資料</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getRandomUser</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://randomuser.me/api&#x27;</span>);  <span class="comment">//執行完後發出promise</span></span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span><br><span class="line">  <span class="comment">//查看取得的資料，並從中選擇要用的部分</span></span><br><span class="line">  <span class="comment">//console.log(data);</span></span><br><span class="line">  <span class="keyword">const</span> user = data.<span class="property">results</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">//創造新的使用者，並建立新的物件</span></span><br><span class="line">  <span class="keyword">const</span> newUser = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">`<span class="subst">$&#123;user.name.first&#125;</span> <span class="subst">$&#123;user.name.last&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">money</span>: <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000000</span>)</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(newUser);</span><br><span class="line">  <span class="title function_">addData</span>(newUser);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.函式中的撰寫</p><ul><li>查看取得的<code>data</code><br><img src="https://i.imgur.com/TjYFhjC.png" alt=""></li><li>變數宣告要取用資料的哪個部分，並用以建立新物件的內容<ul><li><code>const user = data.results[0];</code></li><li><code>user.name.first</code><br><img src="https://i.imgur.com/NAmWK88.png" alt=""></li></ul></li></ul><h2 id="將物件傳入陣列"><a href="#將物件傳入陣列" class="headerlink" title="將物件傳入陣列"></a>將物件傳入陣列</h2><ul><li><p>data 為前面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//將新建立的物件(newUser)放入陣列中</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params">newObj</span>) &#123;</span><br><span class="line">  <span class="comment">//這裡的data是在最前面所宣告的 初始陣列</span></span><br><span class="line">  data.<span class="title function_">push</span>(newObj);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">//不放入參數，使用預設data</span></span><br><span class="line">  <span class="title function_">updateDOM</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="將傳入新物件的陣列，顯示於畫面"><a href="#將傳入新物件的陣列，顯示於畫面" class="headerlink" title="將傳入新物件的陣列，顯示於畫面"></a>將傳入新物件的陣列，顯示於畫面</h2></li><li><p>使用<code>forEach()</code>來呈現畫面的資料</p><ul><li>傳入參數為item，為新創的物件資料，內有：name,money</li><li>創造新的<code>div</code>並增加class給他</li><li>用<code>innerHTML</code>插入內容</li><li>用 appendChild() 把上面新增的內容放入，新增的內容會依序排列在後面，不會被洗掉</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//將新創立的物件輸出呈現到畫面上(dom)</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateDOM</span>(<span class="params">provideData = data</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(provideData);</span><br><span class="line">  <span class="comment">//清除main區域的div</span></span><br><span class="line">  main.<span class="property">innerHTML</span> = <span class="string">`&lt;h2&gt;&lt;strong&gt;Person&lt;/strong&gt;  Wealth&lt;/h2&gt;`</span>;</span><br><span class="line">  provideData.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> element = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    <span class="comment">//在新div增加class</span></span><br><span class="line">    element.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;person&#x27;</span>);</span><br><span class="line">    element.<span class="property">innerHTML</span> = <span class="string">`&lt;strong&gt;<span class="subst">$&#123;item.name&#125;</span>&lt;/strong&gt; <span class="subst">$&#123;item.money&#125;</span>`</span>;</span><br><span class="line">    main.<span class="title function_">appendChild</span>(element);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：如果本來 HTML 某元素有既有的內容，但是又用 innerHTML 在同樣的元素上加上內容的時候，innerHTML 會把原本寫的東西覆蓋掉。</p><p><img src="https://i.imgur.com/xjxIGr7.png" alt=""></p><ul><li>注意參數的回傳<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">updateDOM</span>(<span class="params">provideData</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(provideData);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/0O0629Q.png" alt=""><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">updateDOM</span>(<span class="params">provideData = data</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(provideData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/qW5Vqq9.png" alt=""></p><p><a href="https://ithelp.ithome.com.tw/articles/10218607">JavaScript 初心者筆記: DOM - 如何用 JS 新增 HTML 內容</a></p><h2 id="數字轉金錢格式"><a href="#數字轉金錢格式" class="headerlink" title="數字轉金錢格式"></a>數字轉金錢格式</h2><p><img src="https://i.imgur.com/JKQrEyd.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//將回傳的隨機數字，轉換為金錢格式 -https://stackoverflow.com/questions/149055/how-to-format-numbers-as-currency-strings</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">formatMoney</span>(<span class="params">Money</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;$&#x27;</span> + <span class="title class_">Money</span>.<span class="title function_">toFixed</span>(<span class="number">2</span>).<span class="title function_">replace</span>(<span class="regexp">/\d(?=(\d&#123;3&#125;)+\.)/g</span>, <span class="string">&#x27;$&amp;,&#x27;</span>);;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>formatMoney()</code>要放入剛剛forEach所傳入的金額，從這邊去調整數字的格式<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.<span class="property">innerHTML</span> = <span class="string">`&lt;strong&gt;<span class="subst">$&#123;item.name&#125;</span>&lt;/strong&gt;  <span class="subst">$&#123;formatMoney(item.money)&#125;</span>`</span>;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/8DLGtgC.png" alt=""></p><h2 id="增加人員事件"><a href="#增加人員事件" class="headerlink" title="增加人員事件"></a>增加人員事件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//設置點擊事件，按下add user，增加人</span></span><br><span class="line">addUserBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, getRandomUser);</span><br></pre></td></tr></table></figure><h2 id="運用map-來，建立-double-money事件"><a href="#運用map-來，建立-double-money事件" class="headerlink" title="運用map()來，建立 double money事件"></a>運用<code>map()</code>來，建立 double money事件</h2><ul><li>loop through array 就像forEach，但不同的是他會回傳東西<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//double money </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">doubleMoney</span>(<span class="params"></span>) &#123;</span><br><span class="line">  data = data.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; ...item &#125;</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/PpZ5v7v.png" alt=""></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//double money </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">doubleMoney</span>(<span class="params"></span>) &#123;</span><br><span class="line">  data = data.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; ...item, <span class="attr">money</span>: item.<span class="property">money</span> * <span class="number">2</span> &#125;</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/joXfDXT.png" alt=""></p><p>呈現於畫面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//double money </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">doubleMoney</span>(<span class="params"></span>) &#123;</span><br><span class="line">  data = data.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; ...item, <span class="attr">money</span>: item.<span class="property">money</span> * <span class="number">2</span> &#125;</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">   <span class="title function_">updateDOM</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/M0R5KV4.png" alt=""></p><p><code>forEach()</code>: 针对每一个元素执行提供的函数(executes a provided function once for each array element)。<br><code>map()</code>: 创建一个新的数组，其中每一个元素由调用数组中的每一个元素执行提供的函数得来(creates a new array with the results of calling a provided function on every element in the calling array)。<br><a href="https://blog.fundebug.com/2018/02/05/map_vs_foreach/">JavaScript中Map和ForEach的区别</a></p><h2 id="運用sort來建立排名"><a href="#運用sort來建立排名" class="headerlink" title="運用sort來建立排名"></a>運用<code>sort</code>來建立排名</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//sortEvent</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sortEvent</span>(<span class="params"></span>) &#123;</span><br><span class="line">  data = data.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> b.<span class="property">money</span> - a.<span class="property">money</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//console.log(data);</span></span><br><span class="line">  <span class="title function_">updateDOM</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="sort"><a href="#sort" class="headerlink" title="sort()"></a><code>sort()</code></h4><p><code>sort</code>依據字串的 Unicode 編碼進行排序，會改變原本的陣列。</p><ul><li>排序進行方式：<code>sort()</code>會將所有元素轉成字串後，且以第一個字元為對象，再進行排序。</li><li>比較好的方式：一般會建議，還是以函式傳入參數來當排序條件會比較穩定。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">5</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">6</span>];</span><br><span class="line"><span class="comment">// 以匿名函式回參數做「升序」排序</span></span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> a - b; <span class="comment">// a - b &gt; 0</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// [1, 2, 3, 5, 6, 9]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果要反過來做「降序」排序</span></span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> b - a;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// [9, 6, 5, 3, 2, 1]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>參考資料：<a href="https://ithelp.ithome.com.tw/articles/10225733">JS 將陣列 Array 重新排列的 sort()</a>、<a href="https://medium.com/@leokao0726/%E6%B7%BA%E8%AB%87-js-sort-%E5%88%B0%E8%83%8C%E5%BE%8C%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95-1035f5b8cde8">淺談 JS sort() 到背後排序方法</a></p><h2 id="filter篩選百萬以上的人員"><a href="#filter篩選百萬以上的人員" class="headerlink" title="filter篩選百萬以上的人員"></a><code>filter</code>篩選百萬以上的人員</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">filterMillionaires</span>(<span class="params"></span>) &#123;</span><br><span class="line">  data = data.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> item.<span class="property">money</span> &gt; <span class="number">1000000</span>;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">updateDOM</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PS:<code>filter()</code>的使用是回傳新陣列，原陣列不改變</p><h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p>拆解內部參數<br>accumulator<br>用來累積回呼函式回傳值的累加器（accumulator）或 initialValue（若有提供的話，詳如下敘）。累加器是上一次呼叫後，所回傳的累加數值。<br>currentValue<br>原陣列目前所迭代處理中的元素。</p><ul><li><code>console.log(accumulator);</code></li></ul><p><img src="https://i.imgur.com/dGpG42b.png" alt=""></p><ul><li><code>console.log(currentValue);</code></li></ul><p><img src="https://i.imgur.com/P0yQK34.png" alt=""></p><ul><li>console.log(currentValue.money);</li></ul><p><img src="https://i.imgur.com/vNfFozL.png" alt=""></p><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce">MDN</a><br><a href="https://w3c.hexschool.com/blog/a2cb755f">JavaScript reduce 在做什麼？</a></p><h3 id="理解完reduce-所回傳的參數資料後…"><a href="#理解完reduce-所回傳的參數資料後…" class="headerlink" title="理解完reduce()所回傳的參數資料後…"></a>理解完<code>reduce()</code>所回傳的參數資料後…</h3><ul><li>讓金額加總計算<code>accumulator += currentValue.money</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//calculateMoney</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">calculateMoney</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> reduceArr = data.<span class="title function_">reduce</span>(<span class="function">(<span class="params">accumulator, currentValue</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//console.log(accumulator);</span></span><br><span class="line">   <span class="comment">// console.log(currentValue.money);</span></span><br><span class="line">    <span class="keyword">return</span> accumulator += currentValue.<span class="property">money</span>;</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> totalEl = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">  totalEl.<span class="property">innerHTML</span> = <span class="string">`&lt;h3&gt;Total Wealth: &lt;strong&gt; <span class="subst">$&#123;formatMoney(reduceArr)&#125;</span> &lt;/strong&gt; &lt;/h3&gt; `</span>;</span><br><span class="line">  main.<span class="title function_">appendChild</span>(totalEl);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS實作練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> Array </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS實作- SortableList</title>
      <link href="/2021/01/15/js-SortableList/"/>
      <url>/2021/01/15/js-SortableList/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/K6JyjsG.png" alt=""></p><p><a href="https://eva813.github.io/Eva_portfolio/sortableList/sortableList.html">成品</a></p><h2 id="觀察功能需求"><a href="#觀察功能需求" class="headerlink" title="觀察功能需求"></a>觀察功能需求</h2><ul><li><p>Drag &amp; Drop API</p><ul><li>使元素可以拖放，在 HTML5，只要為它加上 draggable=”true” 屬性，它就能「被拖曳」了</li></ul></li><li><p>拖曳該項目時，會使下方的格子顏色變成灰色</p></li></ul><p><img src="https://i.imgur.com/sZVXh9r.png" alt=""></p><ul><li>拖曳項目到目標位置，會使了者交換</li><li>排序最後會有一個檢查順序正確與否的按鈕</li></ul><h2 id="JS部分"><a href="#JS部分" class="headerlink" title="JS部分"></a>JS部分</h2><h3 id="1-排行榜的設置"><a href="#1-排行榜的設置" class="headerlink" title="1.排行榜的設置"></a>1.排行榜的設置</h3><ul><li>設定熱門旅遊縣市排行榜的陣列</li><li>並宣告一個空陣列，以利後面使用</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bestPlace = [</span><br><span class="line">  <span class="string">&#x27;台南&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;台中&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;高雄&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;台東&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;屏東&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;新北&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;宜蘭&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;花蓮&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;澎湖&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;桃園&#x27;</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> listItems = [];</span><br></pre></td></tr></table></figure><h3 id="2-創建排行列表，並將其呈現於頁面上"><a href="#2-創建排行列表，並將其呈現於頁面上" class="headerlink" title="2.創建排行列表，並將其呈現於頁面上"></a>2.創建排行列表，並將其呈現於頁面上</h3><ul><li>宣告新的變數，並利用Fisher-Yates，創造隨機的效果<ul><li>注意新變數，是帶入展開運算元(把陣列中的元素取出)</li></ul></li><li>利用<code>each</code>跑陣列，創造變數填入<code>&lt;li&gt;</code>，並於其中填入html標籤，使畫面呈現列表。</li><li>jquery稱增加屬性<code>listItem.setAttribute(&#39;data-index&#39;, index);</code>,<a href="https://api.jquery.com/attr/">.attr()</a></li></ul><p><img src="https://i.imgur.com/OqjHMda.png" alt=""></p><ul><li><code>listItems.push(listItem);</code>將列表項目，放入空陣列中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Fisher-Yates洗牌演算法</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fisherYatesShuffle</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = arr.<span class="property">length</span> - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">    <span class="keyword">var</span> j = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (i + <span class="number">1</span>)); <span class="comment">//random index</span></span><br><span class="line">    [arr[i], arr[j]] = [arr[j], arr[i]]; <span class="comment">// swap</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">/製作實際可以看到的list</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">creatList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> placeArr = [...bestPlace];</span><br><span class="line">  <span class="title function_">fisherYatesShuffle</span>(placeArr);</span><br><span class="line">  $.<span class="title function_">each</span>(placeArr, <span class="keyword">function</span> (<span class="params">index, place</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> listItem = $(<span class="string">&#x27;&lt;li&gt;&lt;/li&gt;&#x27;</span>).<span class="title function_">appendTo</span>(<span class="string">&#x27;#draggable-list&#x27;</span>);</span><br><span class="line">    <span class="comment">// console.log(listItem);</span></span><br><span class="line">    listItem.<span class="title function_">attr</span>(<span class="string">&quot;data-index&quot;</span>, index);</span><br><span class="line">    <span class="comment">//listItem.addClass(&#x27;wrong&#x27;)</span></span><br><span class="line">    listItem.<span class="title function_">html</span>(<span class="string">`&lt;span class=&quot;number&quot;&gt;<span class="subst">$&#123;index + <span class="number">1</span>&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;draggable&quot; draggable=&quot;true&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;p class=&quot;place-name&quot;&gt;<span class="subst">$&#123;place&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">          &lt;i class=&quot;fas fa-grip-lines&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;`</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    listItems.<span class="title function_">push</span>(listItem);</span><br><span class="line">    <span class="comment">//insert into dom</span></span><br><span class="line">    $(<span class="string">&#x27;#draggable-list&#x27;</span>).<span class="title function_">append</span>(listItem);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">addEventListeners</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>參考資料：<br>push：<br><a href="https://ithelp.ithome.com.tw/articles/10222922">JS 從陣列 Array 尾端新增元素的 push()</a><br><a href="https://www.oxxostudio.tw/articles/201908/js-array.html">JavaScript Array 陣列操作方法大全 ( 含 ES6 )</a></p><h3 id="3-拖曳的監聽事件"><a href="#3-拖曳的監聽事件" class="headerlink" title="3.拖曳的監聽事件"></a>3.拖曳的監聽事件</h3><ul><li>拖曳開始的監聽，元素是抓取<code>draggables</code>，後續的drop、dragenter、dragover等事件，元素是<code>.draggable-list li</code></li><li>針對要被拖曳的元素（dragSource）監聽事件</li><li>利用forEach方式，允許多個可拖曳的物件</li></ul><ul><li>抓取的元素：<br><img src="https://i.imgur.com/5G60Pmr.png" alt=""><br><img src="https://i.imgur.com/zXR4YWT.png" alt=""></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//監聽事件</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addEventListeners</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> draggables = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.draggable&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> dragListItems = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.draggable-list li&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//Dragable dot 增加監聽事件</span></span><br><span class="line"></span><br><span class="line">  draggables.<span class="title function_">forEach</span>(<span class="function"><span class="params">draggable</span> =&gt;</span> &#123;</span><br><span class="line">    draggable.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dragstart&#x27;</span>, dragStart);</span><br><span class="line">  &#125;);</span><br><span class="line">  dragListItems.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    item.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dragover&#x27;</span>, dragOver);</span><br><span class="line">    item.<span class="title function_">addEventListener</span>(<span class="string">&#x27;drop&#x27;</span>, dragDrop);</span><br><span class="line">    item.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dragenter&#x27;</span>, dragEnter);</span><br><span class="line">    item.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dragleave&#x27;</span>, dragLeave);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://pjchender.blogspot.com/2017/08/html5-drag-and-drop-api.html">[筆記] 製作可拖曳的元素（HTML5 Drag and Drop API）</a></p><h3 id="4-針對監聽事件，設置各執行的函式"><a href="#4-針對監聽事件，設置各執行的函式" class="headerlink" title="4.針對監聽事件，設置各執行的函式"></a>4.針對監聽事件，設置各執行的函式</h3><ul><li>為了能夠追蹤抓取項目，所以一開始先宣告一個索引變數。</li><li><code>dragStart()</code>:宣告<code>dragStartIndex</code>變數為抓取到的<code>li</code>-&gt;<code>data-index</code></li></ul><p><img src="https://i.imgur.com/6tMHuYr.png" alt=""></p><ul><li>有拖曳的開始，就會有結束，也就是放置(<code>dragDrop()</code>)：<code>dragEndIndex</code>同樣也是以索引來作為依據，並在設置一個交換的函式</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//要能夠持續追蹤每個項目的index，所以要有個初始變數</span></span><br><span class="line"><span class="keyword">let</span> dragStartIndex;</span><br><span class="line"><span class="comment">//拖拉的各函式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dragStart</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//console.log(&#x27;Event: &#x27;, &#x27;dragstart&#x27;);</span></span><br><span class="line">  dragStartIndex = +$(<span class="variable language_">this</span>).<span class="title function_">closest</span>(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;data-index&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(dragStartIndex);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dragOver</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="comment">// console.log(&#x27;Event: &#x27;, &#x27;dragover&#x27;);</span></span><br><span class="line">  e.<span class="title function_">preventDefault</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//設定開始的index,以及結束的index是為了交換</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dragDrop</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// console.log(&#x27;Event: &#x27;, &#x27;dragdrop&#x27;);</span></span><br><span class="line">  <span class="keyword">const</span> dragEndIndex = +$(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;data-index&#x27;</span>);</span><br><span class="line">  <span class="title function_">swapItems</span>(dragStartIndex, dragEndIndex);</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;over&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-交換索引，使物件交換位置swapItems"><a href="#5-交換索引，使物件交換位置swapItems" class="headerlink" title="5.交換索引，使物件交換位置swapItems"></a>5.交換索引，使物件交換位置<code>swapItems</code></h3><ul><li>透過抓取到的開始與結束的索引，來填入要交換的變數</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">swapItems</span>(<span class="params">fromIndex, toIndex</span>) &#123;</span><br><span class="line">  <span class="comment">//要設定交換之前，要先到dragover去設定e.preventDefault();（因為dragover會擋到交換的執行）</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> itemOne = listItems[fromIndex].<span class="title function_">find</span>(<span class="string">&#x27;.draggable&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> itemTwo = listItems[toIndex].<span class="title function_">find</span>(<span class="string">&#x27;.draggable&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//console.log(itemOne, itemTwo)</span></span><br><span class="line">  listItems[fromIndex].<span class="title function_">append</span>(itemTwo);</span><br><span class="line">  listItems[toIndex].<span class="title function_">append</span>(itemOne);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-延續拖曳監聽事件，所要執行的其他函式"><a href="#6-延續拖曳監聽事件，所要執行的其他函式" class="headerlink" title="6.延續拖曳監聽事件，所要執行的其他函式"></a>6.延續拖曳監聽事件，所要執行的其他函式</h3><ul><li><p><code>dragEnter()</code>拖曳元素進入要放置的目標位置，所觸發的事件。在此是設定要放入目標位置時，增加一個<code>class</code>的效果</p></li><li><p>進入目標位置，其相互搭配的事件就是離開<code>dragLeave()</code>，當拖曳元素離開放置位置時，所發生的事件。在此為設定，去除於原本<code>class</code>的效果。</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">dragEnter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// console.log(&#x27;Event: &#x27;, &#x27;dragenter&#x27;);</span></span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;over&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dragLeave</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// console.log(&#x27;Event: &#x27;, &#x27;dragleave&#x27;);</span></span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;over&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-核對順序"><a href="#7-核對順序" class="headerlink" title="7.核對順序"></a>7.核對順序</h3><ul><li>抓取listItems，來跑forEach，其要參照的參數是，項目、索引。</li><li>宣告<code>placeName</code>為參數<code>listItem</code>，draggable的文字字串。<ul><li>trim()用來去除字串前後的空白</li></ul></li><li>判斷句<code>placeName !== bestPlace[index]</code></li><li><code>console.log(bestPlace[index])</code>會印出，正確的順序。</li></ul><p><img src="https://i.imgur.com/xIR3X98.png" alt=""></p><ul><li>核對結果：就是分別加入<code>wrong</code>、<code>&#39;right&#39;</code>。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//核對排名順序</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkOrder</span>(<span class="params"></span>) &#123;</span><br><span class="line">  listItems.<span class="title function_">forEach</span>(<span class="function">(<span class="params">listItem, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> placeName = listItem.<span class="title function_">find</span>(<span class="string">&#x27;.draggable&#x27;</span>).<span class="title function_">text</span>().<span class="title function_">trim</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (placeName !== bestPlace[index]) &#123;</span><br><span class="line">      listItem.<span class="title function_">addClass</span>(<span class="string">&#x27;wrong&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      listItem.<span class="title function_">removeClass</span>(<span class="string">&#x27;wrong&#x27;</span>);</span><br><span class="line">      listItem.<span class="title function_">addClass</span>(<span class="string">&#x27;right&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="以下為補充資料："><a href="#以下為補充資料：" class="headerlink" title="以下為補充資料："></a>以下為補充資料：</h2><h3 id="拖曳補充資料："><a href="#拖曳補充資料：" class="headerlink" title="拖曳補充資料："></a>拖曳補充資料：</h3><p><a href="https://ourcodeworld.com/articles/read/664/top-5-best-sortable-and-draggable-list-javascript-and-jquery-plugins">Top 5: Best Sortable &amp; Draggable List JavaScript and jQuery Plugins</a><br><a href="https://ithelp.ithome.com.tw/articles/10120587">實用網頁工具庫 - jQuery UI (上) 元件篇</a></p><h3 id="使陣列隨機排序"><a href="#使陣列隨機排序" class="headerlink" title="使陣列隨機排序"></a>使陣列隨機排序</h3><ul><li>使用<code>map</code>將陣列轉換為新陣列，創造vale、以及加上sort排序值(利用<code>Math.random()</code>來產生亂數)</li><li>使用sort隨機排序，剛剛的sort值是隨機產生，再一次使用sort，來使排的順序也隨機。</li><li>最後，因為排序後陣列中的物件是<code>&#123; value: , sort:  &#125;</code>，而我們要讓畫面只顯示<code>value:</code>，所以再使用<code>map</code>將新陣列轉回只有該資料的陣列。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">createList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  [...richestPeople]</span><br><span class="line">    .<span class="title function_">map</span>(<span class="function"><span class="params">a</span> =&gt;</span> (&#123; <span class="attr">value</span>: a, <span class="attr">sort</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() &#125;))</span><br><span class="line">    .<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.<span class="property">sort</span> - b.<span class="property">sort</span>)</span><br><span class="line">    .<span class="title function_">map</span>(<span class="function"><span class="params">a</span> =&gt;</span> a.<span class="property">value</span>)</span><br><span class="line">    .<span class="title function_">forEach</span>(<span class="function">(<span class="params">person, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> listItem = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"></span><br><span class="line">      listItem.<span class="title function_">setAttribute</span>(<span class="string">&#x27;data-index&#x27;</span>, index);</span><br><span class="line"></span><br><span class="line">      listItem.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;span class=&quot;number&quot;&gt;<span class="subst">$&#123;index + <span class="number">1</span>&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;draggable&quot; draggable=&quot;true&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;p class=&quot;person-name&quot;&gt;<span class="subst">$&#123;person&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">          &lt;i class=&quot;fas fa-grip-lines&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">      `</span>;</span><br><span class="line"></span><br><span class="line">      listItems.<span class="title function_">push</span>(listItem);</span><br><span class="line"></span><br><span class="line">      draggable_list.<span class="title function_">appendChild</span>(listItem);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">addEventListeners</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a href="https://shubo.io/javascript-random-shuffle/">[筆記] 如何正確實作 JavaScript Array Random Shuffle 亂數排序演算法</a><br><a href="https://www.delftstack.com/zh-tw/howto/javascript/shuffle-array-javascript/">在 JavaScript 中對一個陣列進行隨機化或洗牌</a></li></ul><hr><h3 id="jquery-ui"><a href="#jquery-ui" class="headerlink" title="jquery ui"></a>jquery ui</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//https://stackoverflow.com/questions/6426795/what-is-disableselection-used-for-in-jquery-ui</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dragdrop</span>(<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&quot;#draggable-list&quot;</span>).<span class="title function_">sortable</span>(&#123;</span><br><span class="line">    <span class="comment">//connectWith: &quot;ul&quot;,</span></span><br><span class="line">    <span class="attr">delay</span>: <span class="number">300</span>,</span><br><span class="line">    <span class="attr">distance</span>: <span class="number">15</span>,</span><br><span class="line">    <span class="comment">//number: &quot;span:not(.number)&quot;,</span></span><br><span class="line">    <span class="attr">iframeFix</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">  &#125;).<span class="title function_">disableSelection</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="顏色"><a href="#顏色" class="headerlink" title="顏色"></a>顏色</h3><p><a href="https://www.0to255.com/f2e8cf">0-255</a><br><a href="https://webgradients.com/">漸層顏色</a><br><a href="https://coolors.co/palettes/trending">colors</a><br><a href="https://stackoverflow.com/questions/34494873/why-is-my-jquery-selector-returning-a-n-fn-init0-and-what-is-it">Why is my JQuery selector returning a n.fn.init[0], and what is it?</a></p>]]></content>
      
      
      <categories>
          
          <category> JS實作練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> drag&amp;drop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS實作- musicPlayer</title>
      <link href="/2021/01/15/js-musicPlayer/"/>
      <url>/2021/01/15/js-musicPlayer/</url>
      
        <content type="html"><![CDATA[<h2 id="觀察須製作的功能"><a href="#觀察須製作的功能" class="headerlink" title="觀察須製作的功能"></a>觀察須製作的功能</h2><p><a href="https://eva813.github.io/Eva_portfolio/musicPlayer/musicPlayer.html">成品</a></p><ol><li>播放器API的樣式</li></ol><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio">&lt;audio&gt;: The Embed Audio element</a></p><ol start="2"><li>播放時，左方的圓型圖示會旋轉。</li></ol><ul><li>先於css檔案製作符合動畫的class</li><li>在js時，依照符合的情況加入該class</li></ul><p><img src="https://i.imgur.com/3LBdMiU.png" alt=""></p><ol start="3"><li>播放時，上方會跳出播放歌曲的名稱。</li></ol><ul><li>先於css檔案製作符合動畫的class，設定<code>opacity</code>1或0，<code>translateY</code>位置的移動</li><li>在js時，依照符合的情況加入該class</li></ul><p><img src="https://i.imgur.com/U3dx7yG.png" alt=""></p><ol start="4"><li>左右按鍵可以更換曲目，同時圖片會更換</li></ol><ul><li>設定陣列，使歌曲與圖片相符</li><li>並讓前後的跳轉鍵，依照順序或條件來變化</li></ul><p><img src="https://i.imgur.com/NuxfsOb.png" alt=""></p><hr><h2 id="html部分"><a href="#html部分" class="headerlink" title="html部分"></a>html部分</h2><h3 id="跳轉按鍵"><a href="#跳轉按鍵" class="headerlink" title="跳轉按鍵"></a>跳轉按鍵</h3><ul><li>播放鍵、前/後跳轉的按鈕 </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;prev&quot;</span> <span class="attr">class</span>=<span class="string">&quot;action-btn&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-backward&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;play&quot;</span> <span class="attr">class</span>=<span class="string">&quot;action-btn  action-btn-big&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-play&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;next&quot;</span> <span class="attr">class</span>=<span class="string">&quot;action-btn&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-forward&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/w1bpDjr.png" alt=""></p><h2 id="css部分"><a href="#css部分" class="headerlink" title="css部分"></a>css部分</h2><h3 id="背景顏色"><a href="#背景顏色" class="headerlink" title="背景顏色"></a>背景顏色</h3><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient()">linear-gradient()</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 傾斜度\顏色、從哪個位置開始 */</span></span><br><span class="line">  <span class="attribute">background-image</span>:<span class="built_in">linear-gradient</span>(<span class="number">0deg</span></span><br><span class="line">  ,<span class="built_in">rgb</span>(<span class="number">247</span>, <span class="number">247</span>, <span class="number">247</span>,<span class="number">1</span>) <span class="number">23.8%</span>,</span><br><span class="line">  <span class="built_in">rgba</span>(<span class="number">252</span>,<span class="number">221</span>,<span class="number">221</span>,<span class="number">1</span>) <span class="number">92%</span> );</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Xb5PpmY.png" alt=""></p><h2 id="圖片圓形以及旋轉"><a href="#圖片圓形以及旋轉" class="headerlink" title="圖片圓形以及旋轉"></a>圖片圓形以及旋轉</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.img-container</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">110px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*圖片圓形*/</span></span><br><span class="line"><span class="selector-class">.img-container</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">object-fit</span>: cover;</span><br><span class="line"><span class="comment">/*填滿元素的寬度及高度(維持原比例)，通常會剪掉部分的物件*/</span></span><br><span class="line"> <span class="attribute">height</span>: <span class="number">110px</span>;</span><br><span class="line"> <span class="attribute">width</span>: inherit; <span class="comment">/*繼承自父層的寬度屬性值。*/</span></span><br><span class="line"> <span class="attribute">position</span>:absolute;</span><br><span class="line"> <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line"> <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"> <span class="attribute">animation</span>: rotate <span class="number">3s</span> linear infinite;</span><br><span class="line"> <span class="attribute">animation-play-state</span>: paused;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 播放class的製作 */</span></span><br><span class="line"><span class="selector-class">.music-container</span><span class="selector-class">.play</span> <span class="selector-class">.img-container</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line"> <span class="attribute">animation-play-state</span>:running;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> rotate&#123;</span><br><span class="line">  <span class="selector-tag">from</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用animation@keyframe<br><a href="https://wcc723.github.io/development/2020/10/11/img-cover/">新手前端也不該犯的錯：圖片變形</a></li></ul><p><img src="https://i.imgur.com/RfUz8Pk.png" alt=""></p><ul><li>在圖片中間加入圓形點，以看起來像光碟樣式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.img-container</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/HlnWKJb.png" alt=""></p><h3 id="播放進度條的製作"><a href="#播放進度條的製作" class="headerlink" title="播放進度條的製作"></a>播放進度條的製作</h3><ol><li>標題<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music-info</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">5</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>:<span class="number">15px</span> <span class="number">15px</span> <span class="number">0</span> <span class="number">0</span> ;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0%</span>);</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">0.3s</span> ease-in,opacity <span class="number">0.3s</span> ease-in;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.music-container</span><span class="selector-class">.play</span> <span class="selector-class">.music-info</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">   <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>將曲目標題設置背景、圓角</li><li>利用 transfor、opacity來呈現位置的變化</li></ul><p><img src="https://i.imgur.com/icBK0qt.png" alt=""></p><ul><li>修改標題位置</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*放入.music-info之中*/</span></span><br><span class="line"><span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">40px</span>);</span><br><span class="line"> <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span> <span class="number">150px</span>;</span><br></pre></td></tr></table></figure><h4 id="calc"><a href="#calc" class="headerlink" title="calc()"></a><code>calc()</code></h4><p>calc() 的運算式一樣是按照先乘除後加減進行計算<br> width: calc(100% - 40px);<br>/* 意思是 100% 的寬度 - 去 40px */<br><a href="https://5xruby.tw/posts/css-calc/">CSS： calc() 數值運算</a></p><p><img src="https://i.imgur.com/er3G6Wd.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.music-info</span> <span class="selector-tag">h4</span>&#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/qiWmxmu.png" alt=""></p><p>2.進度條（progress）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.progress-container</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.progress</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fe8daa</span>;</span><br><span class="line"> <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0%</span>;</span><br><span class="line">  <span class="attribute">transition</span>: width .<span class="number">1s</span> linear ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/uPUHWcM.png" alt=""></p><h2 id="js部分"><a href="#js部分" class="headerlink" title="js部分"></a>js部分</h2><h3 id="1-音樂播放鍵-播放與停止"><a href="#1-音樂播放鍵-播放與停止" class="headerlink" title="1.音樂播放鍵(播放與停止)"></a>1.音樂播放鍵(播放與停止)</h3><ul><li>分別有兩個函式：<code>playMusic()</code> 、<code>pauseMusic()</code></li><li>在css設定<code>.play</code>的css，並於js綁定事件，加入css的效果(使圖片如同轉盤，會旋轉)</li><li>在icon的部分：在播放時：為暫停鍵圖示;在暫停時：為播放鍵的圖示</li><li>透過play()、pause()，讓音源播放與暫停</li></ul><h3 id="play-、pause"><a href="#play-、pause" class="headerlink" title="play()、pause()"></a><code>play()</code>、<code>pause()</code></h3><p>因為play()、pause()是DOM元素，不是jQuery的function，而要用jQuery取得DOM元素<br><code>$(&#39;#audio&#39;).get(0).play()</code> =&gt;<code>$(&#39;#audio&#39;)[0].play()</code><br><code>$(&#39;#audio&#39;).get(0).pause()</code> =&gt;<code>$(&#39;#audio&#39;)[0].pause()</code></p><p>參考資料：<br><a href="https://learn.jquery.com/using-jquery-core/faq/how-do-i-pull-a-native-dom-element-from-a-jquery-object/">How do I pull a native DOM element from a jQuery object?</a><br><a href="https://stackoverflow.com/questions/4646998/play-pause-html-5-video-using-jquery">Play/pause HTML 5 video using JQuery</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//播放音樂</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">playMusic</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  $(<span class="string">&#x27;.music-container&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;play&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;#play&#x27;</span>).<span class="title function_">find</span>(<span class="string">&#x27;i&#x27;</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;fa-play&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;#play&#x27;</span>).<span class="title function_">find</span>(<span class="string">&#x27;i&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;fa-pause&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;#audio&#x27;</span>).<span class="title function_">get</span>(<span class="number">0</span>).<span class="title function_">play</span>();</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//停止音樂</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">pauseMusic</span>(<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&#x27;.music-container&#x27;</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;play&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;#play&#x27;</span>).<span class="title function_">find</span>(<span class="string">&#x27;i&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;fa-play&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;#play&#x27;</span>).<span class="title function_">find</span>(<span class="string">&#x27;i&#x27;</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;fa-pause&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;#audio&#x27;</span>).<span class="title function_">get</span>(<span class="number">0</span>).<span class="title function_">pause</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="綁定事件："><a href="#綁定事件：" class="headerlink" title="綁定事件："></a>綁定事件：</h4>如果音樂是播放狀態的話，就執行<code>pauseMusic()</code>，反之，音樂不處於波方時，執行<code>playMusic()</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#play&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">   <span class="keyword">var</span> hasPlay = $(<span class="string">&#x27;#music-container&#x27;</span>).<span class="title function_">hasClass</span>(<span class="string">&#x27;play&#x27;</span>);</span><br><span class="line">   <span class="comment">//var a = $(&#x27;#audio&#x27;).paused;</span></span><br><span class="line">   <span class="keyword">if</span> (hasPlay) &#123;</span><br><span class="line">     <span class="title function_">pauseMusic</span>();</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="title function_">playMusic</span>();</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-載入音樂"><a href="#2-載入音樂" class="headerlink" title="2.載入音樂"></a>2.載入音樂</h3><ul><li>將歌曲名稱建立陣列，並將此回傳到建立的函式中</li><li>設定預設的索引<code>let songIndex = 1</code></li><li>使用 attr( 屬性名, 屬性值 )，獲取屬性的值，在這部分，透過歌曲名稱來取得歌曲與照片</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> songs_name = [<span class="string">&#x27;hey&#x27;</span>, <span class="string">&#x27;summer&#x27;</span>, <span class="string">&#x27;ukulele&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> songIndex = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loadSongs</span>(<span class="params">song</span>) &#123;</span><br><span class="line">  <span class="comment">//console.log(song);</span></span><br><span class="line">  $(<span class="string">&#x27;#title&#x27;</span>).<span class="title function_">text</span>(song);</span><br><span class="line">  </span><br><span class="line">  $(<span class="string">&#x27;#audio&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">`music/<span class="subst">$&#123;song&#125;</span>.mp3`</span>);</span><br><span class="line">  $(<span class="string">&#x27;#cover&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">`img/<span class="subst">$&#123;song&#125;</span>.jpg`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Initially load song details into DOM</span></span><br><span class="line"><span class="title function_">loadSongs</span>(songs_name[songIndex]);</span><br></pre></td></tr></table></figure><h4 id="綁定於下一首、前一首的圖示被點擊時"><a href="#綁定於下一首、前一首的圖示被點擊時" class="headerlink" title="綁定於下一首、前一首的圖示被點擊時"></a>綁定於下一首、前一首的圖示被點擊時</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#next&#x27;</span>).<span class="title function_">click</span>(nextSong)</span><br><span class="line">  $(<span class="string">&#x27;#prev&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123; <span class="title function_">prevSong</span>();</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><ul><li><p>查看函式回傳</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">loadSongs</span>(songs_name);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/je9hXJY.png" alt=""></p></li><li><p>要抓取到該索引</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">loadSongs</span>(songs_name[songIndex]);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/5not1Ji.png" alt=""><br>此段落執行時，出現問題：<br><img src="https://i.imgur.com/dj4H5hb.png" alt=""></p></li><li><p>搜尋到的處理方式：在html的<code>head</code><link rel="shortcut icon" href="#"><br><a href="https://stackoverflow.com/questions/31075893/im-getting-favicon-ico-error/31329574">I’m getting favicon.ico error</a></p></li></ul><p>參考資料：<br><a href="https://iter01.com/470327.html">jquery prop和attr的區別</a><br><a href="https://cythilya.github.io/2017/09/10/jquery-attr-vs-prop/">jQuery .attr() vs .prop()</a></p><h3 id="3-左右鍵的跳轉"><a href="#3-左右鍵的跳轉" class="headerlink" title="3.左右鍵的跳轉"></a>3.左右鍵的跳轉</h3><ul><li>下一首歌曲，與跳至前一首歌曲，兩個函式的撰寫有異曲同工之妙，只有在設條條件上的差異。</li><li><code>nextSong()</code>:設定條件為歌曲索引<code>songIndex</code>比 歌曲陣列長度-1<code>songs_name.length - 1</code>還要小，我們就要將索引+1。<ul><li>例如這裏預設的索引為1，所以在點擊當下，判斷&lt;<code>songs_name.length - 1</code>，所以需加1，索引變成2，跳至下一首 ‘ukulele’</li></ul></li><li>prevSong()：設定條件為歌曲索引<code>songIndex</code>比0大，就要索引-1，跳轉至上一首歌曲。若沒符合的話，索引就等於<code>songs_name.length - 1</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//歌曲的索引，如果比歌曲總數-1還小，就將索引加1，跳轉下一首</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">nextSong</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (songIndex &lt; songs_name.<span class="property">length</span> - <span class="number">1</span>) &#123; songIndex += <span class="number">1</span>; &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    songIndex = <span class="number">0</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="title function_">loadSongs</span>(songs_name[songIndex]);</span><br><span class="line">  <span class="title function_">playMusic</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//跳轉前一首</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">prevSong</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//如果索引沒有大於0。就會播索引[2]</span></span><br><span class="line">  <span class="keyword">if</span> (songIndex &gt; <span class="number">0</span>) &#123; songIndex -= <span class="number">1</span>; &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    songIndex = songs_name.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="title function_">loadSongs</span>(songs_name[songIndex]);</span><br><span class="line">  <span class="title function_">playMusic</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>參考資料：<br><a href="https://www.geeksforgeeks.org/create-a-music-player-using-javascript/">Create a Music Player using JavaScript</a></p><h3 id="4-點擊進度條，可以跳轉音樂位置"><a href="#4-點擊進度條，可以跳轉音樂位置" class="headerlink" title="4.點擊進度條，可以跳轉音樂位置"></a>4.點擊進度條，可以跳轉音樂位置</h3><h4 id="1-顯示粉色進度條"><a href="#1-顯示粉色進度條" class="headerlink" title="(1).顯示粉色進度條"></a>(1).顯示粉色進度條</h4><ul><li>duration：音源的時間(一樣是使用get方式取得)</li><li>currentTime：音樂播放的當前位置（以秒計）</li><li>progressBar：進度條</li><li>計算百分比：<code>(currentTime / duration) * 100</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顯示進度條</span></span><br><span class="line"><span class="comment">//為何取[0]</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleProgress</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> duration = $(<span class="string">&#x27;#audio&#x27;</span>).<span class="title function_">get</span>(<span class="number">0</span>).<span class="property">duration</span>;</span><br><span class="line">  <span class="comment">//console.log(duration)</span></span><br><span class="line">  <span class="keyword">var</span> currentTime = $(<span class="string">&#x27;#audio&#x27;</span>)[<span class="number">0</span>].<span class="property">currentTime</span>;</span><br><span class="line">  <span class="comment">//console.log(currentTime)</span></span><br><span class="line">  <span class="keyword">const</span> progressBar = $(<span class="string">&#x27;#progress&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> progressPercent = (currentTime / duration) * <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//currentTime目前播放時間去與影片長度duration轉換成百分比，即可得到目前播放時間的百分比</span></span><br><span class="line"></span><br><span class="line">  progressBar.<span class="title function_">css</span>(<span class="string">&#x27;width&#x27;</span>, <span class="string">`<span class="subst">$&#123;progressPercent&#125;</span>%`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-點擊進度條，會跳轉到該位置播放"><a href="#2-點擊進度條，會跳轉到該位置播放" class="headerlink" title="(2).點擊進度條，會跳轉到該位置播放"></a>(2).點擊進度條，會跳轉到該位置播放</h4><ul><li>width:獲取該進度條容器的寬度</li><li>抓取點擊位置：<ul><li>e.pageX:取得滑鼠在頁面裡的位置</li><li>elm.offset().left:絕對座標X軸</li></ul></li><li>將（點擊位置除以進度條的總長）乘以 音樂的時間長度，就可以取得點擊的時間位置<code>theTime = ((xPos / width))* duration;</code></li><li>最後現在時間設為，計算好的點擊時間</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//點擊進度條</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//https://ithelp.ithome.com.tw/articles/10194871</span></span><br><span class="line"><span class="comment">//https://tools.wingzero.tw/article/sn/102</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;#progress-container&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> width = $(<span class="string">&#x27;#progress-container&#x27;</span>).<span class="title function_">width</span>(); <span class="comment">//216.25</span></span><br><span class="line">  <span class="comment">//console.log(width);</span></span><br><span class="line">  <span class="comment">//取得點擊位置</span></span><br><span class="line">  <span class="keyword">var</span> elm = $(<span class="variable language_">this</span>);</span><br><span class="line">  <span class="keyword">var</span> xPos = e.<span class="property">pageX</span> - elm.<span class="title function_">offset</span>().<span class="property">left</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//console.log(xPos);</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> duration = $(<span class="string">&#x27;#audio&#x27;</span>)[<span class="number">0</span>].<span class="property">duration</span>;</span><br><span class="line">  <span class="keyword">var</span> theTime = ((xPos / width))</span><br><span class="line">    * duration;</span><br><span class="line">  <span class="comment">//console.log(theTime);</span></span><br><span class="line">  $(<span class="string">&#x27;#audio&#x27;</span>)[<span class="number">0</span>].<span class="property">currentTime</span> = theTime;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>執行過程，利用console來查看</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">pageX</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(elm.<span class="title function_">offset</span>().<span class="property">left</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(xPos)</span><br></pre></td></tr></table></figure><p>參考資料：<br><a href="https://tools.wingzero.tw/article/sn/102">取得滑鼠位置、元素位置與區塊內的相對位置</a></p><h3 id="5-歌曲播完後，換下一首"><a href="#5-歌曲播完後，換下一首" class="headerlink" title="5.歌曲播完後，換下一首"></a>5.歌曲播完後，換下一首</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#audio&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;ended&#x27;</span>,nextSong);</span><br></pre></td></tr></table></figure><p>參考資料：<br><a href="https://stackoverflow.com/questions/39325637/audio-auto-play-next-song-when-previous-is-finished/52228798">audio auto play next song when previous is finished</a></p><h2 id="6-增加隨機的變換背景色彩"><a href="#6-增加隨機的變換背景色彩" class="headerlink" title="6.增加隨機的變換背景色彩"></a>6.增加隨機的變換背景色彩</h2><ul><li>色彩為0-256;而因為想取的較亮的色系，所以取64-256<ul><li><code>Math.random()</code> 會回傳一個偽隨機小數 (pseudo-random) 介於0到1之間(包含 0，不包含1) </li><li><code>Math.floor()</code>會將所有的小數無條件捨去到比自身小的最大整數</li><li><code>Math.floor(Math.random() * 255) + 64</code>就會取得64 to 256</li></ul></li><li>宣告變數<code>bgColor</code>為rdba(red,green,blue,a)</li><li>最後將此函式，放入<code>loadSongs()</code>函式當中，每次播放、跳轉歌曲，同時背景顏色也會改變<br><img src="https://i.imgur.com/piYCbc5.png" alt=""></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">random_bg_color</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// Get a random number between 64 to 256 </span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// (for getting lighter colors) </span></span><br><span class="line">  <span class="keyword">let</span> red = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">255</span>) + <span class="number">64</span>;</span><br><span class="line">  <span class="keyword">let</span> green = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">255</span>) + <span class="number">64</span>;</span><br><span class="line">  <span class="keyword">let</span> blue = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">255</span>) + <span class="number">64</span>;</span><br><span class="line">  <span class="keyword">let</span> a = <span class="number">0.5</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Construct a color withe the given values </span></span><br><span class="line">  <span class="keyword">let</span> bgColor = <span class="string">&quot;rgba(&quot;</span> + red + <span class="string">&quot;, &quot;</span> + green + <span class="string">&quot;, &quot;</span> + blue + <span class="string">&quot;, &quot;</span> + a + <span class="string">&quot;)&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> bg = $(<span class="variable language_">document</span>.<span class="property">body</span>).<span class="title function_">css</span>(<span class="string">&#x27;background&#x27;</span>, <span class="string">`<span class="subst">$&#123;bgColor&#125;</span>`</span>);</span><br><span class="line">  <span class="comment">// Set the background to the new color </span></span><br><span class="line">  bg = bgColor;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(bg)</span><br><span class="line"></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>參考資料：<br><a href="https://www.geeksforgeeks.org/create-a-music-player-using-javascript/">Create a Music Player using JavaScript</a><br><a href="https://stackoverflow.com/questions/20790579/wont-math-floormath-random-255-generate-uneven-probabilities">Won’t Math.floor(Math.random() * 255) generate uneven probabilities?</a><a href="https://ithelp.ithome.com.tw/articles/10197904">[筆記][JavaScript]用Math.random()取得亂數的技巧</a></p>]]></content>
      
      
      <categories>
          
          <category> JS實作練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> append </tag>
            
            <tag> jQuery  </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS實作- 表單驗證</title>
      <link href="/2021/01/13/form-validator/"/>
      <url>/2021/01/13/form-validator/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/Vhxlk8D.png" alt=""></p><h2 id="觀察功能"><a href="#觀察功能" class="headerlink" title="觀察功能"></a>觀察功能</h2><ol><li>製作一個會員申請的表單<ul><li>帳號</li><li>email</li><li>密碼</li></ul></li><li>輸入框的顏色變化</li><li>判斷條件的設置</li></ol><h2 id="任務拆解"><a href="#任務拆解" class="headerlink" title="任務拆解"></a>任務拆解</h2><h3 id="抓出要互動的元素"><a href="#抓出要互動的元素" class="headerlink" title="抓出要互動的元素"></a>抓出要互動的元素</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> form = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#form&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> username = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#username&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> email = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#email&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> password = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#password&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> password2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#password2&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>獲取物件層次中的父物件</li><li>針對指定元素取得或設置指定的class</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//show input error message</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showError</span>(<span class="params">input, message</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> formControl = input.<span class="property">parentElement</span>;</span><br><span class="line">  formControl.<span class="property">className</span> = <span class="string">&#x27;form-control error&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">form.<span class="title function_">addEventListener</span>(<span class="string">&#x27;submit&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  e.<span class="title function_">preventDefault</span>();</span><br><span class="line">  <span class="keyword">if</span> (username.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_">showError</span>(username, <span class="string">&#x27;Username is required&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">showSuccess</span>(username);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> small = formControl.<span class="title function_">querySelector</span>(<span class="string">&#x27;small&#x27;</span>);</span><br><span class="line">  small.<span class="property">innerText</span> = <span class="string">&#x27;Username is required&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>修改顯示文字</li></ul><p><img src="https://i.imgur.com/NvhXJk8.png" alt=""></p><h4 id="成功輸入"><a href="#成功輸入" class="headerlink" title="成功輸入"></a>成功輸入</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//show success outline</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showSuccess</span>(<span class="params">input</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> formControl = input.<span class="property">parentElement</span>;</span><br><span class="line">  formControl.<span class="property">className</span> = <span class="string">&#x27;form-control success&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="複製相同條件判斷"><a href="#複製相同條件判斷" class="headerlink" title="複製相同條件判斷"></a>複製相同條件判斷</h3><ul><li>事件為點擊送出之後，會進行條件判斷</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//event listener</span></span><br><span class="line">form.<span class="title function_">addEventListener</span>(<span class="string">&#x27;submit&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  e.<span class="title function_">preventDefault</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (username.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_">showError</span>(username, <span class="string">&#x27;Username is required&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">showSuccess</span>(username);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (email.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_">showError</span>(email, <span class="string">&#x27;Email is required&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">showSuccess</span>(email);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (password.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_">showError</span>(password, <span class="string">&#x27;Password is required&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">showSuccess</span>(password);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (password2.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_">showError</span>(password2, <span class="string">&#x27;Password 2 is required&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">showSuccess</span>(password2);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/shKtSSS.png" alt=""></p><h3 id="設定符合的驗證"><a href="#設定符合的驗證" class="headerlink" title="設定符合的驗證"></a>設定符合的驗證</h3><ul><li>email的輸入應有規範樣式</li><li>使用正則表達式</li></ul><p><img src="https://i.imgur.com/vVVWyGG.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//check email is valid</span></span><br><span class="line"><span class="comment">//js email regex</span></span><br><span class="line"><span class="comment">//https://ithelp.ithome.com.tw/articles/10094951</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isValiEmail</span>(<span class="params">email</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> re = <span class="regexp">/^(([^&lt;&gt;()[\]\\.,;:\s@&quot;]+(\.[^&lt;&gt;()[\]\\.,;:\s@&quot;]+)*)|(&quot;.+&quot;))@((\[[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]&#123;2,&#125;))$/</span>;</span><br><span class="line">  <span class="keyword">return</span> re.<span class="title function_">test</span>(<span class="title class_">String</span>(email).<span class="title function_">toLowerCase</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"> <span class="keyword">if</span> (email.<span class="property">value</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_">showError</span>(email, <span class="string">&#x27;Email is required&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="title function_">isValiEmail</span>(email.<span class="property">value</span>)) &#123;</span><br><span class="line">    <span class="title function_">showError</span>(email, <span class="string">&#x27;Email is not valid&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">showSuccess</span>(email);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/gdkHO9O.png" alt=""></p><h4 id="整合簡化-gt-forEach"><a href="#整合簡化-gt-forEach" class="headerlink" title="整合簡化 =&gt;forEach"></a>整合簡化 =&gt;forEach</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Check required fields</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkRequired</span>(<span class="params">inputArr</span>) &#123;</span><br><span class="line">  inputArr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">input</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (input.<span class="property">value</span>.<span class="title function_">trim</span>() === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">      <span class="title function_">showError</span>(input, <span class="string">&#x27;is required&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">showSuccess</span>(input);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改showError，套入名稱</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (input.<span class="property">value</span>.<span class="title function_">trim</span>() === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">//console.log(input.id);//會顯示input的所有id</span></span><br><span class="line">      <span class="title function_">showError</span>(input, <span class="string">`<span class="subst">$&#123;input.id&#125;</span>is required`</span>);</span><br></pre></td></tr></table></figure><h3 id="將getFieldName-function拉出"><a href="#將getFieldName-function拉出" class="headerlink" title="將getFieldName() function拉出"></a>將getFieldName() function拉出</h3><ul><li>製作訊息的第一個字母大寫</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Check required fields</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkRequired</span>(<span class="params">inputArr</span>) &#123;</span><br><span class="line">  inputArr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">input</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (input.<span class="property">value</span>.<span class="title function_">trim</span>() === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">//console.log(input.id);//會顯示input的所有id</span></span><br><span class="line">      <span class="title function_">showError</span>(input, <span class="string">`<span class="subst">$&#123;getFieldName(input)&#125;</span> is required`</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">showSuccess</span>(input);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//getFieldName</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getFieldName</span>(<span class="params">input</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> input.<span class="property">id</span>.<span class="title function_">charAt</span>(<span class="number">0</span>).<span class="title function_">toUpperCase</span>() + input.<span class="property">id</span>.<span class="title function_">slice</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="comment">//將第一個字charAt(0)，變大寫，並再接續後面的字slice(1)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>charAt()从一个字符串中返回指定的字符,<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/charAt">String.prototype.charAt()</a></li></ul><h2 id="長度檢查"><a href="#長度檢查" class="headerlink" title="長度檢查"></a>長度檢查</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Check input length</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkLength</span>(<span class="params">input, min, max</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (input.<span class="property">value</span>.<span class="property">length</span> &lt; min) &#123;</span><br><span class="line">    <span class="title function_">showError</span>(</span><br><span class="line">      input,</span><br><span class="line">      <span class="string">`<span class="subst">$&#123;getFieldName(input)&#125;</span> must be at least <span class="subst">$&#123;min&#125;</span> characters`</span></span><br><span class="line">    );</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (input.<span class="property">value</span>.<span class="property">length</span> &gt; max) &#123;</span><br><span class="line">    <span class="title function_">showError</span>(</span><br><span class="line">      input,</span><br><span class="line">      <span class="string">`<span class="subst">$&#123;getFieldName(input)&#125;</span> must be less than <span class="subst">$&#123;max&#125;</span> characters`</span></span><br><span class="line">    );</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">showSuccess</span>(input);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/sAvU95T.png" alt=""></p><h3 id="密碼檢查"><a href="#密碼檢查" class="headerlink" title="密碼檢查"></a>密碼檢查</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// check password match</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkPasswordMatch</span>(<span class="params">input1, input2</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (input1.<span class="property">value</span> !== input2.<span class="property">value</span>) &#123;</span><br><span class="line">    <span class="title function_">showError</span>(input2, <span class="string">&#x27;Password do not match&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/62UwLS7.png" alt=""></p><p>參考資料：<br><a href="https://medium.com/change-or-die/javascript%E5%88%9D%E5%AD%B8-dom%E5%B8%B8%E7%94%A8%E5%B1%AC%E6%80%A7%E8%88%87%E6%96%B9%E6%B3%95-ef851afdb65a">JavaScript初學：DOM常用屬性與方法</a></p>]]></content>
      
      
      <categories>
          
          <category> JS實作練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>認識什麼是LocalStorage</title>
      <link href="/2021/01/10/localstorage/"/>
      <url>/2021/01/10/localstorage/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/qCvmh4b.png" alt=""></p><h2 id="認識-Web-Storage："><a href="#認識-Web-Storage：" class="headerlink" title="認識 Web Storage："></a>認識 Web Storage：</h2><p>HTML5 的 Web Storage 是一種可讓網頁將資料儲存於本地端的技術，其作用如同 cookie。</p><p>Cookie 儲存空間很小，最多僅能儲存4KB的資料。<br>HTML5 Web Storage 的儲存空間則大得多(儲存資料容量至少5MB以上)。</p><p><img src="https://i.imgur.com/tq8wugy.png" alt=""></p><h2 id="localStorage-與-sessionStorage"><a href="#localStorage-與-sessionStorage" class="headerlink" title="localStorage 與  sessionStorage"></a>localStorage 與  sessionStorage</h2><p>Web Storage 提供兩個物件可以將資料存在 client 端，一種是 localStorage，另一種是 sessionStorage</p><ul><li>localStorage:可以跨瀏覽器分頁（tab）存取，且資料存取沒有期限，除非手動從本地端清除。</li><li>sessionStorage:生命週期較短，每次分頁或瀏覽器關掉後就會清除。</li></ul><p>基本操作：</p><ul><li>設置資料：<code>localStorage.setItem(key, value)</code></li><li>取得資料：<code>let storageValue = localStorage.getItem(key, value)</code></li><li>清除資料：<code>localStorage.removeItem(key)</code></li><li>清除全部資料：<code>localStorage.clear()</code><blockquote><p>只要將localStorage替換sessionStorage即可</p></blockquote></li></ul><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>儲存在本地端的資料，格式為 key : value，需注意的是「value 的型態只有 String」!</p><h2 id="找到儲存的資料"><a href="#找到儲存的資料" class="headerlink" title="找到儲存的資料"></a>找到儲存的資料</h2><ul><li>在 DevTools console </li></ul><p><img src="https://i.imgur.com/jZNIas5.png" alt=""></p><p><img src="https://i.imgur.com/7SkvJ8q.png" alt=""></p><p><img src="https://i.imgur.com/ZoLQ4yV.png" alt=""></p><h2 id="JSON-字串轉換"><a href="#JSON-字串轉換" class="headerlink" title="JSON 字串轉換"></a>JSON 字串轉換</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( arr + <span class="string">&quot; is &quot;</span> + <span class="title function_">typeof</span>(arr));</span><br><span class="line"><span class="comment">// 1,2,c is object</span></span><br></pre></td></tr></table></figure><h4 id="1-轉換成字串-JSON-stringify"><a href="#1-轉換成字串-JSON-stringify" class="headerlink" title="1.轉換成字串 JSON.stringify"></a>1.轉換成字串 JSON.stringify</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrToStr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(arr);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/0lfiqLV.png" alt=""></p><h4 id="2-轉換回原本格式-JSON-parse"><a href="#2-轉換回原本格式-JSON-parse" class="headerlink" title="2.轉換回原本格式 JSON.parse"></a>2.轉換回原本格式 JSON.parse</h4><ul><li>會把一個JSON字串轉換成 JavaScript的數值或是物件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> parse = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(arrToStr);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/3chwLJF.png" alt=""></p><p>參考資料：<br><a href="https://medium.com/%E9%BA%A5%E5%85%8B%E7%9A%84%E5%8D%8A%E8%B7%AF%E5%87%BA%E5%AE%B6%E7%AD%86%E8%A8%98/javascript-localstorage-%E7%9A%84%E4%BD%BF%E7%94%A8-e0da6f402453">[JavaScript] localStorage 的使用</a><br><a href="https://yakimhsu.com/project/project_w7_storage.html">[第七週] 瀏覽器資料儲存 - Cookie、LocalStorage、SessionStorage</a><br><a href="https://ithelp.ithome.com.tw/articles/10223253">[Day16] JavaScript - 前端資料存</a><br><a href="https://tools.wingzero.tw/article/sn/28">HTML5 的 Web Storage- local storage 與 session storage</a><br><a href="https://ithelp.ithome.com.tw/articles/10203525">Day20 localStorage、sessionStorage</a><br><a href="https://medium.com/itsems-frontend/javascript-json-stringify-and-json-parse-7a1251d3824c">[JavaScript] JSON.stringify() and JSON.parse()：變 JSON 和變物件</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> LocalStorage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS實作- expense tracker 記帳簿</title>
      <link href="/2021/01/10/js-expenseTracker/"/>
      <url>/2021/01/10/js-expenseTracker/</url>
      
        <content type="html"><![CDATA[<p>完成後的<a href="https://eva813.github.io/Eva_portfolio/expenseTracker/expenseTracker.html">成品</a><br><img src="https://i.imgur.com/VSjpRSa.png" alt=""></p><h1 id="觀察須製作的功能"><a href="#觀察須製作的功能" class="headerlink" title="觀察須製作的功能"></a>觀察須製作的功能</h1><ol><li>重新整理網頁後，保有過去執行的狀態：localstorage<ul><li>實作內有使用:</li><li>localstorage:setItem,getItem</li><li>jason.stringfy/jason.parse</li></ul></li></ol><p><img src="https://i.imgur.com/abUVHGM.png" alt=""></p><p><img src="https://i.imgur.com/c53IDMj.png" alt=""></p><ol start="2"><li>在new transation輸入資料後，會將資料傳入history中<ul><li>add transation之後，頁面不會刷新(spa)(e.preventdefault)</li></ul></li><li>摸到history中的項目，會出現刪除符號，點擊後刪除</li></ol><p><img src="https://i.imgur.com/X06EsA4.png" alt=""></p><ol start="4"><li>輸入的金額，會顯示於上方income、expense，並且計算總額<ul><li>有正負值</li><li>計算收入、花費<br><img src="https://i.imgur.com/uofQVuf.png" alt=""></li></ul></li></ol><hr><h1 id="呈現完整語法"><a href="#呈現完整語法" class="headerlink" title="呈現完整語法"></a>呈現完整語法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//預設值的設置，取得存在本地的資料或是空陣列</span></span><br><span class="line">  <span class="keyword">var</span> transactions = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;Transactions&#x27;</span>)) || [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">//陣列初始</span></span><br><span class="line">  <span class="keyword">if</span> (transactions.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="title function_">initHistory</span>(transactions);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//點擊按鈕的事件</span></span><br><span class="line">  $(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">    <span class="comment">//console.log(&#x27;click&#x27;);</span></span><br><span class="line">    <span class="comment">//取得表格中的值</span></span><br><span class="line">    <span class="keyword">const</span> text_val = $(<span class="string">&#x27;#text&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">const</span> amount_val = $(<span class="string">&#x27;#amount&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">let</span> id = <span class="title function_">generateID</span>();</span><br><span class="line"></span><br><span class="line">    <span class="title function_">addTransactions</span>(id, text_val, amount_val, transactions);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//推入陣列</span></span><br><span class="line">    transactions.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">id</span>: id,</span><br><span class="line">      <span class="attr">name</span>: text_val,</span><br><span class="line">      <span class="attr">amount</span>: amount_val</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;Transactions&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(transactions));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="title function_">updateValue</span>(transactions);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//在list中插入</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addTransactions</span>(<span class="params">id, name, amount, transactions</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;amount:&#x27;</span>, amount);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">Transaction</span>_str = $(<span class="string">&#x27;&lt;li&gt;&lt;/li&gt;&#x27;</span>).<span class="title function_">appendTo</span>(<span class="string">&#x27;#list&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="title class_">Transaction</span>_str.<span class="title function_">addClass</span>(amount &lt; <span class="number">0</span> ? <span class="string">&#x27;minus&#x27;</span> : <span class="string">&#x27;plus&#x27;</span>);</span><br><span class="line">  <span class="title class_">Transaction</span>_str.<span class="title function_">html</span>(<span class="string">`<span class="subst">$&#123;name&#125;</span>&lt;span&gt; <span class="subst">$&#123;amount&#125;</span>&lt;/span&gt;&lt;button class=&quot;delete-btn&quot;  data-id=&quot;<span class="subst">$&#123;id&#125;</span>&quot;&gt;x&lt;/button&gt;`</span>);</span><br><span class="line">  $(<span class="string">&#x27;#list&#x27;</span>).<span class="title function_">append</span>(<span class="title class_">Transaction</span>_str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  $(<span class="string">&#x27;#text&#x27;</span>).<span class="title function_">val</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;#amount&#x27;</span>).<span class="title function_">val</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//刪除鈕 要交易交出後再綁事件</span></span><br><span class="line">  $(<span class="string">&#x27;.delete-btn&#x27;</span>).<span class="title function_">last</span>().<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">remove</span>();</span><br><span class="line">    <span class="keyword">let</span> id = $(<span class="variable language_">this</span>).<span class="title function_">data</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">    <span class="comment">//console.log(id);</span></span><br><span class="line">    <span class="title function_">deleteFromLocalstorage</span>(transactions, id); <span class="comment">//要記得傳入id</span></span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//從localstorage刪除</span></span><br><span class="line"><span class="comment">//要記得在參數放入id</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">deleteFromLocalstorage</span>(<span class="params">transactions, id</span>) &#123;</span><br><span class="line">  transactions.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item, index, arr</span>) &#123;</span><br><span class="line">    <span class="comment">//console.log(&#x27;item&#x27;, item);</span></span><br><span class="line">    <span class="comment">//console.log(&#x27;index&#x27;, index);</span></span><br><span class="line">    <span class="comment">//console.log(&#x27;arr&#x27;, arr);</span></span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">id</span> === id) &#123;</span><br><span class="line">      arr.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//迴圈刪除後，要儲存到localStorage才有確實刪去</span></span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;Transactions&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(transactions));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate random ID</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateID</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">100000000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//數值更新計算</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateValue</span>(<span class="params">transactions</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> amounts_arr = transactions.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">transaction</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> transaction.<span class="property">amount</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(amounts_arr);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//計算加總 </span></span><br><span class="line">  <span class="keyword">var</span> total = <span class="number">0</span>;</span><br><span class="line">  $.<span class="title function_">each</span>(amounts_arr, <span class="keyword">function</span> (<span class="params"></span>) &#123; total += <span class="built_in">parseFloat</span>((<span class="variable language_">this</span>)) || <span class="number">0</span>; &#125;);</span><br><span class="line">  <span class="comment">//傳回YOUR BALANCE</span></span><br><span class="line">  $(<span class="string">&#x27;#balance&#x27;</span>).<span class="title function_">text</span>(<span class="string">`$<span class="subst">$&#123;total&#125;</span>`</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(total);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//*************************** */</span></span><br><span class="line">  <span class="comment">//從陣列找出&gt;0的值，放置income</span></span><br><span class="line">  <span class="comment">//console.log(amounts)</span></span><br><span class="line">  <span class="keyword">var</span> income = amounts_arr.<span class="title function_">filter</span>(</span><br><span class="line">    <span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> item &gt; <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(income);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> totalIncome = <span class="number">0</span>;</span><br><span class="line">  $.<span class="title function_">each</span>(income, <span class="keyword">function</span> (<span class="params"></span>) &#123; totalIncome += <span class="built_in">parseFloat</span>((<span class="variable language_">this</span>)) || <span class="number">0</span>; &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(totalIncome); <span class="comment">//回傳220</span></span><br><span class="line">  <span class="comment">//傳回到income</span></span><br><span class="line">  $(<span class="string">&#x27;#money-plus&#x27;</span>).<span class="title function_">text</span>(<span class="string">`$<span class="subst">$&#123;totalIncome&#125;</span>`</span>);</span><br><span class="line">  <span class="comment">//***************************** */</span></span><br><span class="line">  <span class="comment">//從陣列找出&lt;0的值，放置income</span></span><br><span class="line">  <span class="keyword">var</span> expense = amounts_arr.<span class="title function_">filter</span>(</span><br><span class="line">    <span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> item &lt; <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(expense);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> totalExpense = <span class="number">0</span>;</span><br><span class="line">  $.<span class="title function_">each</span>(expense, <span class="keyword">function</span> (<span class="params"></span>) &#123; totalExpense += <span class="built_in">parseFloat</span>((<span class="variable language_">this</span>)) || <span class="number">0</span>; &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(totalExpense);</span><br><span class="line">  <span class="comment">//傳回到expense</span></span><br><span class="line">  $(<span class="string">&#x27;#money-minus&#x27;</span>).<span class="title function_">text</span>(<span class="string">`$<span class="subst">$&#123;totalExpense&#125;</span>`</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//init</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initHistory</span>(<span class="params">transactions</span>) &#123;</span><br><span class="line">  transactions.<span class="title function_">forEach</span>(<span class="function"><span class="params">transaction</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">addTransactions</span>(transaction.<span class="property">id</span>, transaction.<span class="property">name</span>, transaction.<span class="property">amount</span>, transactions);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="title function_">updateValue</span>(transactions);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="各項目拆解："><a href="#各項目拆解：" class="headerlink" title="各項目拆解："></a>各項目拆解：</h1><h2 id="add-transations按下去之後，頁面不刷新，直接將資料傳入紀錄中"><a href="#add-transations按下去之後，頁面不刷新，直接將資料傳入紀錄中" class="headerlink" title="add transations按下去之後，頁面不刷新，直接將資料傳入紀錄中"></a><code>add transations</code>按下去之後，頁面不刷新，直接將資料傳入紀錄中</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;click&#x27;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//點擊後，有印出click，但很快的刷新頁面</span></span><br></pre></td></tr></table></figure><ul><li>加入<code>e.preventDefault();</code> 用來阻止預設動作的發生</li></ul><p><img src="https://i.imgur.com/4y0J1vA.png" alt=""></p><h2 id="讓transation輸入後顯示"><a href="#讓transation輸入後顯示" class="headerlink" title="讓transation輸入後顯示"></a>讓transation輸入後顯示</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;click&#x27;</span>);</span><br><span class="line">    <span class="title function_">addTransactions</span>(<span class="string">&#x27;cash&#x27;</span>, <span class="string">&#x27;200&#x27;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addTransactions</span>(<span class="params">name, amount</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> <span class="title class_">Transaction</span>_str = <span class="string">`&lt;li class=&#x27;plus&#x27; &gt;<span class="subst">$&#123;name&#125;</span>&lt;span&gt; <span class="subst">$&#123;amount&#125;</span>&lt;/span&gt;&lt;button class=&quot;delete-btn&quot;&gt;x&lt;/button&gt;&lt;/li&gt;`</span></span><br><span class="line">  $(<span class="string">&#x27;#list&#x27;</span>).<span class="title function_">append</span>(<span class="title class_">Transaction</span>_str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Vh9uPvJ.png" alt=""></p><ul><li>提交之後清空<ul><li>選擇該輸入框，並利用<code>val()</code>，使內部的值清空</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#text&#x27;</span>).<span class="title function_">val</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"> $(<span class="string">&#x27;#amount&#x27;</span>).<span class="title function_">val</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/uKnX7fd.png" alt=""></p><h2 id="從表格中取得值"><a href="#從表格中取得值" class="headerlink" title="從表格中取得值"></a>從表格中取得值</h2><ul><li>製作按鈕的點擊事件，取得表格中的值</li><li>將值傳入函式的參數<code>addTransactions(text_val, amount_val);</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;click&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//取得表格中的值</span></span><br><span class="line">    <span class="keyword">const</span> text_val = $(<span class="string">&#x27;#text&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">const</span> amount_val = $(<span class="string">&#x27;#amount&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="title function_">addTransactions</span>(text_val, amount_val);</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h2 id="製作刪除紐"><a href="#製作刪除紐" class="headerlink" title="製作刪除紐"></a>製作刪除紐</h2><ul><li>原本的撰寫方式，為選到最後一個刪除鈕，並點擊加以刪除</li><li>此方式造成，無法確實刪除資料</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.delete-btn&#x27;</span>).<span class="title function_">last</span>().<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;del&#x27;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/v7n8t3L.png" alt=""></p><ul><li><p>修改方式，只能綁定一筆transatin或是綁定最後一筆<br><img src="https://i.imgur.com/lhqdwYA.png" alt=""></p></li><li><p>查看若實現點擊後刪除，是會刪除什麼？</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> $(<span class="string">&#x27;.delete-btn&#x27;</span>).<span class="title function_">last</span>().<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/9dYre8g.png" alt=""></p></li><li><p>要刪除的是整筆資料，所以要去尋找他鄰近的元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.delete-btn&#x27;</span>).<span class="title function_">last</span>().<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">remove</span>();</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure></li></ul><h2 id="localstorage-執行"><a href="#localstorage-執行" class="headerlink" title="localstorage 執行"></a>localstorage 執行</h2><p>筆記補充：<a href="https://eva813.github.io/2021/01/10/localstorage/">LocalStorage介紹</a></p><p>從此實作，可以看到它是一個陣列，裡面是物件</p><ul><li>設置一個空陣列</li><li>並將物件push進去</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//預設值的設置，取得存在本地的資料或是空陣列</span></span><br><span class="line">  <span class="keyword">var</span> transactions = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;Transactions&#x27;</span>)) || [];</span><br><span class="line">  </span><br><span class="line">   <span class="comment">//推入陣列</span></span><br><span class="line">    transactions.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">name</span>: text_val,</span><br><span class="line">      <span class="attr">amount</span>: amount_val</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;Transactions&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(transactions));</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/HC2XCpT.png" alt=""></p><p><img src="https://i.imgur.com/0b4mWW6.png" alt=""></p><ul><li>增加初始function<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//init</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initHistory</span>(<span class="params">transactions</span>) &#123;</span><br><span class="line">  transactions.<span class="title function_">forEach</span>(<span class="function"><span class="params">transaction</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">addTransactions</span>(transaction.<span class="property">name</span>, transaction.<span class="property">amount</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//將此函式放於 $(document).ready()之中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//陣列初始</span></span><br><span class="line">  <span class="keyword">if</span> (transactions.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="title function_">initHistory</span>(transactions);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/dH3nJ6K.png" alt=""></p><h2 id="將transation刪除後，並沒有完全從localstorage刪除"><a href="#將transation刪除後，並沒有完全從localstorage刪除" class="headerlink" title="將transation刪除後，並沒有完全從localstorage刪除"></a>將transation刪除後，並沒有完全從localstorage刪除</h2><p>運用id來刪除</p><ul><li><p>從此段落：<a href="#localstorage-執行">localstorage 執行</a>，圖片中的存取陣列可以看到，沒有設置id</p></li><li><p>id是在addTransactions使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Generate random ID</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateID</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">100000000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//floor：無條件捨去</span></span><br><span class="line"><span class="comment">//ceil：無條件進位</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在創造的陣列中\物件，都加入id</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> id = <span class="title function_">generateID</span>();</span><br><span class="line"> <span class="title function_">addTransactions</span>(id, text_val, amount_val);</span><br><span class="line"></span><br><span class="line"> <span class="comment">//推入陣列</span></span><br><span class="line"> transactions.<span class="title function_">push</span>(&#123;</span><br><span class="line">   <span class="attr">id</span>: id,</span><br><span class="line">   <span class="attr">name</span>: text_val,</span><br><span class="line">   <span class="attr">amount</span>: amount_val</span><br><span class="line"> &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在addTransactions的函式中也要加入id</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">addTransactions</span>(<span class="params">id, name, amount</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(id, name, amount);&#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/sMtoogJ.png" alt=""></p><ul><li>在button加入data-id</li></ul><p>和資料有關的時候：data-原來欄位名稱</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Transaction</span>_str = <span class="string">`&lt;li class=&#x27;plus&#x27; &gt;<span class="subst">$&#123;name&#125;</span>&lt;span&gt; <span class="subst">$&#123;amount&#125;</span>&lt;/span&gt;&lt;button class=&quot;delete-btn&quot;  data-id=&quot;<span class="subst">$&#123;id&#125;</span>&quot;&gt;x&lt;/button&gt;&lt;/li&gt;`</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/cmamimU.png" alt=""></p><p><img src="https://i.imgur.com/v8TQspA.png" alt=""></p><ul><li>確定點擊刪除鈕的時後，是有抓到該id<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$(<span class="string">&#x27;.delete-btn&#x27;</span>).<span class="title function_">last</span>().<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">remove</span>();</span><br><span class="line">  <span class="keyword">let</span> id = $(<span class="variable language_">this</span>).<span class="title function_">data</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(id);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><code>let id = $(this).data(); 查看id時</code> 取得的是物件<br><img src="https://i.imgur.com/BeBkXAN.png" alt=""></li><li>應改為<br><img src="https://i.imgur.com/snvF7AX.png" alt=""></li></ul><p>此時還沒有真正刪除id，只是確定有抓到id :point_up_2: </p><p>jquery <code>data()</code>： 自定義屬性 (data attributes)，讓我們可以任意讀寫資料在元素上，而且不會影響頁面的 layout<br><a href="https://www.fooish.com/jquery/data.html">jQuery Data</a></p><ul><li><h4 id="利用forEach、splice-刪除陣列內的資料"><a href="#利用forEach、splice-刪除陣列內的資料" class="headerlink" title="利用forEach、splice()刪除陣列內的資料"></a>利用forEach、splice()刪除陣列內的資料</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">deleteFromLocalstorage</span>(<span class="params">transactions, id</span>) &#123;</span><br><span class="line">  transactions.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item, index, arr</span>) &#123;</span><br><span class="line">    <span class="comment">//console.log(&#x27;item&#x27;, item);</span></span><br><span class="line">    <span class="comment">//console.log(&#x27;index&#x27;, index);</span></span><br><span class="line">    <span class="comment">//console.log(&#x27;arr&#x27;, arr);</span></span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">id</span> === id) &#123;</span><br><span class="line">      arr.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//迴圈刪除後，要儲存到localStorage才有確實刪去</span></span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;Transactions&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(transactions));</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">``</span><span class="string">``</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 查看迴圈的資料</span><br><span class="line">![](<span class="attr">https</span>:<span class="comment">//i.imgur.com/FexS5lt.png)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 確實刪除存在localstorage的資料</span><br><span class="line"><span class="string">``</span><span class="string">`javascript</span></span><br><span class="line"><span class="string">localStorage.setItem(&#x27;Transactions&#x27;, JSON.stringify(transactions));</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="判斷輸入的數字大小，並給予class"><a href="#判斷輸入的數字大小，並給予class" class="headerlink" title="判斷輸入的數字大小，並給予class"></a>判斷輸入的數字大小，並給予class</h3><ul><li>放在addTransactions()函式之中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Transaction</span>_str = $(<span class="string">&#x27;&lt;li&gt;&lt;/li&gt;&#x27;</span>).<span class="title function_">appendTo</span>(<span class="string">&#x27;#list&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="title class_">Transaction</span>_str.<span class="title function_">addClass</span>(amount &lt; <span class="number">0</span> ? <span class="string">&#x27;minus&#x27;</span> : <span class="string">&#x27;plus&#x27;</span>);</span><br><span class="line">  <span class="title class_">Transaction</span>_str.<span class="title function_">html</span>(<span class="string">`<span class="subst">$&#123;name&#125;</span>&lt;span&gt; <span class="subst">$&#123;amount&#125;</span>&lt;/span&gt;&lt;button class=&quot;delete-btn&quot;  data-id=&quot;<span class="subst">$&#123;id&#125;</span>&quot;&gt;x&lt;/button&gt;`</span>);</span><br><span class="line">  $(<span class="string">&#x27;#list&#x27;</span>).<span class="title function_">append</span>(<span class="title class_">Transaction</span>_str);</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/NYXCDtS.png" alt=""></p><h3 id="數值的更新"><a href="#數值的更新" class="headerlink" title="數值的更新"></a>數值的更新</h3><p><img src="https://i.imgur.com/EdCN1cd.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">updateValue</span>(<span class="params">transactions</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> amounts_arr = transactions.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">transaction</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> transaction.<span class="property">amount</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(amounts_arr);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//計算加總 </span></span><br><span class="line">  <span class="keyword">var</span> total = <span class="number">0</span>;</span><br><span class="line">  $.<span class="title function_">each</span>(amounts_arr, <span class="keyword">function</span> (<span class="params"></span>) &#123; total += <span class="built_in">parseFloat</span>((<span class="variable language_">this</span>)) || <span class="number">0</span>; &#125;);</span><br><span class="line">  <span class="comment">//傳回YOUR BALANCE</span></span><br><span class="line">  $(<span class="string">&#x27;#balance&#x27;</span>).<span class="title function_">text</span>(<span class="string">`$<span class="subst">$&#123;total&#125;</span>`</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(total);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//*************************** */</span></span><br><span class="line">  <span class="comment">//從陣列找出&gt;0的值，放置income</span></span><br><span class="line">  <span class="comment">//console.log(amounts)</span></span><br><span class="line">  <span class="keyword">var</span> income = amounts_arr.<span class="title function_">filter</span>(</span><br><span class="line">    <span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> item &gt; <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(income);</span><br><span class="line">  <span class="keyword">var</span> totalIncome = <span class="number">0</span>;</span><br><span class="line">  $.<span class="title function_">each</span>(income, <span class="keyword">function</span> (<span class="params"></span>) &#123; totalIncome += <span class="built_in">parseFloat</span>((<span class="variable language_">this</span>)) || <span class="number">0</span>; &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//console.log(totalIncome); //回傳220</span></span><br><span class="line">  <span class="comment">//傳回到income</span></span><br><span class="line">  $(<span class="string">&#x27;#money-plus&#x27;</span>).<span class="title function_">text</span>(<span class="string">`$<span class="subst">$&#123;totalIncome&#125;</span>`</span>);</span><br><span class="line">  <span class="comment">//***************************** */</span></span><br><span class="line">  <span class="comment">//從陣列找出&lt;0的值，放置income</span></span><br><span class="line">  <span class="keyword">var</span> expense = amounts_arr.<span class="title function_">filter</span>(</span><br><span class="line">    <span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> item &lt; <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(expense);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> totalExpense = <span class="number">0</span>;</span><br><span class="line">  $.<span class="title function_">each</span>(expense, <span class="keyword">function</span> (<span class="params"></span>) &#123; totalExpense += <span class="built_in">parseFloat</span>((<span class="variable language_">this</span>)) || <span class="number">0</span>; &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(totalExpense);</span><br><span class="line">  <span class="comment">//傳回到expense</span></span><br><span class="line">  $(<span class="string">&#x27;#money-minus&#x27;</span>).<span class="title function_">text</span>(<span class="string">`$<span class="subst">$&#123;totalExpense&#125;</span>`</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>創造一個amount的陣列</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> amounts_arr = transactions.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">transaction</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> transaction.<span class="property">amount</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(amounts_arr);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/sG0YS9J.png" alt=""></p><ul><li>計算加總數值<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> total = <span class="number">0</span>;</span><br><span class="line">  $.<span class="title function_">each</span>(amounts_arr, <span class="keyword">function</span> (<span class="params"></span>) &#123; total += <span class="built_in">parseFloat</span>((<span class="variable language_">this</span>)) || <span class="number">0</span>; &#125;);</span><br><span class="line">  <span class="comment">//傳回YOUR BALANCE</span></span><br><span class="line">  $(<span class="string">&#x27;#balance&#x27;</span>).<span class="title function_">text</span>(<span class="string">`$<span class="subst">$&#123;total&#125;</span>`</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(total);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/7c2MqFo.png" alt=""></p><p><img src="https://i.imgur.com/CCXAirK.png" alt=""></p><ul><li>income 收入加總計算</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//從陣列找出&gt;0的值，放置income</span></span><br><span class="line">  <span class="comment">//console.log(amounts)</span></span><br><span class="line">  <span class="keyword">var</span> income = amounts_arr.<span class="title function_">filter</span>(</span><br><span class="line">    <span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> item &gt; <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(income);</span><br><span class="line">  <span class="keyword">var</span> totalIncome = <span class="number">0</span>;</span><br><span class="line">  $.<span class="title function_">each</span>(income, <span class="keyword">function</span> (<span class="params"></span>) &#123; totalIncome += <span class="built_in">parseFloat</span>((<span class="variable language_">this</span>)) || <span class="number">0</span>; &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//console.log(totalIncome); //回傳220</span></span><br><span class="line">  <span class="comment">//傳回到income</span></span><br><span class="line">  $(<span class="string">&#x27;#money-plus&#x27;</span>).<span class="title function_">text</span>(<span class="string">`$<span class="subst">$&#123;totalIncome&#125;</span>`</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/9d8Hx3Y.png" alt=""></p><p><img src="https://i.imgur.com/KXRi18A.png" alt=""></p><ul><li>expense支出加總</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//從陣列找出&lt;0的值，放置expense</span></span><br><span class="line">  <span class="keyword">var</span> expense = amounts_arr.<span class="title function_">filter</span>(</span><br><span class="line">    <span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> item &lt; <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(expense);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> totalExpense = <span class="number">0</span>;</span><br><span class="line">  $.<span class="title function_">each</span>(expense, <span class="keyword">function</span> (<span class="params"></span>) &#123; totalExpense += <span class="built_in">parseFloat</span>((<span class="variable language_">this</span>)) || <span class="number">0</span>; &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(totalExpense);</span><br><span class="line">  <span class="comment">//傳回到expense</span></span><br><span class="line">  $(<span class="string">&#x27;#money-minus&#x27;</span>).<span class="title function_">text</span>(<span class="string">`$<span class="subst">$&#123;totalExpense&#125;</span>`</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/AaIZORC.png" alt=""></p><p><img src="https://i.imgur.com/TM4EQrH.png" alt=""></p><hr><p>錯誤修正：</p><ul><li>調換推入陣列以及<code>addTransactions</code>的順序<br><img src="https://i.imgur.com/7jdJ7kO.png" alt=""></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//點擊按鈕的事件</span></span><br><span class="line">  $(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">    <span class="comment">//console.log(&#x27;click&#x27;);</span></span><br><span class="line">    <span class="comment">//取得表格中的值</span></span><br><span class="line">    <span class="keyword">const</span> text_val = $(<span class="string">&#x27;#text&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">const</span> amount_val = $(<span class="string">&#x27;#amount&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">let</span> id = <span class="title function_">generateID</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//推入陣列</span></span><br><span class="line">    transactions.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">id</span>: id,</span><br><span class="line">      <span class="attr">name</span>: text_val,</span><br><span class="line">      <span class="attr">amount</span>: amount_val</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">addTransactions</span>(id, text_val, amount_val, transactions);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;Transactions&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(transactions));</span><br><span class="line"></span><br><span class="line">    <span class="title function_">updateValue</span>(transactions);</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><ul><li>將updateValue()放入事件中</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//刪除鈕 要交易交出後再綁事件</span></span><br><span class="line">  $(<span class="string">&#x27;.delete-btn&#x27;</span>).<span class="title function_">last</span>().<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">remove</span>();</span><br><span class="line">    <span class="keyword">let</span> id = $(<span class="variable language_">this</span>).<span class="title function_">data</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">    <span class="comment">//console.log(id);</span></span><br><span class="line">    <span class="title function_">deleteFromLocalstorage</span>(transactions, id); <span class="comment">//要記得傳入id</span></span><br><span class="line">    <span class="title function_">updateValue</span>(transactions);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS實作練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> local storage </tag>
            
            <tag> forEach </tag>
            
            <tag> append </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS實作- exchangeRate匯率轉換器</title>
      <link href="/2021/01/10/js-exchangeRate/"/>
      <url>/2021/01/10/js-exchangeRate/</url>
      
        <content type="html"><![CDATA[<h2 id="實作需求分析"><a href="#實作需求分析" class="headerlink" title="實作需求分析"></a>實作需求分析</h2><p><img src="https://i.imgur.com/cu80NjP.png" alt=""></p><ul><li>抓取api提供的匯率資料：使用jQuery,ajax</li><li>選擇不同幣別，進行匯率換算</li><li>swap按鈕，使幣別交換</li></ul><h4 id="完成後的成品"><a href="#完成後的成品" class="headerlink" title="完成後的成品"></a>完成後的<a href="https://eva813.github.io/Eva_portfolio/exchangeRate/exchangeRate.html">成品</a></h4><h2 id="jQuery-ajax-使用"><a href="#jQuery-ajax-使用" class="headerlink" title="jQuery.ajax 使用"></a>jQuery.ajax 使用</h2><ul><li>參考資料：<a href="https://api.jquery.com/jquery.ajax/">jQuery.ajax()</a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&quot;https://v6.exchangerate-api.com/v6/06f04b805743079a1966771a/latest/USD&quot;</span>,</span><br><span class="line"> </span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">done</span>(<span class="keyword">function</span>(<span class="params"> some_data </span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    <span class="comment">//成功抓到值的話，就會印出抓取到的資料</span></span><br><span class="line">  &#125;).<span class="title function_">fail</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  </span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/S1kOYmH.png" alt=""></p><ul><li>應用於exchangeRate:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`https://v6.exchangerate-api.com/v6/06f04b805743079a1966771a/latest/<span class="subst">$&#123;currency_one&#125;</span>`</span>,  <span class="comment">//注意符號</span></span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,<span class="comment">//get,post,put</span></span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="comment">//console.log(data);</span></span><br><span class="line">      <span class="keyword">const</span> rate = data.<span class="property">conversion_rates</span>[currency_two];</span><br><span class="line">      <span class="comment">//console.log(rate);</span></span><br><span class="line">      $(<span class="string">&#x27;#rate&#x27;</span>).<span class="title function_">text</span>(<span class="string">`1 <span class="subst">$&#123;currency_one&#125;</span> = <span class="subst">$&#123;rate&#125;</span> <span class="subst">$&#123;currency_two&#125;</span>`</span>);</span><br><span class="line">      $(<span class="string">&#x27;#amount-two&#x27;</span>).<span class="title function_">val</span>((amountOne * rate).<span class="title function_">toFixed</span>(<span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><h4 id="詳細說明可以參照內文：計算匯率calculate函式"><a href="#詳細說明可以參照內文：計算匯率calculate函式" class="headerlink" title="詳細說明可以參照內文：計算匯率calculate函式"></a>詳細說明可以參照內文：<a href="#計算匯率calculate-函式">計算匯率calculate函式</a></h4></li></ul><h4 id="其他參考資料："><a href="#其他參考資料：" class="headerlink" title="其他參考資料："></a>其他參考資料：</h4><p><a href="https://www.youtube.com/watch?v=z-hN7GY5K7g">[ Alex 宅開發 ] 👨‍💻從 jQuery 入門到認識 JavaScript #5 Ajax 與非同步功能操作與原始碼探索</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- `url`:來源，api的位置在哪裏</span><br><span class="line">- `type`:api的呼叫方式</span><br><span class="line">- `dataType`:它回給你的資料類型</span><br><span class="line">- `data`:你要傳給它什麼</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: data.<span class="property">json</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;get&#x27;</span>,<span class="comment">//get,post,put,path,delete</span></span><br><span class="line">  <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>, <span class="comment">//html,xml,text,jsonp</span></span><br><span class="line">  <span class="attr">data</span>: &#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">  <span class="comment">//response &lt;-&gt; request</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">  <span class="keyword">return</span> def.<span class="title function_">resolve</span>();</span><br><span class="line">&#125;), <span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">  <span class="keyword">return</span> def.<span class="title function_">reject</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="計算匯率calculate-函式"><a href="#計算匯率calculate-函式" class="headerlink" title="計算匯率calculate 函式"></a>計算匯率calculate 函式</h2><ul><li>此函式為抓取匯率api的資料並帶入計算匯率</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">calculate</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> currency_one = $(<span class="string">&quot;#currency-one&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">  <span class="keyword">var</span> currency_two = $(<span class="string">&#x27;#currency-two&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">  <span class="keyword">var</span> amountOne = $(<span class="string">&#x27;#amount-one&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line">  <span class="keyword">var</span> amountTwo = $(<span class="string">&#x27;#amount-two&#x27;</span>).<span class="title function_">val</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//https://app.exchangerate-api.com/dashboard/confirmed</span></span><br><span class="line"></span><br><span class="line">  $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`https://v6.exchangerate-api.com/v6/06f04b805743079a1966771a/latest/<span class="subst">$&#123;currency_one&#125;</span>`</span>,<span class="comment">//注意符號</span></span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,<span class="comment">//抓取值</span></span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="comment">//console.log(data);  //查看抓到的物件</span></span><br><span class="line">      </span><br><span class="line">      <span class="keyword">const</span> rate = data.<span class="property">conversion_rates</span>[currency_two];</span><br><span class="line">      <span class="comment">//console.log(rate);</span></span><br><span class="line">      </span><br><span class="line">      $(<span class="string">&#x27;#rate&#x27;</span>).<span class="title function_">text</span>(<span class="string">`1 <span class="subst">$&#123;currency_one&#125;</span> = <span class="subst">$&#123;rate&#125;</span> <span class="subst">$&#123;currency_two&#125;</span>`</span>);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//將值帶入</span></span><br><span class="line">      $(<span class="string">&#x27;#amount-two&#x27;</span>).<span class="title function_">val</span>((amountOne * rate).<span class="title function_">toFixed</span>(<span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函式說明"><a href="#函式說明" class="headerlink" title="函式說明:"></a>函式說明:</h3><h4 id="1-先將要抓取的值，宣告變數-分別有選擇的國家幣別、兌換的數量"><a href="#1-先將要抓取的值，宣告變數-分別有選擇的國家幣別、兌換的數量" class="headerlink" title="1.先將要抓取的值，宣告變數;分別有選擇的國家幣別、兌換的數量"></a>1.先將要抓取的值，宣告變數;分別有選擇的國家幣別、兌換的數量</h4><h4 id="2-串接資料"><a href="#2-串接資料" class="headerlink" title="2.串接資料"></a>2.串接資料</h4><p> (1). 抓取資料的位置<br><code>url: https://v6.exchangerate-api.com/v6/06f04b805743079a1966771a/latest/$&#123;currency_one&#125;</code></p><p>注意網址：<br><code>&quot;https://v6.exchangerate-api.com/v6/06f04b805743079a1966771a/latest/USD&quot;</code><br>注意網址後面有修改，要抓取會變動的變數： ${currency_one}</p><p> (2) 檢查是否有抓到要的資料：</p><ul><li>宣告：<code>const rate = data.conversion_rates[currency_two];</code></li><li>console.log(rate); </li></ul><p><img src="https://i.imgur.com/LKGiCmN.png" alt=""></p><ul><li>確定抓取的值是否正確：<code>console.log($(&#39;#amount-two&#39;).val());</code></li></ul><p><img src="https://i.imgur.com/r9Nx25o.png" alt=""></p><ul><li>將計算匯率帶入<br><code>$(&#39;#amount-two&#39;).val((amountOne * rate).toFixed(2));</code></li></ul><p><img src="https://i.imgur.com/oMBuNFV.png" alt=""></p><h2 id="其他輸入值的抓取與連動"><a href="#其他輸入值的抓取與連動" class="headerlink" title="其他輸入值的抓取與連動"></a>其他輸入值的抓取與連動</h2><ul><li><h4 id="currency-one的改變，會連動上面的函式計算結果"><a href="#currency-one的改變，會連動上面的函式計算結果" class="headerlink" title="#currency-one的改變，會連動上面的函式計算結果"></a><code>#currency-one的改變</code>，會連動上面的函式計算結果</h4></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#currency-one&quot;</span>).<span class="title function_">change</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&quot;#rate&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&quot;</span>); </span><br><span class="line">  <span class="title function_">calculate</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//抓取amountone</span></span><br><span class="line">$(<span class="string">&quot;#amount-one&quot;</span>).<span class="title function_">on</span>(<span class="string">&quot;input&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&quot;#rate&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="title function_">calculate</span>();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;#currency-two&quot;</span>).<span class="title function_">change</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&quot;#rate&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="title function_">calculate</span>();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//抓取amountTwo</span></span><br><span class="line">$(<span class="string">&quot;#amount-two&quot;</span>).<span class="title function_">on</span>(<span class="string">&quot;input&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&quot;#rate&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="title function_">calculate</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><h4 id="發現使用-append-，會出現累積div文字的問題"><a href="#發現使用-append-，會出現累積div文字的問題" class="headerlink" title="發現使用.append()，會出現累積div文字的問題"></a>發現使用<code>.append()</code>，會出現累積div文字的問題</h4></li><li><p>(1) 清除函式<code>.append()</code>，累積div文字呈現的問題<br><code>$(&quot;#rate&quot;).html(&quot;&quot;);</code></p></li><li><p>(2) 將原本使用<code>.append()</code>的地方，修改為<code>.text()</code>, <code>$(&#39;#rate&#39;).text(`1 $&#123;currency_one&#125; = $&#123;rate&#125; $&#123;currency_two&#125;`);</code></p><ul><li>位置：<a href="#計算匯率calculate-函式">計算匯率calculate函式</a></li></ul></li></ul><p><img src="https://i.imgur.com/GTMuXY0.png" alt=""></p><p><img src="https://i.imgur.com/TvspVAq.png" alt=""></p><h2 id="swap按鈕-（使幣別交換）"><a href="#swap按鈕-（使幣別交換）" class="headerlink" title="swap按鈕 （使幣別交換）"></a>swap按鈕 （使幣別交換）</h2><ul><li>宣告一個變數，紀錄交換前的幣別<code>let temp = $(&quot;#currency-one&quot;).val();</code></li><li>確認是否宣告正確：<code>console.log(temp);</code></li></ul><p><img src="https://i.imgur.com/gkYsHxQ.png" alt=""></p><p><img src="https://i.imgur.com/fAZmC0Q.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//swap按鈕</span></span><br><span class="line">$(<span class="string">&#x27;#swap&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> temp = $(<span class="string">&quot;#currency-one&quot;</span>).<span class="title function_">val</span>();<span class="comment">//設一個變數來存放currency-one</span></span><br><span class="line">  $(<span class="string">&quot;#currency-one&quot;</span>).<span class="title function_">val</span>($(<span class="string">&quot;#currency-two&quot;</span>).<span class="title function_">val</span>());</span><br><span class="line">  $(<span class="string">&quot;#currency-two&quot;</span>).<span class="title function_">val</span>(temp);</span><br><span class="line">  <span class="title function_">calculate</span>();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">calculate</span>(); <span class="comment">//放於最後</span></span><br></pre></td></tr></table></figure><ul><li><code>console.log($(&quot;#currency-one&quot;).val());</code></li><li><code>console.log($(&quot;#currency-two&quot;).val());</code></li></ul><p><img src="https://i.imgur.com/o4JLcIF.png" alt=""></p><hr><p>參考資料：<br><a href="https://ithelp.ithome.com.tw/articles/10192175">重新認識 JavaScript: Day 16 那些你知道與不知道的事件們</a></p>]]></content>
      
      
      <categories>
          
          <category> JS實作練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> ajax </tag>
            
            <tag> input </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS-browser</title>
      <link href="/2020/12/28/js-browser/"/>
      <url>/2020/12/28/js-browser/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/NdO4OR5.png" alt=""></p><h2 id="1-DOM-與樹狀結構"><a href="#1-DOM-與樹狀結構" class="headerlink" title="1. DOM 與樹狀結構"></a>1. DOM 與樹狀結構</h2><p><img src="https://i.imgur.com/uZDTql8.png" alt=""></p><ul><li>DOM: document:網頁內部<blockquote><p>KURO 老師:<br>DOM 是一個將 HTML 文件以樹狀的結構來表示的模型，而組合起來的樹狀圖，我們稱之為「DOM Tree」。</p></blockquote></li></ul><blockquote><p>Huli 老師:瀏覽器提供該橋樑，讓我們用js去改面畫面的東西<br> <img src="https://i.imgur.com/tPHGSL4.png" alt=""></p></blockquote><h3 id="API-Application-Programming-Interface"><a href="#API-Application-Programming-Interface" class="headerlink" title="API (Application Programming Interface)"></a>API (Application Programming Interface)</h3><ul><li>應用程式 編程 介面<h2 id="document-物件-API-文件"><a href="#document-物件-API-文件" class="headerlink" title="document 物件 API 文件"></a>document 物件 API 文件</h2></li><li><h4 id="getElementsByTagName-抓取html中某tag的元素"><a href="#getElementsByTagName-抓取html中某tag的元素" class="headerlink" title="getElementsByTagName : 抓取html中某tag的元素"></a><code>getElementsByTagName</code> : 抓取html中某tag的元素</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    hello~</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    yo!</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> elements = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(elements);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/hSmfZ9u.png" alt=""></li></ul><p><img src="https://i.imgur.com/yNOOK2m.png" alt=""></p><ul><li><h4 id="getElementsByClassName-抓取html中某class元素-有好幾個相同名稱的class，會一並抓取"><a href="#getElementsByClassName-抓取html中某class元素-有好幾個相同名稱的class，會一並抓取" class="headerlink" title="getElementsByClassName: 抓取html中某class元素(有好幾個相同名稱的class，會一並抓取)"></a><code>getElementsByClassName</code>: 抓取html中某class元素(有好幾個相同名稱的class，會一並抓取)</h4></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>DOM</span><br><span class="line">  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;block1&quot;</span>&gt;</span></span><br><span class="line">    hello~</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    yo!</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> elements = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;block1&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(elements);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/d7ZlZnr.png" alt=""></p><ul><li><h4 id="getElementById-注意：getElement-沒有加s！這是用來抓取指定ID"><a href="#getElementById-注意：getElement-沒有加s！這是用來抓取指定ID" class="headerlink" title="getElementById : 注意：getElement 沒有加s！這是用來抓取指定ID"></a><code>getElementById</code> : 注意：getElement 沒有加s！這是用來抓取指定ID</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>DOM</span><br><span class="line">  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;block1&quot;</span>&gt;</span></span><br><span class="line">    hello~</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myyo&quot;</span>&gt;</span></span><br><span class="line">    yo!</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> elements = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;myyo&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(elements);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/1ouq4WA.png" alt=""></p></li><li><h4 id="querySelector-後面接的是css選擇器"><a href="#querySelector-後面接的是css選擇器" class="headerlink" title="querySelector: 後面接的是css選擇器"></a><code>querySelector</code>: 後面接的是css選擇器</h4></li><li><p>只會針對元素的第一筆資料，其他並不會被選入這時候可以使用</p><ul><li>選擇tag標籤：(‘div’)：注意：使用此方式當html有多個div，他只會選擇到第一個符合的</li><li>選擇cass : (‘.calssName’)</li><li>選擇id : (‘#idName’)</li></ul></li></ul><p><img src="https://i.imgur.com/QzoOo6r.png" alt=""></p><p><img src="https://i.imgur.com/pSMPFCJ.png" alt=""></p><ul><li><p>也可以選區某一tag下的tag</p><ul><li><code>querySelector(&#39;div &gt; a&#39;)</code><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>DOM</span><br><span class="line">  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;block1&quot;</span>&gt;</span></span><br><span class="line">    hello~</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myyo&quot;</span>&gt;</span></span><br><span class="line">    yo!</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> elements = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div &gt; a&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(elements);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/I9qr8LD.png" alt=""></li></ul></li><li><h4 id="querySelectorAll-可以選取多個元素"><a href="#querySelectorAll-可以選取多個元素" class="headerlink" title="querySelectorAll: 可以選取多個元素"></a><code>querySelectorAll</code>: 可以選取多個元素</h4></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>DOM</span><br><span class="line">  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;block1&quot;</span>&gt;</span></span><br><span class="line">    hello~</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myyo&quot;</span>&gt;</span></span><br><span class="line">    yo!</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> elements = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(elements);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/jFPYIO0.png" alt="Eloquent JavaScript, 3rd Edition"></p><h3 id="順利選則元素之後，嘗試做些改變"><a href="#順利選則元素之後，嘗試做些改變" class="headerlink" title="順利選則元素之後，嘗試做些改變"></a>順利選則元素之後，嘗試做些改變</h3><p>可以看看，js如何與瀏覽器互動 -&gt;<a href="https://hackmd.io/yGiTI8qVRLWmDCpD1w7HcA?view">JavaScript 與瀏覽器的溝通</a></p><h3 id="BOM-與-window-物件"><a href="#BOM-與-window-物件" class="headerlink" title="BOM 與 window 物件"></a>BOM 與 window 物件</h3><ul><li>BOM (Browser Object Model，瀏覽器物件模型)，是瀏覽器所有功能的核心，與網頁的內容無關。<ul><li>window是瀏覽器的根物件，也是BOM的瀏覽器模型</li></ul></li><li>window.location.hrrf =&gt; 可以知道現在網址<br><img src="https://i.imgur.com/8EeLLGQ.png" alt=""></li><li>window.history.back(); =&gt; 回到網頁瀏覽的上一頁<br><img src="https://i.imgur.com/kBtDslP.png" alt=""></li></ul><p><img src="https://i.imgur.com/jyPOjvH.png" alt=""></p><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><p><a href="https://ithelp.ithome.com.tw/articles/10202689">Day03-深入理解網頁架構：DOM</a><br><a href="https://hsuchihting.github.io/javascript/20200615/1316819935/">JS 筆記 - 認識 DOM 文件物件模型</a><br><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Document">MDN-Document</a><br><a href="https://www.w3schools.com/jsref/dom_obj_document.asp">The HTML DOM Document Object</a><br><a href="https://ithelp.ithome.com.tw/articles/10211614">JavaScript 基礎知識-querySelectorAll</a><br><a href="https://eloquentjavascript.net/14_dom.html">The Document Object Model</a><br><a href="https://www.happycoding.today/posts/43">JavaScript入門系列：BOM和DOM筆記</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> DOM&quot; </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS基本功- 物件與陣列</title>
      <link href="/2020/12/27/js-array/"/>
      <url>/2020/12/27/js-array/</url>
      
        <content type="html"><![CDATA[<blockquote><p>程式柴<br><img src="https://i.imgur.com/44kqCRM.png" alt=""></p><h3 id="Function、array都屬於物件"><a href="#Function、array都屬於物件" class="headerlink" title="Function、array都屬於物件"></a>Function、array都屬於物件</h3><p><img src="https://i.imgur.com/1bYo7eM.png" alt=""></p></blockquote><h2 id="物件的例子"><a href="#物件的例子" class="headerlink" title="物件的例子"></a>物件的例子</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">      <span class="attr">name</span>: [<span class="string">&#x27;Bob&#x27;</span>, <span class="string">&#x27;Smith&#x27;</span>],</span><br><span class="line">      <span class="attr">age</span>: <span class="number">32</span>,</span><br><span class="line">      <span class="attr">gender</span>: <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line">      <span class="attr">interest</span>: [<span class="string">&#x27;music&#x27;</span>, <span class="string">&#x27;movie&#x27;</span>],</span><br><span class="line">      <span class="attr">greeting</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hi I\&#x27;m&#x27;</span> + <span class="variable language_">this</span>.<span class="property">name</span>[<span class="number">0</span>] + <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="物件的創建"><a href="#物件的創建" class="headerlink" title="物件的創建"></a>物件的創建</h2><p><code>var x=&#123;&#125;</code></p><ul><li>有一隻狗,其名字、年齡，函式<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dog = &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;tracy&#x27;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="number">20</span>,</span><br><span class="line"></span><br><span class="line">      <span class="attr">bow</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;bow!bow!&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>用.呼叫屬性，或是dog[‘key’] :point_down:<br><img src="https://i.imgur.com/OgrYwjF.png" alt=""></li><li>物件內的函式<br><img src="https://i.imgur.com/jOWuwxQ.png" alt=""></li></ul><h2 id="添加屬性至物件上"><a href="#添加屬性至物件上" class="headerlink" title="添加屬性至物件上"></a>添加屬性至物件上</h2><ul><li><h4 id="增加值的方式"><a href="#增加值的方式" class="headerlink" title="增加值的方式"></a>增加值的方式</h4><ul><li><code>dog.color = &#39;white&#39;;</code></li><li><code>dog[&#39;size&#39;] = &#39;small&#39;;</code> =&gt;較常用</li></ul></li><li><h4 id="增加函式-gt-一樣用-的方式"><a href="#增加函式-gt-一樣用-的方式" class="headerlink" title="增加函式 =&gt; 一樣用.的方式"></a>增加函式 =&gt; 一樣用.的方式</h4><ul><li><code>dog.bowbow = function () &#123;console.log(&#39;bow!bow!～～&#39;) &#125;</code></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dog = &#123;</span><br><span class="line">     <span class="attr">name</span>: <span class="string">&#x27;tracy&#x27;</span>,</span><br><span class="line">     <span class="attr">age</span>: <span class="number">7</span>,</span><br><span class="line">     <span class="attr">bow</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;bow!&#x27;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//增加值的方式</span></span><br><span class="line">   <span class="comment">//1</span></span><br><span class="line">   dog.<span class="property">color</span> = <span class="string">&#x27;white&#x27;</span>;</span><br><span class="line">   dog.<span class="property">eyes</span> = <span class="string">&#x27;big&#x27;</span>;</span><br><span class="line">   <span class="comment">//2</span></span><br><span class="line">   dog[<span class="string">&#x27;size&#x27;</span>] = <span class="string">&#x27;small&#x27;</span>;</span><br><span class="line">   <span class="comment">//增加函式</span></span><br><span class="line">   dog.<span class="property">bowbow</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;bow!bow!～～&#x27;</span>)</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/4qqgZRy.png" alt=""></p><h2 id="陣列"><a href="#陣列" class="headerlink" title="陣列"></a>陣列</h2><blockquote><p>程式柴<br><img src="https://i.imgur.com/FdH3fty.png" alt=""></p></blockquote><ul><li><p>陣列用 中括號<code>[ ]</code></p></li><li><p>陣列的計算是從零開始（取陣列的索引）</p><ul><li>呼應for 迴圈，從0開始，從索引第一個<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="number">111</span>, <span class="number">222</span>, <span class="number">333</span>]</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">1</span>]); <span class="comment">//222</span></span><br><span class="line">    <span class="comment">//呼應for 迴圈，從0開始，從索引第一個</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>陣列中的東西都是相同屬性，比較好操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr2 = [<span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;sth&#x27;</span>]</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="property">length</span>); <span class="comment">//3</span></span><br><span class="line">  arr3 = [<span class="number">111</span>, <span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;sth&#x27;</span>]</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/2WztSsO.png" alt=""></p></li><li><p>練習：要紀錄10位學生的分數，並加總</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> score = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">100</span>];</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(score);</span><br></pre></td></tr></table></figure><h3 id="陣列基本操作-gt-pop-與push-較常用"><a href="#陣列基本操作-gt-pop-與push-較常用" class="headerlink" title="陣列基本操作 -&gt; pop 與push 較常用"></a>陣列基本操作 -&gt; <code>pop</code> 與<code>push</code> 較常用</h3></li><li><p><code>score.push(1000)</code> -&gt; 新增元素到現有陣列中，加入尾端</p></li><li><p><code>score.unshift(888)</code> -&gt; 加入陣列最前面</p></li><li><p>pop:從最末端抽走元素<br><img src="https://i.imgur.com/e55Oxbz.png" alt=""></p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myHeros=[<span class="string">&#x27;孫悟空&#x27;</span>, <span class="string">&#x27;佐助&#x27;</span>, <span class="string">&#x27;女超人&#x27;</span>, <span class="string">&#x27;美國隊長&#x27;</span>];</span><br><span class="line"><span class="comment">//從最末端抽走元素</span></span><br><span class="line">myHeros.<span class="title function_">pop</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//從頭抽走元素</span></span><br><span class="line">myHeros.<span class="title function_">shift</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(myHeros);</span><br></pre></td></tr></table></figure><h3 id="陣列替換元素"><a href="#陣列替換元素" class="headerlink" title="陣列替換元素"></a>陣列替換元素</h3><ul><li>在原本陣列中，選取要取代的該元素，後面加=，並輸入內容</li></ul><p><img src="https://i.imgur.com/gnVybmt.png" alt=""></p><h2 id="陣列取得最後一個元素"><a href="#陣列取得最後一個元素" class="headerlink" title="陣列取得最後一個元素"></a>陣列取得最後一個元素</h2><ul><li>該陣列長度-1，就可以取得最後一個元素<ul><li>長度為七，最後一個的索引是6 :point_down:<br><img src="https://i.imgur.com/Ytlzihy.png" alt=""></li></ul></li></ul><h2 id="用-indexOf-取得元素的索引"><a href="#用-indexOf-取得元素的索引" class="headerlink" title="用 indexOf 取得元素的索引"></a>用 indexOf 取得元素的索引</h2><ul><li>Of的o要大寫</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myHeros=[<span class="string">&#x27;孫悟空&#x27;</span>, <span class="string">&#x27;佐助&#x27;</span>, <span class="string">&#x27;女超人&#x27;</span>, <span class="string">&#x27;美國隊長&#x27;</span>];</span><br><span class="line"><span class="comment">//檢查誰誰誰有在陣列中嗎</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(myHeros.<span class="title function_">indexOf</span>(<span class="string">&#x27;達爾&#x27;</span>)); <span class="comment">//印出-1，意指此元素不存在陣列中</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(myHeros.<span class="title function_">indexOf</span>(<span class="string">&#x27;美國隊長&#x27;</span>)); <span class="comment">//印出3（在陣列中第幾個索引</span></span><br></pre></td></tr></table></figure><h3 id="切片-slice-與方法"><a href="#切片-slice-與方法" class="headerlink" title="切片 slice 與方法"></a>切片 slice 與方法</h3><p><img src="https://i.imgur.com/h3ltQ3Q.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>];</span><br><span class="line">   <span class="comment">//用索引</span></span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">slice</span>(<span class="number">2</span>, <span class="number">4</span>));<span class="comment">//不包含最後一個</span></span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">slice</span>(<span class="number">2</span>, <span class="number">5</span>));</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/bzKmwQi.png" alt=""></p><ul><li>複製陣列<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> shallowCopy = fruits.<span class="title function_">slice</span>(); <span class="comment">// 這就是複製陣列的方式</span></span><br><span class="line"><span class="comment">// [&quot;Strawberry&quot;, &quot;Mango&quot;]</span></span><br></pre></td></tr></table></figure></li></ul><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">MDN slice</a><br><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array">MDN array</a><br><a href="https://www.oxxostudio.tw/articles/201908/js-array.html">JavaScript Array 陣列操作方法大全 ( 含 ES6 )</a></p><h2 id="陣列與物件"><a href="#陣列與物件" class="headerlink" title="陣列與物件"></a>陣列與物件</h2><ul><li><p>例子：被老師要求要記錄，學生的名字,分數,地址…</p></li><li><p>以陣列的想法，會將各類別分類，放入同屬性的結果</p><ul><li>學生的分數,名字個一個陣列<br><img src="https://i.imgur.com/6DP47iL.png" alt=""></li><li>要取得同一位學生的所有資料，要個別從矩陣中拿取<br><img src="https://i.imgur.com/5q4VitE.png" alt=""></li></ul></li><li><p>一個資料集合，就能代表一個學生 –&gt;物件</p><ul><li>以下面的資料結構來代表學生的一些屬性<br><img src="https://i.imgur.com/Gk5T01w.png" alt=""></li></ul></li></ul><hr><h3 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h3><ul><li>物件與陣列，與等號的關係,理解<ul><li>下方的結果都是false<br><img src="https://i.imgur.com/6L0AI2n.png" alt=""></li></ul></li></ul><p>因為：</p><ul><li><code>var obj=[a:1]</code>，會將它放在某一個記憶體位置</li><li><code>var obj2=[a:1]</code>，會將它放在另一個記憶體位置</li></ul><p>PS:即便內容,數值一樣，但js判斷的是記憶體位置不一樣</p>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> Array </tag>
            
            <tag> Object </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS基本功- function函式</title>
      <link href="/2020/12/27/js-function/"/>
      <url>/2020/12/27/js-function/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/qRxqi5e.png" alt=""></p><h3 id="使用函式可以讓我們執行效率提升，不用重複撰寫，只需幾行語法便可以達到快速的運算、或是功能的執行。以下範例為數羊計數，透過函式以及迴圈，以幫助設定計數的起始以及終點，並快速的執行範圍內的計數。"><a href="#使用函式可以讓我們執行效率提升，不用重複撰寫，只需幾行語法便可以達到快速的運算、或是功能的執行。以下範例為數羊計數，透過函式以及迴圈，以幫助設定計數的起始以及終點，並快速的執行範圍內的計數。" class="headerlink" title="使用函式可以讓我們執行效率提升，不用重複撰寫，只需幾行語法便可以達到快速的運算、或是功能的執行。以下範例為數羊計數，透過函式以及迴圈，以幫助設定計數的起始以及終點，並快速的執行範圍內的計數。"></a>使用函式可以讓我們執行效率提升，不用重複撰寫，只需幾行語法便可以達到快速的運算、或是功能的執行。以下範例為數羊計數，透過函式以及迴圈，以幫助設定計數的起始以及終點，並快速的執行範圍內的計數。</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//為什麼我們需要function</span></span><br><span class="line">    <span class="comment">//DRY -&gt; Don&#x27;t repeat yourself</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">echoSheep</span>(<span class="params">index</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第&#x27;</span> + i + <span class="string">&#x27;隻綿羊&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">      <span class="title function_">echoSheep</span>(i)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="與過去所學結合"><a href="#與過去所學結合" class="headerlink" title="與過去所學結合"></a>與過去所學結合</h4></li></ul><p><img src="https://i.imgur.com/O6BuNU9.png" alt=""></p><ul><li>也可以return後面接物件 <ul><li>回傳結果為20<br><img src="https://i.imgur.com/ln90sd9.png" alt=""></li></ul></li></ul><h3 id="簡單練習題"><a href="#簡單練習題" class="headerlink" title="簡單練習題"></a>簡單練習題</h3><ul><li>創建空陣列，並於陣列中放數1,2,3,…10</li></ul><p><img src="https://i.imgur.com/9tTJ3uL.png" alt=""><br>要放入return，否則會出現undefined<br><img src="https://i.imgur.com/TGCWt71.png" alt=""><br><img src="https://i.imgur.com/lRysWNO.png" alt=""></p><ul><li>也可以將參數改成兩個數</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">generateArray</span>(<span class="params">a, b</span>) &#123;  <span class="comment">//a,b 可以改為 from,to</span></span><br><span class="line">      <span class="keyword">var</span> result = [];</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = a; i &lt;= b; i++) &#123;</span><br><span class="line">        result.<span class="title function_">push</span>(i);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">generateArray</span>(<span class="number">3</span>, <span class="number">10</span>))</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/12sURMh.png" alt=""></p><h3 id="return"><a href="#return" class="headerlink" title="return"></a>return</h3><ul><li><p>函式中一放進return，在函式，return後面的部分就不會運行了</p></li><li><p>不需要知道結果<br><img src="https://i.imgur.com/4oPINY3.png" alt=""></p></li><li><p>需要回傳值<br><img src="https://i.imgur.com/yb0arjk.png" alt=""></p></li></ul><ul><li>參數：函式後面要傳入的值</li><li>引數：真正傳進去的東西</li></ul><p><img src="https://i.imgur.com/n66mD1K.png" alt=""></p><ul><li>Arguments:為類陣列，屬於物件</li></ul><h2 id="表達式-Expression-與陳述句-Statement-的差異"><a href="#表達式-Expression-與陳述句-Statement-的差異" class="headerlink" title="表達式(Expression)與陳述句(Statement)的差異"></a>表達式(Expression)與陳述句(Statement)的差異</h2><ul><li>表達式：會回傳值</li><li>陳述句：不會回傳值 (if…else,switch，等控制流程)</li></ul><h2 id="使用函式陳述式-Function-Statement-與函式表達式-Function-Expression"><a href="#使用函式陳述式-Function-Statement-與函式表達式-Function-Expression" class="headerlink" title="使用函式陳述式(Function Statement)與函式表達式(Function Expression)"></a>使用函式陳述式(Function Statement)與函式表達式(Function Expression)</h2><ul><li>函式陳述式(Function Statement):在使用函式之前，放入helloFunctionStatement();是可以執行</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//helloFunctionStatement();  放在前面沒關係</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">helloFunctionStatement</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;this is Function Statement &#x27;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">helloFunctionStatement</span>();</span><br></pre></td></tr></table></figure><ul><li>函式表達式(Function Expression):反之，要放在宣告之後<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//helloFunctionExpression(); 放前面，會出現錯誤</span></span><br><span class="line"><span class="keyword">var</span> helloFunctionExpression = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;this is Function Expression &#x27;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">helloFunctionExpression</span>();</span><br></pre></td></tr></table></figure>:::warning<br>因為hoisting(變數提升)的關係<br>:::</li></ul><p><a href="https://ithelp.ithome.com.tw/articles/10218937">JS 原力覺醒 Day07 - 陳述式 表達式</a></p><h2 id="變數能夠影響的範圍作用域-Scope-作用域：變數可以影響的範圍"><a href="#變數能夠影響的範圍作用域-Scope-作用域：變數可以影響的範圍" class="headerlink" title="變數能夠影響的範圍作用域( Scope 作用域：變數可以影響的範圍 )"></a>變數能夠影響的範圍作用域( Scope 作用域：變數可以影響的範圍 )</h2><ul><li>在function中，所宣告的 var a = 50;，範圍就只有涵蓋在函式中，不會影響到外面</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">helloWorld</span>(<span class="params"></span>) &#123;</span><br><span class="line">     <span class="keyword">var</span> a = <span class="number">50</span>;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="title function_">helloWorld</span>();</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/16xE1No.png" alt=""></p><ul><li>如果函式中，宣吿某變數，沒有加var/let，該變數就會影響外部<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">helloWorld</span>(<span class="params"></span>) &#123;</span><br><span class="line">     a = <span class="number">50</span>;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;function:&#x27;</span>, a);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="title function_">helloWorld</span>();</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;外部:&#x27;</span>, a);</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/tJTnR9W.png" alt=""></li></ul><h3 id="全域變數與區域變數"><a href="#全域變數與區域變數" class="headerlink" title="全域變數與區域變數"></a>全域變數與區域變數</h3><ul><li><h4 id="使用var-let-const，來宣告"><a href="#使用var-let-const，來宣告" class="headerlink" title="使用var,let,const，來宣告"></a>使用var,let,const，來宣告</h4></li><li><h4 id="全域變數：在瀏覽器中，沒有在fuction裡，直接進行宣告"><a href="#全域變數：在瀏覽器中，沒有在fuction裡，直接進行宣告" class="headerlink" title="全域變數：在瀏覽器中，沒有在fuction裡，直接進行宣告"></a>全域變數：在瀏覽器中，沒有在fuction裡，直接進行宣告</h4><ul><li>也可以用window來存取</li><li>window，是瀏覽器上的根物件<br><img src="https://i.imgur.com/TNAMSWA.png" alt=""></li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> y = <span class="number">1</span>;  <span class="comment">//在外面宣告為 全域變數</span></span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">abc</span>(<span class="params"></span>) &#123;</span><br><span class="line">     <span class="comment">//var,let,const</span></span><br><span class="line">     <span class="keyword">var</span> x = <span class="number">1</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="區域變數：在function中進行宣告"><a href="#區域變數：在function中進行宣告" class="headerlink" title="區域變數：在function中進行宣告"></a>區域變數：在function中進行宣告</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">abc</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//var,let,const</span></span><br><span class="line">      <span class="keyword">var</span> x = <span class="number">1</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="不是變數-gt-全域的屬性"><a href="#不是變數-gt-全域的屬性" class="headerlink" title="不是變數 =&gt; 全域的屬性"></a>不是變數 =&gt; 全域的屬性</h4><ul><li>z=1;</li><li>也可以用window來存取</li></ul></li></ul><p><img src="https://i.imgur.com/eMBkGKy.png" alt=""></p><h2 id="回呼函數-Callback-Function"><a href="#回呼函數-Callback-Function" class="headerlink" title="回呼函數 Callback Function"></a>回呼函數 Callback Function</h2><ul><li>把函數做為參數傳遞</li><li>當檔案讀取完畢時，請來執行這個 function，並且把結果傳進來</li><li>heyFunc(console.log)-&gt;console.log 可以替換別的</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">heyFunc</span>(<span class="params">myFunction</span>) &#123;</span><br><span class="line">     <span class="title function_">myFunction</span>(<span class="string">&#x27;hi&#x27;</span>);</span><br><span class="line">     <span class="title function_">myFunction</span>(<span class="string">&#x27;hi&#x27;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="title function_">heyFunc</span>(<span class="variable language_">console</span>.<span class="property">log</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/imMi0vS.png" alt=""></p><ul><li>非同步（Asynchronous）:回呼常用來延續非同步行動完成後的程式執行</li></ul><h3 id="其他介紹-超入門-JavaScript-教學-13-回呼函式-callback"><a href="#其他介紹-超入門-JavaScript-教學-13-回呼函式-callback" class="headerlink" title="其他介紹 超入門 JavaScript 教學 13 - 回呼函式 callback"></a>其他介紹 <a href="https://www.youtube.com/watch?v=U0YbyCaG93k">超入門 JavaScript 教學 13 - 回呼函式 callback</a></h3><ul><li>以下範例：讓cb接到shout這個函式<br><img src="https://i.imgur.com/zMT2p0j.png" alt=""><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">shout</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello,i am done&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">countToSeven</span>(<span class="params">cb</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">7</span>; i++) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span> cb === <span class="string">&#x27;fuction&#x27;</span>)</span><br><span class="line">        <span class="title function_">cb</span>(); <span class="comment">//啟動shout函式</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">countToSeven</span>(); <span class="comment">//會數1-7</span></span><br><span class="line">    <span class="comment">//要數完七之後，說&#x27;hello,i am done</span></span><br><span class="line">    <span class="title function_">countToSeven</span>(shout);</span><br><span class="line">    <span class="title function_">countToSeven</span>(<span class="number">1</span>);<span class="comment">//1不是函式，所以在if判斷句終止</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//每隔一段時間，幫我做一次</span></span><br><span class="line">    <span class="built_in">setInterval</span>(shout, <span class="number">2</span> * <span class="number">1000</span>);<span class="comment">//每隔兩秒執行sout</span></span><br><span class="line">    <span class="comment">//在多少時間之後，幫我執行</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(shout, <span class="number">1</span> * <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h3 id="js內建函式"><a href="#js內建函式" class="headerlink" title="js內建函式"></a>js內建函式</h3><ul><li>每隔一段時間，幫我做一次<br><code>setInterval(shout, 2 * 1000);</code>//每隔兩秒執行sout</li><li>在多少時間之後，幫我執行<br><code>setTimeout(shout, 1 * 1000)</code></li></ul></li></ul><h3 id="參考資料："><a href="#參考資料：" class="headerlink" title="參考資料："></a>參考資料：</h3><p><a href="https://ithelp.ithome.com.tw/articles/10192739">重新認識 JavaScript: Day 18 Callback Function 與 IIFE</a><br><a href="https://blog.techbridge.cc/2019/10/05/javascript-async-sync-and-callback/">JavaScript 中的同步與非同步（上）：先成為 callback 大師吧！</a><br><a href="https://whien.medium.com/js20min-day-18-%E9%97%9C%E6%96%BC%E5%9B%9E%E5%91%BC%E7%94%9F%E6%B4%BB%E5%8C%96-callback-1a112db1a788">JS20min Day — 18 關於回呼生活化 (Callback)</a></p><h2 id="匿名函式"><a href="#匿名函式" class="headerlink" title="匿名函式"></a>匿名函式</h2><ul><li>heyFunc裡面的function沒有名稱<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">heyFunc</span>(<span class="params">myFunction</span>) &#123;</span><br><span class="line">      <span class="title function_">myFunction</span>(<span class="string">&#x27;hi&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">heyFunc</span>(<span class="keyword">function</span> (<span class="params">message</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;message is:&#x27;</span>, message);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="comment">//message is:hi</span></span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="立即函式-IIFE"><a href="#立即函式-IIFE" class="headerlink" title="立即函式(IIFE)"></a>立即函式(IIFE)</h2><blockquote><p>Luka<br><img src="https://i.imgur.com/sriaR2r.png" alt=""></p></blockquote><ul><li>它是沒有名字的函式，要立即調用<ul><li>不讓函式內的變數污染到外面的東係</li><li>讓jquery的＄＄變成是jquery使用<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span> (<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> str = <span class="string">&#x27;Hi &#x27;</span> + name + <span class="string">&#x27;!&#x27;</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">      &#125;)(<span class="string">&#x27;Sam&#x27;</span>);</span><br><span class="line">     </span><br></pre></td></tr></table></figure></li></ul></li><li>一般常見寫法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sayHi = <span class="keyword">function</span> (<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> str = <span class="string">&#x27;Hi &#x27;</span> + name + <span class="string">&#x27;!&#x27;</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">&#125;(<span class="string">&#x27;Peter&#x27;</span>)<span class="comment">//在後面立即執行</span></span><br><span class="line">  <span class="comment">// sayHi(&quot;Peter&quot;);</span></span><br></pre></td></tr></table></figure></li></ul><p><a href="https://pjchender.blogspot.com/2016/05/javascriptiifesimmediately-invoked.html">[筆記] 談談JavaScript中的IIFEs(Immediately Invoked Functions Expressions)</a><br><a href="https://pjchender.blogspot.com/2016/05/iifesimmediately-invoked-functions.html">[筆記] 為什麼我們要用IIFEs(Immediately Invoked Functions Expressions)</a></p><h2 id="hoisting-變數提升淺談"><a href="#hoisting-變數提升淺談" class="headerlink" title="hoisting 變數提升淺談"></a>hoisting 變數提升淺談</h2><ul><li><p>js的變數與函式的宣告提升</p></li><li><p>不管在哪一行使用了變數，都視為第一行宣告</p><blockquote><p>比較好的流程 By 彭彭<br><img src="https://i.imgur.com/DcnsGsL.png" alt=""></p></blockquote></li></ul><p>但在js有hoisting 變數提升</p><ul><li>就算把變數宣告放在後面，依然可以運作(會將<code>var x</code>提升到最前面)<blockquote><p><img src="https://i.imgur.com/VmUcFV3.png" alt=""></p></blockquote></li></ul><p>進一步細節…</p><blockquote><p><img src="https://i.imgur.com/vBfQGUk.png" alt=""><br>電腦解讀如下 </p></blockquote><ul><li><code>var x</code>會提升<blockquote><p><img src="https://i.imgur.com/0qjf9j8.png" alt=""><br>結果會印出undefined</p></blockquote></li></ul><h3 id="在函示fuction的變數提升"><a href="#在函示fuction的變數提升" class="headerlink" title="在函示fuction的變數提升"></a>在函示fuction的變數提升</h3><ul><li>先宣告函式，在能呼叫函式執行<blockquote><p><img src="https://i.imgur.com/jSAAaWN.png" alt=""></p></blockquote></li><li>在js先呼叫，依然可以運作<blockquote><p><img src="https://i.imgur.com/vKZ9eXh.png" alt=""></p></blockquote></li></ul><p>其他狀況…(把函式裝到變數中當作資料)</p><ul><li>在此情形，它會出現錯誤，回報test不是一個函式<blockquote><p><img src="https://i.imgur.com/k2ANLPn.png" alt=""></p></blockquote></li><li>程式的解讀 :point_down: </li><li>只有var test被提升<blockquote><p><img src="https://i.imgur.com/ZOasHkk.png" alt=""></p></blockquote></li></ul><blockquote><p>程式柴<br><img src="https://i.imgur.com/WuqIKWR.png" alt=""></p></blockquote><blockquote><ul><li>沒有宣告</li><li><img src="https://i.imgur.com/tlctwnQ.png" alt=""></li></ul></blockquote><h2 id="常用的內建函式"><a href="#常用的內建函式" class="headerlink" title="常用的內建函式"></a>常用的內建函式</h2><h3 id="Number類型"><a href="#Number類型" class="headerlink" title="Number類型"></a>Number類型</h3><ul><li><h4 id="字串轉數字"><a href="#字串轉數字" class="headerlink" title="字串轉數字"></a>字串轉數字</h4></li></ul><p><img src="https://i.imgur.com/SKn9IWm.png" alt=""></p><ul><li>parseInt 是取整數，若遇到如20.35，就只會取到20</li></ul><p><img src="https://i.imgur.com/MwOQLxK.png" alt=""></p><ul><li>遇到小數點且要保留的時候，使用parseFloat<ul><li>結果為30.35</li></ul></li></ul><p><img src="https://i.imgur.com/fVqNBhR.png" alt=""></p><p><img src="https://i.imgur.com/xct9oPf.png" alt=""></p><ul><li><code>Math.ceil()</code>=&gt; 無條件進位</li><li><code>Math.floor()</code>=&gt; 無條件捨去</li><li><code>Math.round()</code> =&gt; 四捨五入</li><li><code>Math.sqrt()</code> =&gt; 開根號</li><li><code>Math.pow()</code> =&gt; 次方</li><li><code>Math.radom()</code> =&gt; 產生隨機數(0-1，不包含1)</li><li><code>toString()</code> =&gt; 數字轉字串<ul><li>或是加空字串</li></ul></li></ul><p><img src="https://i.imgur.com/3TGrI7J.png" alt=""></p><p><img src="https://i.imgur.com/u9axhKX.png" alt=""></p><h3 id="String類型"><a href="#String類型" class="headerlink" title="String類型"></a>String類型</h3><ul><li><p><code>toUpperCase</code>=&gt; 轉大寫</p></li><li><p><code>toLowerCase</code> =&gt; 轉小寫</p></li><li><p><code>indexOf</code> =&gt; 找出字串中，單字的索引（用於檢查某字是否存在字串中）<br><img src="https://i.imgur.com/u51AqqO.png" alt=""></p></li><li><p><code>replace()</code> =&gt; 取代</p><ul><li>用正規表達式來選擇 某些字<br><img src="https://i.imgur.com/AboC56u.png" alt=""><br><img src="https://i.imgur.com/JQ5KHBI.png" alt=""></li></ul></li><li><p><code>split()</code> =&gt; 切字串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//split較常使用的情形</span></span><br><span class="line">  <span class="comment">//當資料為一連串字串，利用逗號切割 變成陣列，比較好運用</span></span><br><span class="line">  <span class="keyword">var</span> str = <span class="string">&#x27;data1,data2,data3,data4&#x27;</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/XA193Oc.png" alt=""></p></li><li><p><code>trim()</code> =&gt;從一個字符串的两端刪除空白字符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> greeting = <span class="string">&#x27;   Hello world!   &#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(greeting);</span><br><span class="line"><span class="comment">// expected output: &quot;   Hello world!   &quot;;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(greeting.<span class="title function_">trim</span>());</span><br><span class="line"><span class="comment">// expected output: &quot;Hello world!&quot;;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="Array-類型"><a href="#Array-類型" class="headerlink" title="Array 類型"></a>Array 類型</h3><ul><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/join">Array.prototype.join()</a> </li><li>方法會將陣列（或一個類陣列（array-like）物件）中所有的元素連接、合併成一個 ‘字串’，並回傳此字串(在陣列中每個元素間插入設定的東西)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> elements = [<span class="string">&#x27;Fire&#x27;</span>, <span class="string">&#x27;Air&#x27;</span>, <span class="string">&#x27;Water&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(elements.<span class="title function_">join</span>());</span><br><span class="line"><span class="comment">// expected output: &quot;Fire,Air,Water&quot; //會變成字串</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(elements.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"><span class="comment">// expected output: &quot;FireAirWater&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(elements.<span class="title function_">join</span>(<span class="string">&#x27;-&#x27;</span>));</span><br><span class="line"><span class="comment">// expected output: &quot;Fire-Air-Water&quot;</span></span><br></pre></td></tr></table></figure></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/map">Array.prototype.map()</a></li><li>建立一個新的陣列，其內容為原陣列的每一個元素經由回呼函式運算後所回傳的結果之集合。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">     arr.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">x</span>) &#123;</span><br><span class="line">       <span class="keyword">return</span> x * -<span class="number">1</span></span><br><span class="line">     &#125;)</span><br><span class="line">   )</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/0FKeOro.png" alt=""></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//也可以接著寫下去</span></span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">      arr</span><br><span class="line">        .<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">x</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> x * -<span class="number">1</span></span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">x</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> x * <span class="number">2</span></span><br><span class="line">        &#125;)</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/FrkeTMZ.png" alt=""></p><ul><li><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">Array.prototype.filter()</a></p></li><li><p>過濾</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, -<span class="number">5</span>, <span class="number">3</span>, -<span class="number">2</span>];</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(</span><br><span class="line">      arr</span><br><span class="line">        .<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">x</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> x * <span class="number">2</span></span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">x</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> x &gt; <span class="number">0</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">//把負數過濾掉，留下正數</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/G8TKP1k.png" alt=""></p></li><li><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">Array.prototype.slice()</a></p></li><li><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/splice">Array.prototype.splice()</a></p><ul><li>splice 1.插入元素<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> months = [<span class="string">&#x27;Jan&#x27;</span>, <span class="string">&#x27;March&#x27;</span>, <span class="string">&#x27;April&#x27;</span>, <span class="string">&#x27;June&#x27;</span>];</span><br><span class="line">months.<span class="title function_">splice</span>(<span class="number">1</span>, <span class="number">0</span>, <span class="string">&#x27;Feb&#x27;</span>);</span><br><span class="line"><span class="comment">// inserts at index 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(months);</span><br><span class="line"><span class="comment">// expected output: Array [&quot;Jan&quot;, &quot;Feb&quot;, &quot;March&quot;, &quot;April&quot;, &quot;June&quot;]</span></span><br><span class="line"></span><br><span class="line">months.<span class="title function_">splice</span>(<span class="number">4</span>, <span class="number">1</span>, <span class="string">&#x27;May&#x27;</span>);</span><br><span class="line"><span class="comment">// replaces 1 element at index 4</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(months);</span><br><span class="line"><span class="comment">// expected output: Array [&quot;Jan&quot;, &quot;Feb&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>splice 2.刪除元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myFish = [<span class="string">&#x27;angel&#x27;</span>, <span class="string">&#x27;clown&#x27;</span>, <span class="string">&#x27;drum&#x27;</span>, <span class="string">&#x27;mandarin&#x27;</span>, <span class="string">&#x27;sturgeon&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> removed = myFish.<span class="title function_">splice</span>(<span class="number">3</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// removed 為 [&quot;mandarin&quot;]</span></span><br><span class="line"><span class="comment">// myFish 為 [&quot;angel&quot;, &quot;clown&quot;, &quot;drum&quot;, &quot;sturgeon&quot;]</span></span><br></pre></td></tr></table></figure></li><li><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/sort">Array.prototype.sort()</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> months = [<span class="string">&#x27;March&#x27;</span>, <span class="string">&#x27;Jan&#x27;</span>, <span class="string">&#x27;Feb&#x27;</span>, <span class="string">&#x27;Dec&#x27;</span>];</span><br><span class="line">months.<span class="title function_">sort</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(months);</span><br><span class="line"><span class="comment">// expected output: Array [&quot;Dec&quot;, &quot;Feb&quot;, &quot;Jan&quot;, &quot;March&quot;] //按照第一個字母順序排列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">30</span>, <span class="number">4</span>, <span class="number">21</span>, <span class="number">100000</span>];</span><br><span class="line">array1.<span class="title function_">sort</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array1);</span><br><span class="line"><span class="comment">// expected output: Array [1, 100000, 21, 30, 4] //是一字串，以第一個數字來排列</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>依照數字大小排列</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">30</span>, <span class="number">4</span>, <span class="number">2</span>];</span><br><span class="line"> arr.<span class="title function_">sort</span>(<span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line">   <span class="keyword">if</span> (a === b) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">if</span> (b &gt; a) <span class="keyword">return</span> -<span class="number">1</span>; <span class="comment">//不換</span></span><br><span class="line">   <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">//正數，換位置</span></span><br><span class="line"> &#125;)</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/dMAXe66.png" alt=""></p></li></ul><h4 id="「回傳」與「印出」的差異"><a href="#「回傳」與「印出」的差異" class="headerlink" title="「回傳」與「印出」的差異"></a>「回傳」與「印出」的差異</h4><ul><li>函式可以透過 return 回傳函式運算完的結果<blockquote><p> 述程式碼的執行：</p></blockquote></li></ul><p>1.<code>console.log(add(1, 2))</code> =&gt; 帶入functoin，<code>console.log(a, b);</code> =&gt; 印出1,2<br>2.往下，到return undefined; 然後進入add(1, 2)的回傳值，就會是undefined</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">undefined</span>;  <span class="comment">//不加return，預設會是undefined</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">add</span>(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">   </span><br></pre></td></tr></table></figure><ul><li>以為 <code>add(1, 2)</code> 的回傳值是 3，但不是，那是因為它在裡面 console.log() 所以把結果印出來了。  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(a + b)</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="title function_">add</span>(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure></li><li>如果真的要有回傳值的話要這樣寫：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> a + b</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">add</span>(<span class="number">1</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure></li></ul><p>參考資料： <a href="https://ithelp.ithome.com.tw/articles/10214256">JavaScript 初心者筆記: 函式實際運作 - 回傳值與函式間互相傳遞</a><br>,<a href="https://ithelp.ithome.com.tw/articles/10214364">後設鐵人 Day4：請幫我簽個名好嗎？</a></p><h3 id="Immutable-觀念-不可變"><a href="#Immutable-觀念-不可變" class="headerlink" title="Immutable 觀念 (不可變)"></a>Immutable 觀念 (不可變)</h3><ul><li>除了物件、陣列以外，其他都是不可變的</li><li>沒辦法改它，就只能回傳新的<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">   a.<span class="property">toUpperCase</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">   <span class="comment">//印出：hello，沒有改變原本變數的內容</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"> a = a.<span class="title function_">toUpperCase</span>(); <span class="comment">//要回傳給a，把原本的a值蓋掉</span></span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//或是增設一個新變數</span></span><br><span class="line"> <span class="keyword">var</span> a = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"> <span class="keyword">var</span> b = a.<span class="title function_">toUpperCase</span>(); </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br><span class="line"> </span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> parseInt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS基本功- 控制流程 Control Flow</title>
      <link href="/2020/12/26/js-Control-Flow/"/>
      <url>/2020/12/26/js-Control-Flow/</url>
      
        <content type="html"><![CDATA[<h2 id="簡易控制流程的撰寫"><a href="#簡易控制流程的撰寫" class="headerlink" title="簡易控制流程的撰寫"></a>簡易控制流程的撰寫</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;只被當一科&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (str === <span class="string">&#x27;all pass&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;帶你去歐洲玩&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str === <span class="string">&#x27;只被當一科&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;帶你去宜蘭玩&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;禁足&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帶你去宜蘭玩</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用switch來撰寫-太多如果的話可以改用switch"><a href="#使用switch來撰寫-太多如果的話可以改用switch" class="headerlink" title="使用switch來撰寫(太多如果的話可以改用switch)"></a>使用switch來撰寫(太多如果的話可以改用switch)</h2><ul><li>使用break，是用來跳出swich迴圈（換句話說，沒有寫break的話會使程式一直往下跑）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用switch 改寫 if else</span></span><br><span class="line">   <span class="keyword">var</span> key = <span class="string">&#x27;all pass&#x27;</span>;</span><br><span class="line">   <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">     <span class="keyword">case</span> <span class="string">&#x27;all pass&#x27;</span>:</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;帶你去歐洲玩&#x27;</span>);</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">     <span class="keyword">case</span> <span class="string">&#x27;只被當一科&#x27;</span>:</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;帶你去宜蘭玩&#x27;</span>);</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">     <span class="attr">default</span>:</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;禁足&#x27;</span>);</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">// 帶你去歐洲玩</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="迴圈基本介紹"><a href="#迴圈基本介紹" class="headerlink" title="迴圈基本介紹"></a>迴圈基本介紹</h2><p>loop：一直做一樣的事情<br>無窮迴圈，發生的情形：沒有設終止條件，或是終止條件設錯 （<code>control+c</code> 終止它）</p><ul><li>可在程式最前面，加入debugger<br><img src="https://i.imgur.com/kpTOWx4.png" alt=""></li></ul><h2 id="1-迴圈for"><a href="#1-迴圈for" class="headerlink" title="1.迴圈for"></a>1.迴圈for</h2><blockquote><p>彭彭的課程<br><img src="https://i.imgur.com/JYayJeg.png" alt=""></p></blockquote><h3 id="用-for-迴圈數綿羊數到一百隻，直到睡著"><a href="#用-for-迴圈數綿羊數到一百隻，直到睡著" class="headerlink" title="用 for 迴圈數綿羊數到一百隻，直到睡著"></a>用 for 迴圈數綿羊數到一百隻，直到睡著</h3><ul><li><code>var</code>後面宣告的變數，可以替換不同字母<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for(初始值;終止條件;每次執行的語句)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第&quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot;隻綿羊&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//會印出1~9</span></span><br><span class="line">    <span class="comment">//i++ 意思指 i+=1 ，也是i=i+1</span></span><br></pre></td></tr></table></figure><h3 id="用-for-迴圈倒著數綿羊"><a href="#用-for-迴圈倒著數綿羊" class="headerlink" title="用 for 迴圈倒著數綿羊"></a>用 for 迴圈倒著數綿羊</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">100</span>; k &gt; <span class="number">0</span>; k--) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第&quot;</span> + k + <span class="string">&quot;隻綿羊&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span> (k === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;睡著了!&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="用-for-迴圈-數到第-31-隻綿羊就睡著了！-break"><a href="#用-for-迴圈-數到第-31-隻綿羊就睡著了！-break" class="headerlink" title="用 for 迴圈 數到第 31 隻綿羊就睡著了！ (break)"></a>用 for 迴圈 數到第 31 隻綿羊就睡著了！ (break)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第&quot;</span> + i + <span class="string">&quot;隻綿羊&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span> (i === <span class="number">31</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;睡著了！&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">       <span class="keyword">if</span> (i === <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;覺得想睡了！&#x27;</span>); <span class="comment">//到10不會停止</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="用-for-迴圈-跳著數"><a href="#用-for-迴圈-跳著數" class="headerlink" title="用 for 迴圈 跳著數"></a>用 for 迴圈 跳著數</h3></li><li><h4 id="奇數-gt-對2取於數為1者"><a href="#奇數-gt-對2取於數為1者" class="headerlink" title="奇數 -&gt; 對2取於數為1者"></a>奇數 -&gt; 對2取於數為1者</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (i % <span class="number">2</span> === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第&quot;</span> + i + <span class="string">&quot;隻綿羊&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="印出1-4-7-10"><a href="#印出1-4-7-10" class="headerlink" title="印出1,4,7,10"></a>印出1,4,7,10</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (i % <span class="number">3</span> === <span class="number">1</span>)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第&quot;</span> + i + <span class="string">&quot;隻綿羊&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="用-for-迴圈-我只想跳過第四隻綿羊"><a href="#用-for-迴圈-我只想跳過第四隻綿羊" class="headerlink" title="用 for 迴圈 我只想跳過第四隻綿羊"></a>用 for 迴圈 我只想跳過第四隻綿羊</h3><ul><li>使用<code>continue</code>:會跳過一次(跳過設定的條件)，然後繼續下一次迴圈</li><li>注意語法的順序，如果console.log()在if..continue之前，會變成先讀取所有的i，不會跳過指定位置</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (i === <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第&quot;</span> + i + <span class="string">&quot;隻綿羊&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/1lzSCxs.png" alt=""></p><h3 id="for與陣列的搭配"><a href="#for與陣列的搭配" class="headerlink" title="for與陣列的搭配"></a>for與陣列的搭配</h3><ul><li>i是依照索引來計算，故應該是要0,1,2,3,4 =&gt; &lt;5<ul><li>最後一個索引值是4(第5個沒有值)</li></ul></li></ul><p><img src="https://i.imgur.com/HgTnl9r.png" alt=""></p><p><img src="https://i.imgur.com/UHUvq5n.png" alt=""></p><h2 id="2-迴圈while"><a href="#2-迴圈while" class="headerlink" title="2.迴圈while"></a>2.迴圈while</h2><h4 id="透過彭彭的課程來認識迴圈while"><a href="#透過彭彭的課程來認識迴圈while" class="headerlink" title="透過彭彭的課程來認識迴圈while"></a>透過彭彭的課程來認識迴圈while</h4><p><img src="https://i.imgur.com/pJbuHEp.png" alt=""></p><h3 id="迴圈思考方式："><a href="#迴圈思考方式：" class="headerlink" title="迴圈思考方式："></a>迴圈思考方式：</h3><blockquote><p>彭彭的課程</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1+2+...+50 的運算流程 </span></span><br><span class="line"><span class="keyword">var</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> n=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (n&lt;=<span class="number">50</span>)&#123;</span><br><span class="line">sum=sum+n;</span><br><span class="line"> n++</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">alert</span>(sum);</span><br></pre></td></tr></table></figure></blockquote><h3 id="方式："><a href="#方式：" class="headerlink" title="方式："></a>方式：</h3><p>和迴圈相關的變數追蹤(sum,n)</p><p>第0次迴圈:先判斷n是否&lt;=50<br>   sum:0 ,n:1<br>第1次迴圈：<br>   sum:1,n:2<br>第2次迴圈：先判斷n是否&lt;=50 (根據上一個n是2)<br>   sum:(1+2)=3,n:3<br>第3次迴圈：<br>   sum:(3+3)=6,n:4<br>…<br>…</p><p>第50次迴圈：<br>   sum:1275,n:51<br>第51次迴圈：因大於50，故跳離回圈結束</p><h3 id="延續上面的思考，加入continue"><a href="#延續上面的思考，加入continue" class="headerlink" title="延續上面的思考，加入continue"></a>延續上面的思考，加入continue</h3><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line"> <span class="keyword">if</span>(<span class="number">1</span>%<span class="number">2</span>= = =<span class="number">0</span>)&#123;<span class="keyword">continue</span>&#125;</span><br><span class="line"> x++</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">alert</span>(x)</span><br></pre></td></tr></table></figure></code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">變數追蹤(x,i)</span><br><span class="line">0:</span><br><span class="line">  x:0,i:0</span><br><span class="line">1: </span><br><span class="line">  x:0 (i為0，對2取餘數為0，進入continue，然後重新開始回圈，沒有進入x++), i:1</span><br><span class="line">2: </span><br><span class="line">  x:1(i為1，對2取餘數不為0，所以沒有執行continue，直接進入x++),i:2</span><br><span class="line"></span><br><span class="line">3:</span><br><span class="line">  x:1,i:3</span><br><span class="line">4:</span><br><span class="line">  x:2,i:4</span><br><span class="line">...</span><br><span class="line">100:</span><br><span class="line">  x:50,i:100</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h3 id="用-while-也可以達到相同的屬羊效果"><a href="#用-while-也可以達到相同的屬羊效果" class="headerlink" title="用 while 也可以達到相同的屬羊效果"></a>用 while 也可以達到相同的屬羊效果</h3><ul><li>印出0~10</li><li>相對for囉唆一點</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (x &lt; <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line">    x++;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/dl0l82W.png" alt=""></p><ul><li><h4 id="利用console來debug"><a href="#利用console來debug" class="headerlink" title="利用console來debug"></a>利用console來debug</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x &lt; <span class="number">10</span>) &#123;</span><br><span class="line">      <span class="comment">//利用console來debug</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(x)</span><br><span class="line">      x++;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第&quot;</span> + x + <span class="string">&quot;隻綿羊&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/f347W4t.png" alt=""></p></li><li><h4 id="搭配continue"><a href="#搭配continue" class="headerlink" title="搭配continue"></a>搭配continue</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x &lt; <span class="number">10</span>) &#123;</span><br><span class="line">      <span class="comment">//利用console來debug</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(x)</span><br><span class="line">      x++;</span><br><span class="line">      <span class="keyword">if</span> (x == <span class="number">4</span>)</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第&quot;</span> + x + <span class="string">&quot;隻綿羊&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="搭配break"><a href="#搭配break" class="headerlink" title="搭配break"></a>搭配break</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (k &lt; <span class="number">10</span>) &#123;</span><br><span class="line"></span><br><span class="line">      k++;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第&quot;</span> + k + <span class="string">&quot;隻綿羊&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span> (k == <span class="number">5</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-迴圈-do-while"><a href="#3-迴圈-do-while" class="headerlink" title="3.迴圈 do..while"></a>3.迴圈 do..while</h2><ul><li><code>()</code>放條件，<code>&#123;&#125;</code>放區塊<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">      i++</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第&#x27;</span> + i + <span class="string">&#x27;隻綿羊&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">while</span> (i &lt; <span class="number">10</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="與while的不同"><a href="#與while的不同" class="headerlink" title="與while的不同"></a>與while的不同</h3></li><li>因為<code>i&lt;10</code>的條件在最後面，所以他會先跑完do，再到while終止<ul><li>i++完之後，跑到<code>while(11&gt;10)</code>，跳出迴圈，執行console.log<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">10</span>;</span><br><span class="line">   <span class="keyword">do</span> &#123;</span><br><span class="line">     i++</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第&#x27;</span> + i + <span class="string">&#x27;隻綿羊&#x27;</span>)</span><br><span class="line">   &#125; <span class="keyword">while</span> (i &lt; = <span class="number">10</span>);</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;i=&#x27;</span>,i); <span class="comment">//i=11</span></span><br></pre></td></tr></table></figure></li></ul></li><li>另一種寫法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">      i++</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第&#x27;</span> + i + <span class="string">&#x27;隻綿羊&#x27;</span>)</span><br><span class="line">      <span class="keyword">if</span> (i&gt;<span class="number">10</span>)&#123;</span><br><span class="line">         <span class="keyword">break</span>    <span class="comment">//同等於終止條件</span></span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="literal">true</span>);  <span class="comment">//如果沒有if條件，這裡又設true，此狀況下會形成無限迴圈</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;i=&#x27;</span>,i); <span class="comment">//11</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/31WqBwO.png" alt=""></p><ul><li>同樣放入while回圈，結果就不會顯示，因為一開始k=10，進入比較，就不符合條件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> k = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">while</span> (k &lt; <span class="number">10</span>) &#123;</span><br><span class="line">      k++;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第&#x27;</span> + k + <span class="string">&#x27;隻綿羊&#x27;</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="雙層回圈"><a href="#雙層回圈" class="headerlink" title="雙層回圈"></a>雙層回圈</h2><h3 id="用-99-乘法表學雙層迴圈"><a href="#用-99-乘法表學雙層迴圈" class="headerlink" title="用 99 乘法表學雙層迴圈"></a>用 99 乘法表學雙層迴圈</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有兩層，需數2次</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (k = <span class="number">1</span>; k &lt; <span class="number">10</span>; k++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;i:&quot;</span> + i, <span class="string">&quot;k:&quot;</span> + k);</span><br><span class="line">        <span class="comment">// console.log(i + &#x27;*&#x27; + k + &#x27;=&#x27; + (i * k));</span></span><br><span class="line">        <span class="keyword">let</span> result = i * k;</span><br><span class="line">        <span class="keyword">let</span> str = i + <span class="string">&quot;x&quot;</span> + k + <span class="string">&quot;=&quot;</span> + result;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><p>參考資料：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/continue">MDN continue</a><br><a href="https://ithelp.ithome.com.tw/articles/10191453">重新認識 JavaScript: Day 09 流程判斷與迴圈</a><br><a href="https://blog.csdn.net/XXJ19950917/article/details/78310346">JS跳出循环的三种方法(break, return, continue)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> switch </tag>
            
            <tag> 迴圈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS基本功- 運算元與運算子</title>
      <link href="/2020/12/26/js-operator/"/>
      <url>/2020/12/26/js-operator/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/42eMxRa.png" alt=""></p><h2 id="比較運算子"><a href="#比較運算子" class="headerlink" title="比較運算子"></a>比較運算子</h2><ul><li>運算符號，使用<code>&gt;</code>,<code>&lt;</code>,<code>=</code>來做判斷</li></ul><p><img src="https://i.imgur.com/XPfa6QC.png" alt=""></p><h3 id="三個等於與兩個等於-有什麼不一樣"><a href="#三個等於與兩個等於-有什麼不一樣" class="headerlink" title="三個等於與兩個等於 有什麼不一樣"></a>三個等於與兩個等於 有什麼不一樣</h3><ul><li>只有一個等於：<code>var x=1;</code> -&gt; 賦值運算子</li><li>所以比較運算值的時候，會使用兩個等於以上</li></ul><h4 id="兩個等於"><a href="#兩個等於" class="headerlink" title="兩個等於"></a>兩個等於</h4><ul><li>不是嚴格的比較</li><li>轉換過的值是相同的，就會符合</li></ul><p><img src="https://i.imgur.com/aXRMO9v.png" alt=""></p><h4 id="三個等於"><a href="#三個等於" class="headerlink" title="三個等於"></a>三個等於</h4><ul><li>實務常用，且較為嚴謹</li><li>字串需經過轉換為數值，進行比較  </li></ul><p><img src="https://i.imgur.com/qFnbPBt.png" alt=""></p><h2 id="算數運算子"><a href="#算數運算子" class="headerlink" title="算數運算子"></a>算數運算子</h2><ul><li><code>+</code>,<code>-</code>, <code>*</code> ,<code>/</code></li><li>先乘除後加減</li><li><code>parseInt(10/3)</code> -&gt;取整數<ul><li>除了取整數外，也將文字轉數值</li></ul></li></ul><p><img src="https://i.imgur.com/GDNiVIa.png" alt=""></p><h3 id="餘數與被除數"><a href="#餘數與被除數" class="headerlink" title="餘數與被除數"></a>餘數與被除數</h3><ul><li>取餘數：<code>5%3</code> –&gt;2 指5對3取餘數為2</li><li><a href="https://ithelp.ithome.com.tw/articles/10191180">重新認識 JavaScript: Day 06 運算式與運算子</a> | <a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Expressions_and_Operators">MDN運算式與運算子</a></li></ul><h2 id="邏輯運算子"><a href="#邏輯運算子" class="headerlink" title="邏輯運算子"></a>邏輯運算子</h2><ul><li><h4 id="用於結合流程判斷：兩件事同時發生，要兩個都符合、或是達成其中之一"><a href="#用於結合流程判斷：兩件事同時發生，要兩個都符合、或是達成其中之一" class="headerlink" title="用於結合流程判斷：兩件事同時發生，要兩個都符合、或是達成其中之一"></a>用於結合流程判斷：兩件事同時發生，要兩個都符合、或是達成其中之一</h4></li></ul><h3 id="AND-amp-amp"><a href="#AND-amp-amp" class="headerlink" title="AND (&amp;&amp;)"></a>AND (&amp;&amp;)</h3><p>運算式1 <code>&amp;&amp;</code> 運算式2</p><ul><li>假如 運算式1 可以被轉換成 false的話，回傳 運算式1; 否則，回傳 運算式2。 因此，<code>&amp;&amp;</code>只有在 兩個運算元都是True 時才會回傳 True，否則回傳 false。</li></ul><h3 id="OR"><a href="#OR" class="headerlink" title="OR(||)"></a>OR(<code>||</code>)</h3><p>運算式1 || 運算式2</p><ul><li>假如 運算式1 可以被轉換成 true的話，回傳 運算式1; 否則，回傳 運算式2。 因此，||在 兩個運算元有任一個是True 時就會回傳 True，否則回傳 false。</li></ul><ul><li>以布林值為例<br>在OR中，只要有其中一個為true，就會回傳true</li></ul><p><img src="https://i.imgur.com/MVdrWHD.png" alt=""></p><ul><li>運算子的判斷 </li></ul><p><img src="https://i.imgur.com/QrVIaVk.png" alt=""></p><ul><li><code>x-y</code> 是正確的，再往下執行<code>(y-1)</code> 回傳1<code>(2-1)</code></li></ul><p><img src="https://i.imgur.com/ePTB51j.png" alt=""></p><ul><li>執行<code>x-y</code>時，就確定它有值了，所以先行回傳3 </li></ul><p><img src="https://i.imgur.com/jDgoWtM.png" alt=""></p><ul><li>在運算式中第一個值為false，於<code>&amp;&amp;</code>,<code>||</code></li></ul><p><img src="https://i.imgur.com/ozAgEpK.png" alt=""></p><ul><li>其他範例： </li></ul><p>z沒有設定值，就會被設定一個預設值 -&gt;變數沒有值的時候，給他預設值<br>n已經有值，就會回傳他自己的值</p><p><img src="https://i.imgur.com/GCQrL1J.png" alt=""></p><h3 id="NOT"><a href="#NOT" class="headerlink" title="NOT (!)"></a>NOT (!)</h3><p><img src="https://i.imgur.com/AgVDowW.png" alt=""></p><p>清楚介紹：<a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Expressions_and_Operators#%E9%82%8F%E8%BC%AF%E9%81%8B%E7%AE%97%E5%AD%90">MDN</a></p><h2 id="三元運算子"><a href="#三元運算子" class="headerlink" title="三元運算子"></a>三元運算子</h2><ul><li>有三個運算元</li><li>如果 ？ 我就 ： 不然 (如果我有1千萬 ? 我就 ： 否則)<ul><li><code>1&gt;=3</code>是false，所以回傳b </li></ul></li></ul><p><img src="https://i.imgur.com/zx1ABJ0.png" alt=""></p><p><img src="https://i.imgur.com/kWSDA5Q.png" alt=""></p><ul><li>也同等於if else</li></ul><p><img src="https://i.imgur.com/e4e2VMo.png" alt=""></p><h2 id="賦值運算子與次方-系列"><a href="#賦值運算子與次方-系列" class="headerlink" title="賦值運算子與次方(+= 系列)"></a>賦值運算子與次方(+= 系列)</h2><ul><li><h3 id="運算"><a href="#運算" class="headerlink" title="+=運算"></a>+=運算</h3></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;賦值運算子&#x27;</span>)</span><br><span class="line">   <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;x=&#x27;</span>, x); <span class="comment">//1</span></span><br><span class="line">   x += <span class="number">1</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;x+=1 等於&#x27;</span>, x); <span class="comment">//2</span></span><br><span class="line">   <span class="comment">//x=x+1</span></span><br><span class="line">   <span class="keyword">var</span> y = <span class="number">10</span>;</span><br><span class="line">   y -= <span class="number">2</span>;</span><br><span class="line">   <span class="comment">//y=y-2</span></span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(y);</span><br><span class="line">   x *= <span class="number">5</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;x*=5 等於&#x27;</span>, x); <span class="comment">//10</span></span><br><span class="line">   x /= <span class="number">2</span>;</span><br><span class="line">   <span class="comment">//x=x/2</span></span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;x/=2等於&#x27;</span>, x) <span class="comment">//5</span></span><br><span class="line">   <span class="comment">////////////////////////</span></span><br><span class="line">   <span class="keyword">var</span> z = <span class="number">35</span>;</span><br><span class="line">   z %= <span class="number">10</span>;</span><br><span class="line">   <span class="comment">// z = z % 10;</span></span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;z %=10&#x27;</span>, z);</span><br></pre></td></tr></table></figure><ul><li><h3 id="次方運算"><a href="#次方運算" class="headerlink" title="次方運算"></a>次方運算</h3></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//次方</span></span><br><span class="line"> <span class="comment">/////////</span></span><br><span class="line"> <span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;a **5&#x27;</span>, a ** <span class="number">5</span>); <span class="comment">//2的5次方＝32</span></span><br></pre></td></tr></table></figure><ul><li><h3 id="給預設值"><a href="#給預設值" class="headerlink" title="給預設值"></a>給預設值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> b;</span><br><span class="line">    b ||= <span class="number">10</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;給預設值 b&#x27;</span>, b); <span class="comment">//回傳10</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> c = <span class="number">555</span>;</span><br><span class="line">    c ||= <span class="number">10</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;給預設值 c&#x27;</span>, c); <span class="comment">//回傳555 ; 因為c有宣告，所以c適用原本給的值</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> parseInt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS基本功- 變數與型別</title>
      <link href="/2020/12/26/js-variable/"/>
      <url>/2020/12/26/js-variable/</url>
      
        <content type="html"><![CDATA[<h2 id="使用var來宣告變數"><a href="#使用var來宣告變數" class="headerlink" title="使用var來宣告變數"></a>使用var來宣告變數</h2><h4 id="如果var沒有給予任何值，會呈現undefine"><a href="#如果var沒有給予任何值，會呈現undefine" class="headerlink" title="如果var沒有給予任何值，會呈現undefine"></a>如果var沒有給予任何值，會呈現undefine</h4><p><img src="https://i.imgur.com/ZV4O7gJ.png" alt=""></p><h4 id="給予值之後"><a href="#給予值之後" class="headerlink" title="給予值之後"></a>給予值之後</h4><p><img src="https://i.imgur.com/b916Z2B.png" alt=""></p><p>程式語言中 等於符號<code>=</code> 不是比較的意思，是-&gt;指派值的意思<br>上圖：1是一個值，它指派給x這個變數</p><h3 id="要比較值的大小"><a href="#要比較值的大小" class="headerlink" title="要比較值的大小"></a>要比較值的大小</h3><ul><li>true,false（布林值）</li><li>宣告x為1,y=2;利用 <code>===</code>來判斷<br><img src="https://i.imgur.com/0jhw1fi.png" alt=""></li></ul><h3 id="型別"><a href="#型別" class="headerlink" title="型別"></a>型別</h3><ul><li>剛剛把1給x這個變數</li><li>當查看型別時，如下圖<br><img src="https://i.imgur.com/y0o91bX.png" alt=""></li></ul><hr><h2 id="在VS-code-來撰寫-JS"><a href="#在VS-code-來撰寫-JS" class="headerlink" title="在VS code 來撰寫 JS"></a>在VS code 來撰寫 JS</h2><ul><li>與剛剛在chrom一樣的方式來輸入x,y</li><li>利用console.log來印出資料</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>使用 VS code 來撰寫 JS，講解變數，值與型別<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>EX 01<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello world&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> x;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x);  <span class="comment">// 出現undefined</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> y = <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(y);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/pFvGU90.png" alt=""></p><h2 id="型別介紹："><a href="#型別介紹：" class="headerlink" title="型別介紹："></a>型別介紹：</h2><h3 id="Number-數值"><a href="#Number-數值" class="headerlink" title="Number 數值"></a>Number 數值</h3><ul><li>通常程式語言會分成，如：python’java’c…<ul><li>整數 integer：只需紀錄完整數字</li><li>浮點數 float：小數點</li></ul></li><li>而javascript 不區分 -&gt; 只有 數值number（具有浮點數能力）</li><li>以下宣告 <code>b=1.1</code>，查看型別發現是<code>typeof</code></li></ul><p><img src="https://i.imgur.com/AdcRhnM.png" alt=""></p><ul><li>另外以python為例：可以發現有區分顯示整數、浮點數</li></ul><blockquote><p>程式柴課程：<br><img src="https://i.imgur.com/MWfjXxS.png" alt=""></p></blockquote><h3 id="浮點數的陷阱"><a href="#浮點數的陷阱" class="headerlink" title="浮點數的陷阱"></a>浮點數的陷阱</h3><ul><li>因為js運算是依循IEEE754的規範，在運算時會轉換成<code>二進制</code>，而浮點數在轉成<code>二進制</code>時會造成無窮迴圈，進而產生運算誤差</li><li>由於js採用64位雙精度浮點數編碼，實際儲存時為了節省空間，採用科學計數法表示</li></ul><p>參考資料：<br><a href="https://dotblogs.com.tw/WillianHsiaoDotNetBLog/2020/01/15/JavascriptFloatCaculateBug">[JavaScript]浮點數運算出現一堆小數位數</a> <a href="https://www.itread01.com/content/1545644704.html">JavaScript 浮點數陷阱及解法</a><br><a href="https://www.mdeditor.tw/pl/pqGp/zh-tw">js浮點數計算精度問題</a><br><a href="https://medium.com/@ad57475747/javascript%E6%B5%AE%E9%BB%9E%E6%95%B8%E9%81%8B%E7%AE%97-1691eefe3ea7">JavaScript-Number的各種地雷–浮點數運算</a></p><h2 id="String-字串"><a href="#String-字串" class="headerlink" title="String 字串"></a>String 字串</h2><blockquote><p>程式柴課程：<br><img src="https://i.imgur.com/xO6SmsP.png" alt=""></p></blockquote><ul><li><h3 id="以chrome開發者工具示範"><a href="#以chrome開發者工具示範" class="headerlink" title="以chrome開發者工具示範"></a>以chrome開發者工具示範</h3><img src="https://i.imgur.com/81RfQ39.png" alt=""></li><li><h4 id="單雙混用"><a href="#單雙混用" class="headerlink" title="單雙混用"></a>單雙混用</h4><img src="https://i.imgur.com/0yIN8rY.png" alt=""></li><li><h4 id="ES6使用-此符號也能用來處理斷行問題"><a href="#ES6使用-此符號也能用來處理斷行問題" class="headerlink" title="ES6使用  (此符號也能用來處理斷行問題)"></a>ES6使用  (此符號也能用來處理斷行問題)</h4><img src="https://i.imgur.com/NSAe3A0.png" alt=""></li><li><h4 id="字串連接"><a href="#字串連接" class="headerlink" title="字串連接"></a>字串連接</h4><img src="https://i.imgur.com/bqpGAjI.png" alt=""></li></ul><p><code>clear()</code>  清除頁面</p><h2 id="Boolean-布林值"><a href="#Boolean-布林值" class="headerlink" title="Boolean 布林值"></a>Boolean 布林值</h2><p><img src="https://i.imgur.com/fcMnCjC.png" alt=""><br>二進位：<br>0的時候-&gt;false<br>1的時候-&gt;true</p><ul><li><h3 id="搭配if、else使用，以控制或判斷流程"><a href="#搭配if、else使用，以控制或判斷流程" class="headerlink" title="搭配if、else使用，以控制或判斷流程"></a>搭配if、else使用，以控制或判斷流程</h3><img src="https://i.imgur.com/uQ00Bgh.png" alt=""></li></ul><h2 id="「null-空值」與-「undefined-未定義」"><a href="#「null-空值」與-「undefined-未定義」" class="headerlink" title="「null 空值」與 「undefined 未定義」"></a>「null 空值」與 「undefined 未定義」</h2><ul><li>宣吿了x變數，卻沒有給它值（還沒有指派給它值） -&gt;未定義的變數</li></ul><p><img src="https://i.imgur.com/wCX0pBt.png" alt=""></p><ul><li>期待它是一個空值，是由使用者指派給b變數（指定給它為空值）</li></ul><p><img src="https://i.imgur.com/GkIkdYT.png" alt=""></p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> variable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS練習- Hamburger 漢堡表單</title>
      <link href="/2020/12/13/Hamburger/"/>
      <url>/2020/12/13/Hamburger/</url>
      
        <content type="html"><![CDATA[<h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p><a href="https://eva813.github.io/Eva_portfolio/hamburger-menu/hamburger-menu.html">成品</a><br>運用css可以做出許多意想不到的效果，有立體的呈現、動畫的改變等等…</p><ul><li>漢堡表單的製作，以及點選時頁面的跳轉、動畫的改變</li><li>nav按鈕，立體翻轉</li><li>中間icon圖示的排版，以及旋轉的效果</li></ul><p><img src="https://i.imgur.com/PYZZI5K.png" alt=""></p><h2 id="banner區的架構"><a href="#banner區的架構" class="headerlink" title="banner區的架構"></a>banner區的架構</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./hamburger-images/logo.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-wrapper&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;banner-btn&quot;</span>&gt;</span>Explore More<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h3 id="導覽列"><a href="#導覽列" class="headerlink" title="導覽列"></a>導覽列</h3></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;top-nav&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav-list&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">data-text</span>=<span class="string">&#x27;Home&#x27;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">data-text</span>=<span class="string">&#x27;About As&#x27;</span>&gt;</span>About As<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">data-text</span>=<span class="string">&#x27;Our Team&#x27;</span>&gt;</span></span><br><span class="line">                            Our Team</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">data-text</span>=<span class="string">&#x27;Services&#x27;</span>&gt;</span></span><br><span class="line">                            Services</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">data-text</span>=<span class="string">&#x27;Contanct&#x27;</span>&gt;</span></span><br><span class="line">                            Contanct</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/SFLZx31.png" alt=""></p><ul><li><h3 id="加入社群媒體icon"><a href="#加入社群媒體icon" class="headerlink" title="加入社群媒體icon"></a>加入社群媒體icon</h3></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;bottom-nav&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;icons&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;icon-item&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;icon-link&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-facebook-f&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;icon-item&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;icon-link&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-youtube&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;icon-item&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;icon-link&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-twitter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;icon-item&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;icon-link&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fab fa-google-plus-g&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/DDKx6sq.png" alt=""></p><ul><li><h3 id="先讓nav列hidden起來"><a href="#先讓nav列hidden起來" class="headerlink" title="先讓nav列hidden起來"></a>先讓nav列hidden起來</h3><ul><li>再html的class後面，增加hidden，瀏覽器就不會顯示該隱藏的部分</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;top-nav&quot;</span> <span class="attr">hidden</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav-list&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span>&gt;</span>About As<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-lik&quot;</span>&gt;</span></span><br><span class="line">                            Our Team</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span>&gt;</span></span><br><span class="line">                            Services</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span>&gt;</span></span><br><span class="line">                            Contanct</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/UdQIyRA.png" alt=""></p><ul><li>讓兩個a連結的nav都hidden</li></ul><h1 id="右上選單"><a href="#右上選單" class="headerlink" title="右上選單"></a>右上選單</h1><p>先製作三個<code>div</code><br><img src="https://i.imgur.com/vLXU6ny.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hamburger-menu&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;line line-1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;line line-2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;line line-3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h3 id="在hamburger-menu這裏的寬度、高度、位置先設定好"><a href="#在hamburger-menu這裏的寬度、高度、位置先設定好" class="headerlink" title="在hamburger-menu這裏的寬度、高度、位置先設定好"></a>在hamburger-menu這裏的寬度、高度、位置先設定好</h3></li><li><h3 id="針對div的line設定"><a href="#針對div的line設定" class="headerlink" title="針對div的line設定"></a>針對div的line設定</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hamburger-menu</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.line</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: inherit;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">5px</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#16c3cf</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.line-2</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>他是三個div組合的</p></li><li><p>這裏故意把2設為黑色</p></li></ul><p><img src="https://i.imgur.com/62XCqGg.png" alt=""></p><ul><li>讓他分三條線可以分散對齊</li><li>把白色去掉<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.hamburger-menu</span>&#123;</span><br><span class="line"> <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/yPLLtSs.png" alt=""></li></ul><hr><h1 id="3D按鈕"><a href="#3D按鈕" class="headerlink" title="3D按鈕"></a>3D按鈕</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 3d按鈕 */</span></span><br><span class="line"><span class="selector-class">.banner-btn</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">#16c3cf</span>,<span class="number">#156459</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/hs2ZbW8.png" alt=""></p><ul><li><code>text-shadow: 0 10px 10px #000;</code></li></ul><h3 id="參考資料："><a href="#參考資料：" class="headerlink" title="參考資料："></a>參考資料：</h3><ul><li><h4 id="3D-btn-wrapper-gt-perspective-1000px-banner-btn-gt-transform-style-preserve-3d"><a href="#3D-btn-wrapper-gt-perspective-1000px-banner-btn-gt-transform-style-preserve-3d" class="headerlink" title="3D .btn-wrapper-&gt;perspective: 1000px; .banner-btn -&gt; transform-style: preserve-3d;"></a>3D <code>.btn-wrapper-&gt;perspective: 1000px;</code> <code>.banner-btn -&gt; transform-style: preserve-3d;</code></h4></li><li><a href="https://eyesofkids.gitbooks.io/css3/content/contents/transform3d.html">變形(transform) 3D基本使用</a><br><a href="https://www.w3schools.com/css/css3_3dtransforms.asp">w3schools</a><br><a href="https://3dtransforms.desandro.com/3d-transform-functions">3dtransforms</a><br><a href="https://www.puritys.me/docs-blog/article-354-CSS-%E5%AF%A6%E5%81%9A-3D-%E7%AB%8B%E9%AB%94%E6%AD%A3%E6%96%B9%E5%BD%A2.html">CSS 實做 3D 立體正方形</a><br><a href="https://www.puritys.me/docs-blog/article-353-CSS-3D-%E6%97%8B%E8%BD%89-rotate3d-%E8%88%87-translate3d.html">CSS 3D 旋轉 rotate3d 與 translate3d</a></li></ul><p>:::success<br>我們會在要進行3D變形的外層容器元素來定義perspective，這樣包含在其內的子元素(物件)都可以按照這個深度來進行變形。<br>perspective設定為300px或更少時，會有強烈的失真，500px到1000px的失真較為中等，2000px以上的失真就很輕微。<br>:::</p><ul><li><h3 id="要在該按鈕前面增加一個偽元素"><a href="#要在該按鈕前面增加一個偽元素" class="headerlink" title="要在該按鈕前面增加一個偽元素"></a>要在該按鈕前面增加一個偽元素</h3></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.banner-btn</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/uRCxqlS.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.banner-btn</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#156469</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0px</span>;</span><br><span class="line"> <span class="attribute">right</span>: <span class="number">0px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>);  <span class="comment">/*會使他消失 */</span></span><br><span class="line"></span><br><span class="line">  <span class="attribute">transform-origin</span>:bottom ;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/eAfVcwr.png" alt=""></p><ul><li><code>transform-style: preserve-3d;</code></li></ul><p><img src="https://i.imgur.com/NxcSBfC.png" alt=""></p><ul><li><code>transform-origin:bottom ;</code></li></ul><p><img src="https://i.imgur.com/pDZA4Mf.png" alt=""></p><ul><li><code>.banner-btn::after</code></li></ul><p><img src="https://i.imgur.com/loDXaL2.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.banner-btn</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#16c3cf</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line"> <span class="attribute">right</span>: <span class="number">0px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">90deg</span>);  <span class="comment">/*會使他消失 */</span></span><br><span class="line"></span><br><span class="line">  <span class="attribute">transform-origin</span><span class="selector-pseudo">:right</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/zG40Jfg.png" alt=""></p><hr><h1 id="nav列"><a href="#nav列" class="headerlink" title="nav列"></a>nav列</h1><ul><li>z-index:100<br><img src="https://i.imgur.com/IpB3rfs.png" alt=""></li></ul><p><img src="https://i.imgur.com/copdVTv.png" alt=""></p><ul><li><h3 id="在上層導覽列，先設定灰色的背景，以方便看清楚大小"><a href="#在上層導覽列，先設定灰色的背景，以方便看清楚大小" class="headerlink" title="在上層導覽列，先設定灰色的背景，以方便看清楚大小"></a>在上層導覽列，先設定灰色的背景，以方便看清楚大小</h3></li><li><h3 id="使用flex排列"><a href="#使用flex排列" class="headerlink" title="使用flex排列"></a>使用flex排列</h3></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav-list</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line"><span class="attribute">list-style</span>: none;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line"><span class="attribute">margin</span>: auto;</span><br><span class="line"><span class="attribute">height</span>: inherit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 使他水平 */</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">justify-content</span>: space-evenly;</span><br><span class="line"><span class="attribute">align-items</span>:center;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/z2eFyRV.png" alt=""></p><h2 id="上層導覽列，連結的3d按鈕製作"><a href="#上層導覽列，連結的3d按鈕製作" class="headerlink" title="上層導覽列，連結的3d按鈕製作"></a>上層導覽列，連結的3d按鈕製作</h2><ul><li>在他們的html 設定data-text<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt; &lt;a href=&quot;#&quot; class=&quot;nav-link&quot; data-text=&#x27;Home&#x27;&gt;Home&lt;/a&gt; &lt;/li&gt;</span><br><span class="line">                   </span><br></pre></td></tr></table></figure></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav-link</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line"> <span class="attribute">content</span>: <span class="built_in">attr</span>(data-text);</span><br><span class="line"> <span class="attribute">position</span>: absolute;</span><br><span class="line"> <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line"> <span class="attribute">bottom</span>:-<span class="number">100%</span>;</span><br><span class="line"> <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line"> <span class="attribute">padding</span>: inherit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/5Qw1iCD.png" alt=""></p><ul><li><p>將after創造出的rotate到父層元素的下方</p></li><li><h4 id="transform-rotateX-90deg"><a href="#transform-rotateX-90deg" class="headerlink" title="transform: rotateX(-90deg);"></a><code>transform: rotateX(-90deg);</code></h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav-link</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/dpyaO6e.png" alt=""></p><h3 id="位置不對："><a href="#位置不對：" class="headerlink" title="位置不對："></a>位置不對：</h3><p><img src="https://i.imgur.com/auUp49u.png" alt=""></p><ul><li>transform-origin: top;</li></ul><p><img src="https://i.imgur.com/LpBcL0D.png" alt=""></p><hr><h1 id="icon-button"><a href="#icon-button" class="headerlink" title="icon button"></a>icon button</h1><p><img src="https://i.imgur.com/rv84ID4.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icons</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="comment">/* 父層已經有設定fixed */</span></span><br><span class="line"> <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line"> <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line"> <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/cXJ8VVD.png" alt=""></p><p><img src="https://i.imgur.com/ieKQMjU.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icons</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"></span><br><span class="line"> <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line"> <span class="attribute">justify-content</span>: space-between;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/FjGcoHj.png" alt=""></p><p><img src="https://i.imgur.com/LG9TVCS.png" alt=""></p><ul><li><h4 id="上面因為原本為inline元素，-display-block-或display-flex"><a href="#上面因為原本為inline元素，-display-block-或display-flex" class="headerlink" title="上面因為原本為inline元素， display:block 或display:flex"></a>上面因為原本為inline元素， <code>display:block</code> 或<code>display:flex</code></h4></li></ul><p><img src="https://i.imgur.com/expCFZr.png" alt=""></p><ul><li><h4 id="要使icon在中間，使用flex"><a href="#要使icon在中間，使用flex" class="headerlink" title="要使icon在中間，使用flex"></a>要使icon在中間，使用flex</h4></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon-link</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">border</span>:<span class="number">8px</span> solid <span class="number">#fff</span> ;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>:center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  </span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line"></span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">5px</span>; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/1LaJiu4.png" alt=""></p><p><img src="https://i.imgur.com/iZsXFCJ.png" alt=""></p><ul><li>調整height</li></ul><p><img src="https://i.imgur.com/ej932dL.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon-link</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">25px</span> ;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"> <span class="selector-class">.icon-link</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">25px</span> ;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Yuri7rC.png" alt=""></p><h2 id="背景顏色的動畫"><a href="#背景顏色的動畫" class="headerlink" title="背景顏色的動畫"></a>背景顏色的動畫</h2><h4 id="1-在icon後面增設背景色彩"><a href="#1-在icon後面增設背景色彩" class="headerlink" title="1.在icon後面增設背景色彩"></a>1.在icon後面增設背景色彩</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon-item</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) <span class="selector-class">.icon-link</span> <span class="selector-tag">i</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#3b5999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-item</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) <span class="selector-class">.icon-link</span> <span class="selector-tag">i</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cd201f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-item</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) <span class="selector-class">.icon-link</span> <span class="selector-tag">i</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#55acee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-item</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>) <span class="selector-class">.icon-link</span> <span class="selector-tag">i</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#dd4b39</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-設定hover之後，位置移動到原本icon的位置"><a href="#2-設定hover之後，位置移動到原本icon的位置" class="headerlink" title="2.設定hover之後，位置移動到原本icon的位置"></a>2.設定hover之後，位置移動到原本icon的位置</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 讓顏色回到原來的位置 */</span></span><br><span class="line"><span class="selector-class">.icon-link</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">i</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/cdJuIsW.png" alt=""></p><h4 id="3-讓圓形色彩隱藏"><a href="#3-讓圓形色彩隱藏" class="headerlink" title="3.讓圓形色彩隱藏"></a>3.讓圓形色彩隱藏</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon-link</span> <span class="selector-tag">i</span>&#123;</span><br><span class="line">over-<span class="attribute">flow</span>:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/tqPlffY.png" alt=""></p><h1 id="漢堡的動畫"><a href="#漢堡的動畫" class="headerlink" title="漢堡的動畫"></a>漢堡的動畫</h1><ul><li>line-1,line-2,line-3 位置改變的設定</li><li>這裏使用js，增加change的class名稱<br><img src="https://i.imgur.com/UNGeilF.png" alt=""></li></ul><p><img src="https://i.imgur.com/trwX0C8.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.change</span> <span class="selector-class">.line-1</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-<span class="number">45deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.change</span> <span class="selector-class">.line-2</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">5px</span>,<span class="number">20px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.change</span> <span class="selector-class">.line-3</span>&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">45deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.hamburger-menu&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.nav-wrapper&#x27;</span>).<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;change&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><h1 id="resposive"><a href="#resposive" class="headerlink" title="resposive"></a>resposive</h1><ul><li>針對螢幕大小，來設定內容為的寬、高與字型大小</li></ul><p><a href="https://ithelp.ithome.com.tw/articles/10196578">Day22：小事之 Media Query</a></p><p><a href="https://medium.com/%E7%8B%90%E7%8B%B8%E7%9A%84%E8%91%A1%E8%90%84%E9%85%92/css%E5%AA%92%E9%AB%94%E6%9F%A5%E8%A9%A2-css-media-queries-357e2b03b3eb">響應式網站設計基本觀念(2)：CSS媒體查詢(CSS Media Queries)</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> CSS練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> udemy </tag>
            
            <tag> CSS </tag>
            
            <tag> transform </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS練習- portfolio web page 作品集網頁</title>
      <link href="/2020/12/13/portfolio-web-page/"/>
      <url>/2020/12/13/portfolio-web-page/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/3DLhHgL.png" alt=""></p><h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p><a href="https://eva813.github.io/Eva_portfolio/portfolio01/portfolio01.html">成品</a></p><ul><li>這是一個展現作品集的一頁式網頁<ul><li>頁面的排版主要使用grid執行</li><li>網頁整的色調，練習<code>:root</code>設定</li><li>練習聯絡欄的排版</li></ul></li><li>另外，有使用到一些些js的部分，如設定滾動的效果、點擊後畫面的變化，但因主要練習排版，所以筆記內容並未多加提及</li></ul><p><img src="https://i.imgur.com/gpZLEE8.png" alt=""></p><h2 id="HEADER"><a href="#HEADER" class="headerlink" title="HEADER"></a>HEADER</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--===== HEADER =====--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;l-header&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;nav bd-grid&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav__logo&quot;</span>&gt;</span>Jhon Doe<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav_manue&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nav-menu&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav_list&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav_item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#home&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav_link&quot;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav_item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#abour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav_link&quot;</span>&gt;</span>About<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav_item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#skills&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav_link&quot;</span>&gt;</span>Skills<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav_item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#portfolio&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav_link&quot;</span>&gt;</span>Portfolio<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav_item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#contact&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav_link&quot;</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav__toggle&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nav-toggle&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;bx bx-menu&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="header的建構"><a href="#header的建構" class="headerlink" title="header的建構"></a>header的建構</h4><p><img src="https://i.imgur.com/NPyM8sR.png" alt=""></p><h3 id="css-變數"><a href="#css-變數" class="headerlink" title="css 變數"></a>css 變數</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*建立全域變數*/</span></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line"><span class="attr">--csscoke-red</span>: <span class="number">#f00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*套用變數*/</span></span><br><span class="line"><span class="selector-class">.section-item</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: <span class="built_in">var</span>( --csscoke-red );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>csscoke<br> <code>:root</code>中使用關鍵符號 –建立了一個 CSS 變數，並且給予該變數名稱叫做 csscoke-red ，然後給予這個變數名稱一個值 <code>#f00</code>，這表示後面要套用這個變數名稱的項目，會直接取得這個 <code>#f00</code>。</p></blockquote><p>參考資料：<a href="https://ithelp.ithome.com.tw/articles/10228111">:root 根目錄選取器 - 叫你阿爸出來講</a></p><h3 id="grid-template-columns"><a href="#grid-template-columns" class="headerlink" title="grid-template-columns"></a>grid-template-columns</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.bd-grid</span>&#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">1024px</span>;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">grid-column</span>-<span class="attribute">gap</span>: <span class="number">2rem</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">2rem</span>);</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="built_in">var</span>(--mb-<span class="number">2</span>);</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="built_in">var</span>(--mb-<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>卡伯斯<br>grid-template-columns 定義水平方向的空間，grid-template-rows 定義垂直方向的空間<br><code>.wrap &#123;  grid-template-columns: repeat(2, 1fr 2fr) 100px;       /* grid-template-columns: repeat(&#123;次數&#125;, &#123;格線...&#125; | &#123;格線...&#125;) | &#123;格線...&#125;; */&#125;</code><br>fr 這個單位，這個單位能夠將可用的 剩餘空間 做比例分割，以上面的 1fr 2fr 為例，空間將被分割成 1/3、2/3 兩個大小。<br>另一個是 repeat，可以重複隔線。</p></blockquote><p><a href="https://wcc723.github.io/css/2017/03/22/css-grid-layout/">CSS Grid 屬性介紹</a><br><a href="https://www.mdeditor.tw/pl/pn1h/zh-tw">一行 CSS 程式碼搞定響應式佈局</a><br><a href="https://ithelp.ithome.com.tw/articles/10130065">CSS沒有極限 - CSS的神奇Calc運算</a></p><h1 id="home"><a href="#home" class="headerlink" title="home"></a>home</h1><p><img src="https://i.imgur.com/ngnNmzl.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.home__scroll</span>&#123;</span><br><span class="line">    <span class="attribute">align-self</span>: flex-end;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="built_in">var</span>(--mb-<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 直行旋轉 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.home__scroll-link</span>&#123;</span><br><span class="line">    <span class="attribute">writing-mode</span>: vertical-lr;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">180deg</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--white-color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/we7sEnu.png" alt=""></p><h1 id="skills"><a href="#skills" class="headerlink" title="skills"></a>skills</h1><p><img src="https://i.imgur.com/0Nsj8gH.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--===== SKILLS =====--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;skills section&quot;</span> <span class="attr">id</span>=<span class="string">&quot;skills&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;section-title&quot;</span>&gt;</span>Skills<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;skills__container bd-grid&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;skills__box&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;skills__subtitle&quot;</span>&gt;</span>Development<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;skills__name&quot;</span>&gt;</span>Html<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;skills__name&quot;</span>&gt;</span>Css<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;skills__name&quot;</span>&gt;</span>Javascript<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;skills__name&quot;</span>&gt;</span>Scss<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;skills__name&quot;</span>&gt;</span>React<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;skills__name&quot;</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;skills__subtitle&quot;</span>&gt;</span>Design<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;skills__name&quot;</span>&gt;</span>Figma<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;skills__name&quot;</span>&gt;</span>Adobe XD<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;skills__name&quot;</span>&gt;</span>Photoshop<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;skills__img&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/skill.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>.skills__container&#123;    row-gap: 2rem;&#125; 使欄位2rem的空格</code></p><blockquote><p>rem 也是相對的文字尺寸，和 em 使用方法接近，不同的是他僅相對於 root 層級的文字大小(網頁中的 html)。<br><a href="https://iter01.com/23690.html">如何更愉快地使用rem —— 別說你懂CSS相對單位</a><br><a href="https://www.hexschool.com/2016/01/02/2016-08-08-em-vs-rem/">實際展示 EM 與 REM 的差異</a></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.skills__name</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">var</span>(--small-font-size);</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="built_in">var</span>(--mb-<span class="number">2</span>);</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="built_in">var</span>(--mb-<span class="number">3</span>);</span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">25rem</span> .<span class="number">5rem</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--white-color);</span><br><span class="line">    <span class="attribute">border-radius</span>: .<span class="number">25rem</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>中間的技能名稱設定</li></ul><p><img src="https://i.imgur.com/YcJoUD6.png" alt=""></p><h1 id="contact"><a href="#contact" class="headerlink" title="contact"></a>contact</h1><p><img src="https://i.imgur.com/FMyeUse.png" alt=""></p><ul><li>輸入框</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* name,email */</span></span><br><span class="line"><span class="selector-class">.contact__inputs</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">2</span>, <span class="number">1</span>fr);</span><br><span class="line">     <span class="attribute">column-gap</span>: <span class="number">1rem</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 文字輸入框 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.contact__input</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">8rem</span>;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1.5px</span> solid <span class="built_in">var</span>(--dark-color);</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">var</span>(--normal-font-size);</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="built_in">var</span>(--mb-<span class="number">4</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: .<span class="number">5rem</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>按鈕</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.contact__button</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--first-color);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--white-color);</span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">75rem</span> <span class="number">2.5rem</span>;</span><br><span class="line">    <span class="comment">/* 若用margin-right:auto&lt;會靠左邊 */</span></span><br><span class="line">     <span class="attribute">margin-left</span>: auto; </span><br><span class="line">    <span class="attribute">border-radius</span>: .<span class="number">5rem</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">var</span>(--normal-font-size);</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="footer"><a href="#footer" class="headerlink" title="footer"></a>footer</h1><p><img src="https://i.imgur.com/JH5KLYT.png" alt=""></p><hr><h2 id="參考資料："><a href="#參考資料：" class="headerlink" title="參考資料："></a>參考資料：</h2><h3 id="1-z-index"><a href="#1-z-index" class="headerlink" title="1. z-index"></a>1. z-index</h3><p><a href="https://its-okay.medium.com/css-position-z-index-%E7%AD%86%E8%A8%98-%E9%BC%A0%E5%B9%B4%E5%85%A8%E9%A6%AC%E9%90%B5%E4%BA%BA%E6%8C%91%E6%88%B0-13-f7c4159ac5d">CSS position 、 z-index 筆記│鼠年全馬鐵人挑戰 #13</a><br><a href="https://www.cnblogs.com/starof/p/4424926.html">合理使用z-index数值</a></p><h3 id="2-滾動"><a href="#2-滾動" class="headerlink" title="2. 滾動"></a>2. 滾動</h3><p>點擊連結之後，自動滾動到適當的位置</p><p>[CSS scroll-behavior和JS scrollIntoView讓頁面滾動平滑](<a href="https://www.itread01.com/fyehkp.html">https://www.itread01.com/fyehkp.html</a></p><h3 id="3-icon"><a href="#3-icon" class="headerlink" title="3. icon"></a>3. icon</h3><p><img src="https://i.imgur.com/vEVt8qF.png" alt=""></p><h3 id="4-flex"><a href="#4-flex" class="headerlink" title="4. flex"></a>4. flex</h3><p><a href="https://cythilya.github.io/2017/04/04/flexbox-basics/">圖解 Flexbox 基本屬性</a></p><h2 id="練習來源："><a href="#練習來源：" class="headerlink" title="練習來源："></a>練習來源：</h2><p>youtube：<a href="https://www.youtube.com/watch?v=6cidbUHNZRQ&list=PL4ruhWbyIwi2vvT2y7j45egFSTwz9FHoJ&index=15&t=168s">Responsive Personal Portfolio Website HTML CSS And JAVASCRIPT | Mobile First</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> udemy </tag>
            
            <tag> CSS </tag>
            
            <tag> grid </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS練習- omnifood 餐廳網頁</title>
      <link href="/2020/12/13/omnifood/"/>
      <url>/2020/12/13/omnifood/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/JNV0OeO.png" alt=""></p><h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p><a href="https://eva813.github.io/Eva_portfolio/Omnifood/omnifood.html">成品</a><br>使用css來製作一個一頁式的網站，將網站分為表頭、特色區塊、食物照片區、訂餐方法介紹…等，從不同區塊，去操作字型、文字排版、圖片處理。</p><p><img src="https://i.imgur.com/OwpZq8P.png" alt=""></p><h2 id="首先，文字字型的選擇"><a href="#首先，文字字型的選擇" class="headerlink" title="首先，文字字型的選擇"></a>首先，文字字型的選擇</h2><p>先用Normalize.css，下載並連結<br>字型：使用google font &gt; lato<br><img src="https://i.imgur.com/4VSiIEZ.png" alt=""></p><p>text-rendering告訴渲染引擎工作時如何優化顯示文字</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;Lato&#x27;</span>, <span class="string">&#x27;Arial&#x27;</span>,sans-serif;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">text-rendering</span>: optimizeLegibility;</span><br><span class="line">  <span class="comment">/* 繪制文本時易讀性優先，會啟用字距調整和連字 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* content will be in rows */</span></span><br><span class="line"><span class="selector-class">.row</span>&#123;</span><br><span class="line">  <span class="comment">/* 只有這邊是用px，之後的margin等設定都會用% */</span></span><br><span class="line"> <span class="attribute">max-width</span>: <span class="number">1140px</span>; </span><br><span class="line"> <span class="attribute">margin</span>:<span class="number">0</span> auto;</span><br><span class="line"><span class="comment">/* 讓左右的距離能夠平均分散，使其置中 */</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="head區塊"><a href="#head區塊" class="headerlink" title="head區塊"></a>head區塊</h1><p><img src="https://i.imgur.com/pc0jiX3.png" alt=""></p><h2 id="表頭的製作"><a href="#表頭的製作" class="headerlink" title="表頭的製作"></a>表頭的製作</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;hero-text-box&quot;&gt;</span><br><span class="line">     &lt;h1&gt;Goodbye junk food. Hello super healthy meals.</span><br><span class="line">     &lt;/h1&gt;</span><br><span class="line">     &lt;a href=&quot;#&quot;&gt;I’m hungry&lt;/a&gt;</span><br><span class="line">     &lt;a href=&quot;#&quot;&gt;Show me more&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">   &lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ioW5W5p.png" alt=""></p><ul><li>利用background-image插入圖片後，往上滑會出現上方的空白處<ul><li>是因為h1的margin（因設置normalize.css）</li></ul></li><li>此時照片也還沒有填滿、置中</li></ul><p><img src="https://i.imgur.com/dZzd6V7.png" alt=""><br><img src="https://i.imgur.com/pe6AUaN.png" alt=""></p><h3 id="調整背景圖位置"><a href="#調整背景圖位置" class="headerlink" title="調整背景圖位置"></a>調整背景圖位置</h3><p><img src="https://i.imgur.com/zoaaQoB.jpg" alt=""></p><h3 id="讓h1文字置中"><a href="#讓h1文字置中" class="headerlink" title="讓h1文字置中"></a>讓h1文字置中</h3><p>透過使用絕對定位，讓文字可以置中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hero-text-box</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line"> </span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1140px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>:&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/r4IryMQ.jpg" alt=""></p><ul><li>transform: translate(-50%,-50%);</li></ul><p><img src="https://i.imgur.com/QcgKtPg.jpg" alt=""></p><h3 id="文字放在圖片上使得看不清楚"><a href="#文字放在圖片上使得看不清楚" class="headerlink" title="文字放在圖片上使得看不清楚"></a>文字放在圖片上使得看不清楚</h3><ul><li>將背景圖調成深色<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>:<span class="built_in">linear-gradient</span>(<span class="number">0deg</span>,<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">6</span>),<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>)) center center,</span><br><span class="line">   <span class="built_in">url</span>(<span class="string">./Omnifood\ Contents/hero.jpg</span>) no-repeat center center/cover ;</span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/NmUA3qy.jpg" alt=""></li></ul><h2 id="h1文字區的細節調整"><a href="#h1文字區的細節調整" class="headerlink" title="h1文字區的細節調整"></a>h1文字區的細節調整</h2><ul><li>調整字的顏色、大小</li><li>字母、單字之間的間距<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hero-text-box</span> <span class="selector-tag">h1</span>&#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line"><span class="comment">/* 這裏的字體大小用百分比，是為了相對於一開始設定font-size: 20px;，以他的百分比來計算 */</span></span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">240%</span>;</span><br><span class="line"><span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line"><span class="attribute">letter-spacing</span>: <span class="number">1px</span>;</span><br><span class="line"> <span class="attribute">text-transform</span>: uppercase; <span class="comment">/*將字母改為大寫 */</span></span><br><span class="line"> <span class="attribute">word-spacing</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="文字區下面的按鈕"><a href="#文字區下面的按鈕" class="headerlink" title="文字區下面的按鈕"></a>文字區下面的按鈕</h2><p>html結構是使用<code>&lt;a&gt;</code>來製作連結的點選<br>將型態改為inline-block</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-full&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>I’m hungry<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-ghost &quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Show me more<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>希望連結與被點選的樣式都是一樣</li><li>顏色是到：UI flat color tool ; 要找尋顏色深淺 <a href="https://www.0to255.com/e67e22">0 to 255</a></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:link</span>,<span class="selector-class">.btn</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">200px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-full</span><span class="selector-pseudo">:link</span>,<span class="selector-class">.btn-full</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line">  <span class="comment">/* UI flat color tool */</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#e67e22</span>;</span><br><span class="line">  <span class="comment">/* border: 1px solid #e67e22 ; */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-ghost</span><span class="selector-pseudo">:link</span>,<span class="selector-class">.btn-ghost</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e67e22</span> ;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#e67e22</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/MuiBMCl.png" alt=""></p><h3 id="按鈕的觸碰與點選"><a href="#按鈕的觸碰與點選" class="headerlink" title="按鈕的觸碰與點選"></a>按鈕的觸碰與點選</h3><p><code>:active</code> 滑鼠按下的樣式; <code>:focus</code> 鍵盤聚焦的樣式 ;<code>:hover</code> 滑鼠滑過</p><ul><li>注意transition此屬性是放在要被摸的元素裡面，不是hover那裡<br><a href="https://www.w3schools.com/howto/howto_css_transition_hover.asp">How TO - Transition on Hover</a></li></ul><p><code>.btn:link,.btn:visited&#123;&#125;</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/* transition 放在這裡！ */</span></span><br><span class="line"> <span class="attribute">transition</span>: background-color <span class="number">0.5s</span>,border <span class="number">0.5s</span>,color <span class="number">0.5s</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span>,<span class="selector-class">.btn</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="attribute">background-color</span>: <span class="number">#cf6d17</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-full</span><span class="selector-pseudo">:hover</span>,<span class="selector-class">.btn-full</span><span class="selector-pseudo">:active</span>&#123; </span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cf6d17</span> ;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-ghost</span><span class="selector-pseudo">:hover</span>,<span class="selector-class">.btn-ghost</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cf6d17</span> ;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/3UM8SpB.png" alt=""></p><h2 id="表頭導覽列的製作"><a href="#表頭導覽列的製作" class="headerlink" title="表頭導覽列的製作"></a>表頭導覽列的製作</h2><p><a href="https://ithelp.ithome.com.tw/articles/10219845">金魚都能懂的這個網頁畫面怎麼切 : 導覽列</a></p><ul><li><p>header裡面的nav，html架構：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;nav&gt;</span><br><span class="line">  &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">    &lt;img src=&quot;./Omnifood Contents/logo-white.png&quot; alt=&quot;Omnifood logo&quot; class=&quot;logo&quot;&gt;</span><br><span class="line">    &lt;ul class=&quot;main-nav&quot;&gt;</span><br><span class="line">      &lt;li&gt; &lt;a href=&quot;#&quot;&gt;Food delivery&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;How it works&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Our cities&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Sign up&lt;/a&gt;&lt;/li&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/nav&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/jOySkuH.png" alt=""></p></li><li><p>logo</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">header</span> <span class="selector-class">.logo</span>&#123;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">width</span>: auto;</span><br><span class="line"><span class="attribute">float</span>: left;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/KMLsFMM.png" alt=""></p></li></ul><h2 id="nav"><a href="#nav" class="headerlink" title="nav"></a>nav</h2><ul><li>讓nav區靠右</li><li>為了讓四個連結區塊可以橫向排列，設定inline-box</li><li>針對字型、顏色等做調整</li><li>並於連結下方增加線的動畫效果<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.main-nav</span>&#123;</span><br><span class="line"><span class="attribute">float</span>: right;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">55px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main-nav</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main-nav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:link</span>,<span class="selector-class">.main-nav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line"><span class="attribute">text-decoration</span>: none;</span><br><span class="line"><span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">90%</span>; <span class="comment">/*想要18px，18px / 20px=0.9*/</span></span><br><span class="line"><span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line"><span class="attribute">text-transform</span>: uppercase;</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line"><span class="attribute">padding-bottom</span>: <span class="number">5px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main-nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">border</span>: solid .<span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">230</span>, <span class="number">126</span>, <span class="number">34</span>,.<span class="number">6</span>);</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>:<span class="number">0</span> ;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.5s</span>;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main-nav</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span><span class="selector-pseudo">::after</span>,<span class="selector-class">.main-nav</span> <span class="selector-tag">li</span><span class="selector-pseudo">:active</span> <span class="selector-tag">a</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://i.imgur.com/1su6NCZ.png" alt=""></li></ul><hr><h1 id="特色區塊"><a href="#特色區塊" class="headerlink" title="特色區塊"></a>特色區塊</h1><p><img src="https://i.imgur.com/nl0Z3uS.png" alt=""></p><ul><li><code>—</code> 用html符號 –&gt; <code>&amp;mdash;</code><br>   <img src="https://i.imgur.com/kl8kJq1.png" alt=""><br>   更多…<a href="https://www.freeformatter.com/html-entities.html">HTML Entity List</a></li><li>features這部分，使用section標籤來包覆，而其中的不同區塊則使用<code>.row</code>來包覆內容(並用來固定寬度)</li><li>這裏的html運用grid來配置欄位</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;section-features&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Get food fast <span class="symbol">&amp;mdash;</span> not fast food<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;long-copy&quot;</span>&gt;</span>Hello, we’re Omnifood, your new premium food delivery service. We know you’re always busy. we promise!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 第二區塊：features，這裏要開始應用grid --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Up to 365 days/year<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Never cook again! We really mean that. Our subscript <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Ready in 20 minutes<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>You&#x27;re only twenty minutes away from your delicious ant chefs in each town to ensure that you&#x27;re 100% happy.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>100% organic<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>All our vegetables are fresh, organic and local. Animals are raised without added hormones or antibiotbetter!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Order anything<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>We don&#x27;t limit your creativity, which means you cacious meals. It&#x27;s up to you!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/sg0YUDI.png" alt=""></p><h3 id="icon"><a href="#icon" class="headerlink" title="icon"></a>icon</h3><p>使用ionicon:<a href="https://ionicons.com/">ionicon</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://unpkg.com/ionicons@5.2.3/dist/ionicons.js&quot;</span>&gt;&lt;/script&gt;<span class="string">`</span></span><br></pre></td></tr></table></figure><ul><li>讓他斷行排列使用block</li><li>字的大小適用比例設置</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.section-features</span> <span class="selector-class">.icon-big</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">350%</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#e67e22</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="h2的文字與p"><a href="#h2的文字與p" class="headerlink" title="h2的文字與p"></a>h2的文字與p</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.section-features</span> <span class="selector-class">.long-copy</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">70%</span>;</span><br><span class="line"><span class="comment">/* 總寬100%,左邊設置15%，就會平均 */</span></span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">15%</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* line-height: 1.3; */</span></span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">145%</span>; <span class="comment">/*120-145%最合適 */</span></span><br><span class="line"><span class="comment">/* word-spacing: 1px; */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="欄位col的處理（class-”items”）"><a href="#欄位col的處理（class-”items”）" class="headerlink" title="欄位col的處理（class=”items”）"></a>欄位col的處理（class=”items”）</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.section-features</span> <span class="selector-tag">h3</span>&#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">110%</span>;</span><br><span class="line">  <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">  </span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.section-features</span> <span class="selector-class">.items</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">1%</span> ;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.section-features</span> <span class="selector-class">.items</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">145%</span>;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">90%</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Sr0NhBr.png" alt=""></p><hr><h1 id="食物照片區"><a href="#食物照片區" class="headerlink" title="食物照片區"></a>食物照片區</h1><p><img src="https://i.imgur.com/BzV03pk.png" alt=""></p><ul><li>這裏的內容不適用<code>.row</code>來包覆，因為我們希望它的寬度可以站滿橫向的視窗</li></ul><h3 id="html結構"><a href="#html結構" class="headerlink" title="html結構"></a>html結構</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;section-maels&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 要製作2列各4格的食物照片，這裏使用ul,li的方式排列 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;meals-showcase&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Korean bibimbap with egg and vegetables&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Simple italian pizza with cherry tomatoes&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Chicken breast steak with vegetables&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/4.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Autumn pumpkin soup&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;meals-showcase&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/5.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Paleo beef steak with vegetables&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/6.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Healthy baguette with egg and vegetables&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/7.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Burger with cheddar and bacon&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/8.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Granola with cherries and strawberries&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/zBU6WCx.png" alt=""></p><ul><li>設定此區塊滿版，並讓他們設定為區塊</li><li>讓li，每個設定寬度為25%(4個共100％)，並利用float使他們比鄰排列</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.meals-showcase</span>&#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none; <span class="comment">/* 去除ul的預設樣式*/</span></span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.meals-showcase</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/jaYired.jpg" alt=""></p><ul><li>上面的照片並未合乎大小，以及置中</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.meals-showcase</span> <span class="selector-tag">figure</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.meals-showcase</span> <span class="selector-tag">figure</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/XNsC9JM.jpg" alt=""></p><ul><li>去除上圖的空隙vertical-align: middle;</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.meals-showcase</span> <span class="selector-tag">figure</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;&#125;</span><br><span class="line">  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/QsAwjZx.jpg" alt=""></p><h2 id="加入文字區在圖片上方"><a href="#加入文字區在圖片上方" class="headerlink" title="加入文字區在圖片上方"></a>加入文字區在圖片上方</h2><p>製作圖片被摸到，有圖片縮放的動畫</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.meals-showcase</span> <span class="selector-tag">figure</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.15</span>);</span><br><span class="line"><span class="attribute">transition</span>: transform .<span class="number">5s</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.meals-showcase</span> <span class="selector-tag">figure</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h3 id="當圖片的scale被放大，會超出原有容器"><a href="#當圖片的scale被放大，會超出原有容器" class="headerlink" title="當圖片的scale被放大，會超出原有容器"></a>當圖片的scale被放大，會超出原有容器</h3><ul><li>處理方式：在所在的容器，設定overflow: hidden; </li><li><a href="https://juejin.cn/post/6844903650901540872">CSS深入理解：overflow:hidden——溢出,坍塌,清除浮动</a>,<a href="https://www.itread01.com/content/1524202931.html">overflow：hidden 失效</a><br><img src="https://i.imgur.com/zBiOKSv.jpg" alt=""></li></ul></li></ul><ul><li><h3 id="讓圖片有黑色透明效果"><a href="#讓圖片有黑色透明效果" class="headerlink" title="讓圖片有黑色透明效果"></a>讓圖片有黑色透明效果</h3><ul><li>在圖片本身img設定透明度，在figure放圖標籤裡設定背景為黑色</li></ul></li></ul><p><img src="https://i.imgur.com/ADUUni8.jpg" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.meals-showcase</span> <span class="selector-tag">figure</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="number">#000</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.meals-showcase</span> <span class="selector-tag">figure</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.15</span>);</span><br><span class="line"><span class="attribute">transition</span>: transform .<span class="number">5s</span> ,opicity .<span class="number">5s</span>;</span><br><span class="line"><span class="attribute">opacity</span>: <span class="number">0.7</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.meals-showcase</span> <span class="selector-tag">figure</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/okb9F66.jpg" alt=""></p><hr><h1 id="訂餐方法介紹-的介面"><a href="#訂餐方法介紹-的介面" class="headerlink" title="訂餐方法介紹 的介面"></a>訂餐方法介紹 的介面</h1><p><img src="https://i.imgur.com/HxrpNQG.png" alt=""></p><ul><li>html的結構</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;meal-steps&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 在row裡面，放一個h2標題，在增加一個row的div，使用grid兩欄的class --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>How it works - Simple as 1, 2, 3<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 左欄 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-2-of-4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/app-iPhone.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Omnifood-app&quot;</span> <span class="attr">class</span>=<span class="string">&quot;app-screen&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-------- 右欄 ------&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-2-of-4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;work-step&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>Choose the subscription plan that best fits your needs and sign up today.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;work-step&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>Order your delicious meal using our mobile app or website. Or you can even call us!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;work-step&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>Enjoy your meal after less than 20 minutes. See you the next time!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!------- 與步驟同一欄，下載的按鈕使用&lt;a&gt; ------&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/download-app.svg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;apple store button&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/download-app-android.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;play store button&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/F9MrnmA.png" alt=""></p><ul><li><h3 id="標題調整"><a href="#標題調整" class="headerlink" title="標題調整"></a>標題調整</h3></li></ul><p>:first-child</p><p>圖片靠右：text-align: right;</p><h4 id="右欄文字區"><a href="#右欄文字區" class="headerlink" title="右欄文字區"></a>右欄文字區</h4><p>在數字部分：要讓他與文字區能夠排列，使用inline-block,float<br>    數字的外圈：參考以下css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.work-step</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.work-step</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#e67e22</span> ;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#e67e22</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/cPpSW9S.png" alt=""></p><h4 id="讓圓形變圓，增加寬高"><a href="#讓圓形變圓，增加寬高" class="headerlink" title="讓圓形變圓，增加寬高"></a>讓圓形變圓，增加寬高</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.work-step</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">55px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">55px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">150%</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/odR0Tm5.png" alt=""></p><ul><li>margin-right: 25px;</li></ul><p><img src="https://i.imgur.com/OHIFt8g.png" alt=""></p><h2 id="按鈕的處理"><a href="#按鈕的處理" class="headerlink" title="按鈕的處理"></a>按鈕的處理</h2><p><img src="https://i.imgur.com/NOTJn47.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn-app</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="地點資訊"><a href="#地點資訊" class="headerlink" title="地點資訊"></a>地點資訊</h1><p><img src="https://i.imgur.com/zvBsOgb.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;section-cities&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>We&#x27;re currently in these cities<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 第一個地點 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-4 items&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/lisbon-3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Lisbon<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-features&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;person&quot;</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">          1600+ happy eaters</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-features&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;star&quot;</span> <span class="attr">class</span>=<span class="string">&quot;star&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">          60+ top chefs</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-features&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;logo-twitter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;logo-twitter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">          @omnifood_lx</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 第二個地點 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-4 items&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/san-francisco.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>San Francisco<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-features&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;person&quot;</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">          3700+ happy eaters</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-features&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;star&quot;</span> <span class="attr">class</span>=<span class="string">&quot;star&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">          160+ top chefs</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-features&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;logo-twitter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;logo-twitter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">          @omnifood_sf</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 第三個地點 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-4 items&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/berlin.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Berlin<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-features&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;person&quot;</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">          2300+ happy eaters</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-features&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;star&quot;</span> <span class="attr">class</span>=<span class="string">&quot;star&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">          110+ top chefs</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-features&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;logo-twitter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;logo-twitter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">          @omnifood_berlin</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 第四個地點 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-4 items&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/london.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>London<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-features&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;person&quot;</span> <span class="attr">class</span>=<span class="string">&quot;person&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">          1200+ happy eaters</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-features&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;star&quot;</span> <span class="attr">class</span>=<span class="string">&quot;star&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">          50+ top chefs</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;city-features&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;logo-twitter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;logo-twitter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">          @omnifood_london</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/gC2Om3f.png" alt=""></p><p><img src="https://i.imgur.com/YzSZlES.jpg" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.section-cities</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.section-cities</span> <span class="selector-class">.icon-small</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#e67e22</span>;</span><br><span class="line"> <span class="attribute">display</span>: inline-block;</span><br><span class="line"> <span class="attribute">text-align</span>: center;</span><br><span class="line"> <span class="attribute">font-size</span>: <span class="number">120%</span>;</span><br><span class="line"> <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*讓icon與文字，置中、對其*/</span></span><br><span class="line"> <span class="attribute">line-height</span>: <span class="number">120%</span>;</span><br><span class="line"> <span class="attribute">vertical-align</span>: middle;</span><br><span class="line"> <span class="attribute">margin-top</span>: -<span class="number">5px</span>;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/1s1kBSH.png" alt=""></p><h1 id="顧客回饋區"><a href="#顧客回饋區" class="headerlink" title="顧客回饋區"></a>顧客回饋區</h1><p><img src="https://i.imgur.com/621x3W2.png" alt=""></p><ul><li>區分為三個區塊，一列三欄的方式劃分</li><li>用<code>&lt;blockquote&gt;</code>來包顧客的回饋文字</li><li>並加入顧客的頭像以及姓名</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;section-testimonials&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Our customers can&#x27;t live without us<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-3&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">          Omnifood is just awesome! I just launched a startup which leaves me with no time for cooking, so Omnifood is a</span><br><span class="line">          life-saver. Now that I got used to it, I couldn&#x27;t live without my daily meals!</span><br><span class="line">          <span class="tag">&lt;<span class="name">cite</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/customer-1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span>Alberto Duncan<span class="tag">&lt;/<span class="name">cite</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-3&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">          Inexpensive, healthy and great-tasting meals, delivered right to my home. We have lots of food delivery here</span><br><span class="line">          in Lisbon,</span><br><span class="line">          but no one comes even close to Omifood. Me and my family are so in love!</span><br><span class="line">          <span class="tag">&lt;<span class="name">cite</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/customer-2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span>Joana Silva<span class="tag">&lt;/<span class="name">cite</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-3&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">          I was looking for a quick and easy food delivery service in San Franciso. I tried a lot of them and ended up</span><br><span class="line">          with</span><br><span class="line">          Omnifood. Best food delivery service in the Bay Area. Keep up the great work!</span><br><span class="line">          <span class="tag">&lt;<span class="name">cite</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Omnifood Contents/customer-3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span>Milton Chapman<span class="tag">&lt;/<span class="name">cite</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/LMPlqlx.png" alt=""></p><ul><li>先做背景的處理</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.section-testimonials</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>:<span class="built_in">linear-gradient</span>(<span class="number">0deg</span>,<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">7</span>),<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">7</span>)) center center, <span class="built_in">url</span>(<span class="string">./Omnifood\ Contents/back-customers.jpg</span>)no-repeat center center/cover ;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/ofR8ghb.png" alt=""></p><ul><li>增加相片背景</li><li>可以看到文字與，照片相</li></ul><p><img src="https://i.imgur.com/deniLe4.jpg" alt=""></p><p><img src="https://i.imgur.com/lO5KPTq.jpg" alt=""></p><p><img src="https://i.imgur.com/VBEGepa.png" alt=""></p><ul><li>在.section-testimonials img 增加vertical-align: middle;</li></ul><p><img src="https://i.imgur.com/bifGooB.png" alt=""></p><h3 id="增加上面逗點符號"><a href="#增加上面逗點符號" class="headerlink" title="增加上面逗點符號"></a>增加上面逗點符號</h3><p><a href="https://css-tricks.com/snippets/html/glyphs/">符號表</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.section-testimonials</span> <span class="selector-tag">blockquote</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line"> <span class="attribute">content</span>:<span class="string">&quot;\201C&quot;</span>;</span><br><span class="line"> <span class="attribute">font-size</span>:<span class="number">500%</span>;</span><br><span class="line"> <span class="attribute">display</span>: block;</span><br><span class="line"></span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">top</span>: -<span class="number">5px</span>;</span><br><span class="line"><span class="attribute">left</span>: -<span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/MJpSGz0.png" alt=""></p><h1 id="訂購方案介紹區"><a href="#訂購方案介紹區" class="headerlink" title="訂購方案介紹區"></a>訂購方案介紹區</h1><p><img src="https://i.imgur.com/6tr0o3E.png" alt=""></p><p><img src="https://i.imgur.com/8lTrnUY.png" alt=""></p><ul><li>span標籤的應用</li><li>當全部設定寬度100%，會出現問題<ul><li>要利用篩選器，來選擇指定框</li></ul></li></ul><p><img src="https://i.imgur.com/1XlErXn.png" alt=""></p><p><img src="https://i.imgur.com/YnpnJBc.png" alt=""></p><ul><li>解決方式，在html的標籤增加空行</li></ul><p><img src="https://i.imgur.com/Dke7ilN.png" alt=""></p><p><img src="https://i.imgur.com/oC2aMcy.png" alt=""></p><h1 id="頁尾表單的建構"><a href="#頁尾表單的建構" class="headerlink" title="頁尾表單的建構"></a>頁尾表單的建構</h1><p><img src="https://i.imgur.com/y9sxEXR.png" alt=""></p><p><img src="https://i.imgur.com/VQ5YHHR.png" alt=""></p><h1 id="footer"><a href="#footer" class="headerlink" title="footer"></a>footer</h1><p><img src="https://i.imgur.com/E4C4qY3.png" alt=""></p><ul><li>放入相關連結的icon</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;footer-nav&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>About us<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Press<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Android App<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col span-1-of-2 &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;socilmedia-link&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;logo-facebook&quot;</span> <span class="attr">class</span>=<span class="string">&quot;logo-facebook&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;logo-twitter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;logo-twitte&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;logo-google&quot;</span> <span class="attr">class</span>=<span class="string">&quot;logo-google&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">ion-icon</span> <span class="attr">name</span>=<span class="string">&quot;logo-instagram&quot;</span> <span class="attr">class</span>=<span class="string">&quot;logo-instagram&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ion-icon</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">          copyright <span class="symbol">&amp;copy;</span> 2020 by Omnifood. All right reserved.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/X2b2hfu.png" alt=""></p><ul><li>使用float來使物件放置左右側</li><li>footer-nav li使用inline-block</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="selector-tag">footer</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">80%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">footer</span> <span class="selector-class">.footer-nav</span>&#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.socilmedia-link</span>&#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer-nav</span> <span class="selector-tag">li</span>,<span class="selector-class">.socilmedia-link</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Uph2clO.png" alt=""></p><h3 id="連結顏色調整"><a href="#連結顏色調整" class="headerlink" title="連結顏色調整"></a>連結顏色調整</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer-nav</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>,<span class="selector-class">.socilmedia-link</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer-nav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:link</span> ,<span class="selector-class">.footer-nav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>, <span class="selector-class">.socilmedia-link</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:link</span> ,<span class="selector-class">.socilmedia-link</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line"> <span class="attribute">text-decoration</span>: none;</span><br><span class="line"> <span class="attribute">border</span>: none;</span><br><span class="line"> <span class="attribute">color</span>: <span class="number">#888</span>;</span><br><span class="line"> <span class="attribute">transition</span>: color .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer-nav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> ,<span class="selector-class">.footer-nav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ddd</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.socilmedia-link</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:link</span>,<span class="selector-class">.socilmedia-link</span>  <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line"> <span class="attribute">font-size</span>: <span class="number">160%</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/A2Z6Meh.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">footer</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#888</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  </span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.logo-instagram</span>,</span><br><span class="line"><span class="selector-class">.logo-google</span>,</span><br><span class="line"><span class="selector-class">.logo-twitte</span>,</span><br><span class="line"><span class="selector-class">.logo-facebook</span>&#123;</span><br><span class="line"><span class="attribute">transition</span>: color .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.logo-instagram</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#517fa4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.logo-google</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#dd4b39</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.logo-twitte</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#00aced</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.logo-facebook</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#3b5998</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/bLtpdK7.png" alt=""></p><hr><h1 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h1><h2 id="background與background-imge之差別"><a href="#background與background-imge之差別" class="headerlink" title="background與background-imge之差別"></a><code>background</code>與<code>background-imge</code>之差別</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">background属性是整體設置的，background image是background的属性之一，background的屬性包括</span><br><span class="line">background-color</span><br><span class="line">background-image</span><br><span class="line">background-repeat</span><br><span class="line">background-attachment</span><br><span class="line">background-position，</span><br><span class="line">你看不到圖片是因为設置錯，不能加no-repeat屬性，應改為：</span><br><span class="line">background-image:url(&quot;some.jpg&quot;); background-repeat:no-repeat;分開寫</span><br><span class="line"></span><br><span class="line">[background和background-image什么区别](https://bbs.csdn.net/topics/310167508)</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header</span>&#123;</span><br><span class="line"><span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">./Omnifood\ Contents/hero.jpg</span>) ;</span><br><span class="line"></span><br><span class="line"><span class="attribute">background-size</span>: cover;</span><br><span class="line"><span class="attribute">background-position</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/********我改為下面這樣*******/</span></span><br><span class="line"><span class="selector-class">.header</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">./Omnifood\ Contents/hero.jpg</span>) no-repeat</span><br><span class="line"> center center/cover;&#125;</span><br></pre></td></tr></table></figure><h2 id="文字框置中（區塊（div）的垂直置中）"><a href="#文字框置中（區塊（div）的垂直置中）" class="headerlink" title="文字框置中（區塊（div）的垂直置中）"></a>文字框置中（區塊（div）的垂直置中）</h2><blockquote><p>pjchender</p><blockquote><p>Position + Transform（常用）:先利用 position: absolute 把 top: 50% 設在 50%；接著再透過 transform: translateY(-50%) 把超過的部分修正回來，達到垂直置中。</p></blockquote></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hero-text-box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1140px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column; </span><br><span class="line">  </span><br><span class="line">   <span class="attribute">align-items</span>: center; </span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>參考：<br><a href="https://pjchender.blogspot.com/2015/04/css_15.html">pjchender</a></p><h2 id="使用button-vs-link"><a href="#使用button-vs-link" class="headerlink" title="使用button vs link"></a>使用<code>button</code> vs <code>link</code></h2><p><a href="https://a11y-101.com/design/button-vs-link">Button versus Link</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">From a semantics and accessibility viewpoint:</span><br><span class="line">Links ``(&lt;a&gt;) ``are for &quot;going someplace&quot; such as &quot;jumping to a different section of a page, going to another URL, etc.</span><br><span class="line">Whereas</span><br><span class="line">Buttons ``&lt;button&gt; ``are for &quot;doing something&quot; such as a function on the page to expand/collapse a menu, submit a form or etc.</span><br></pre></td></tr></table></figure><h2 id="grid參考資料"><a href="#grid參考資料" class="headerlink" title="grid參考資料"></a><code>grid</code>參考資料</h2><p><a href="http://www.responsivegridsystem.com/">Spectacularly Easy Responsive Design</a><br><a href="https://blog.hinablue.me/css-grid-layout/">關於 Grid Layout 的使用姿勢</a><br><a href="https://www.youtube.com/watch?v=uZRkVOeRHws">六角學院 - Bootstrap Grid System 原理介紹</a></p><h3 id="margin-與-paggimg"><a href="#margin-與-paggimg" class="headerlink" title="margin 與 paggimg"></a><code>margin</code> 與 <code>paggimg</code></h3><p>製作steps區塊時，因設定section的margin距離<br>使得想在此區塊多加上背景色彩，有了中間的空白處</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.meal-steps</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f4f4f4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>這裏應該改為padding<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">section</span>&#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">80px</span> <span class="number">0</span>; </span><br><span class="line">  <span class="comment">/*margin: 80px 0;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/ss2XfZd.png" alt=""></p><h3 id="練習後的小心得："><a href="#練習後的小心得：" class="headerlink" title="練習後的小心得："></a>練習後的小心得：</h3><p>1.在html建構會使用<code>.row</code><br>2.應用grid,css<br>3.內部，字的大小用百分比<br>4.有一些可以共用的區塊，可以放在reuse區塊，並設一樣的class名稱，在建構時，可以更快速</p>]]></content>
      
      
      <categories>
          
          <category> CSS練習 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> udemy </tag>
            
            <tag> CSS </tag>
            
            <tag> icon </tag>
            
            <tag> grid </tag>
            
            <tag> 多重背景 </tag>
            
            <tag> opacity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Amos金魚都能懂的切版教學影片- csscoke NO013</title>
      <link href="/2020/11/28/csscoke-NO013/"/>
      <url>/2020/11/28/csscoke-NO013/</url>
      
        <content type="html"><![CDATA[<p><a href="https://eva813.github.io/my-projects/coke-NO013(v1).html">My page</a><br><img src="https://i.imgur.com/BplwB2k.png" alt=""></p><h2 id="HTML架構"><a href="#HTML架構" class="headerlink" title="HTML架構"></a>HTML架構</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;side-menu&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-search&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-users&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>鐵人賽<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-gavel&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>暴力班<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-object-group&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>RWD 醬子<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-globe&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>金魚網頁<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-cutlery&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>金魚切版<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="side-menu"><a href="#side-menu" class="headerlink" title=".side-menu"></a>.side-menu</h2><ul><li>設定寬度、背景色彩</li><li>利用flex排列，並設定直向<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.side-menu</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">0deg</span>, <span class="number">#13547a</span>, <span class="number">#80d0c7</span>);</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="側邊選單裡的選項（nav）"><a href="#側邊選單裡的選項（nav）" class="headerlink" title="側邊選單裡的選項（nav）"></a>側邊選單裡的選項（nav）</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">   <span class="comment">/* 讓a可以一行一行排列 */</span></span><br><span class="line">   <span class="attribute">display</span>: block;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">   <span class="attribute">text-decoration</span>: none;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">   <span class="attribute">position</span>: relative;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><h3 id="設定底線，利用＋篩選器"><a href="#設定底線，利用＋篩選器" class="headerlink" title="設定底線，利用＋篩選器"></a>設定底線，利用＋篩選器</h3></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">a</span>+<span class="selector-tag">a</span> &#123;</span><br><span class="line">      <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><ul><li>使用此方式，會讓線滿版，無法單獨調整間距<br><img src="https://i.imgur.com/HDrjfjS.png" alt=""></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">a</span>+<span class="selector-tag">a</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">4</span>);</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">      <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Vj3cZFy.png" alt=""></p><h2 id="form-搜尋表"><a href="#form-搜尋表" class="headerlink" title="form 搜尋表"></a>form 搜尋表</h2><p><img src="https://i.imgur.com/JQygAWh.png" alt=""></p><ul><li>讓inpt與button可以緊密並排</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.side-menu</span> <span class="selector-tag">form</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">50px</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/EGk8tt6.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.side-menu</span> <span class="selector-tag">form</span> <span class="selector-tag">input</span>,</span><br><span class="line">   <span class="selector-class">.side-menu</span> <span class="selector-tag">form</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">     <span class="attribute">border</span>: none;</span><br><span class="line">     <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/I6Ceugc.png" alt=""></p><ul><li>讓form增加框線<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.side-menu</span> <span class="selector-tag">form</span> &#123;</span><br><span class="line">     </span><br><span class="line">     <span class="comment">/* 設定表單外框形狀有圓弧形 */</span></span><br><span class="line">     <span class="attribute">border-radius</span>: <span class="number">100px</span>;</span><br><span class="line">     <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">4</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/iTiqU93.png" alt=""></p><ul><li>調整寬度</li><li>但要注意的是，如此調整後就蓋住了form的框線</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 寬度300，左右2邊有10px，剩下280，希望左邊選單大一點點 */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.side-menu</span> <span class="selector-tag">form</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">230px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.side-menu</span> <span class="selector-tag">form</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/5nxR9Ru.png" alt=""></p><ul><li>設背景顏色為透明</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.side-menu</span> <span class="selector-tag">form</span> <span class="selector-tag">input</span>,</span><br><span class="line">    <span class="selector-class">.side-menu</span> <span class="selector-tag">form</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">      <span class="attribute">border</span>: none;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* 設定透明才會讓，form表單的框顯示清楚 */</span></span><br><span class="line">      <span class="attribute">background-color</span>: transparent;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/HpJUlbq.png" alt=""></p><ul><li>取消focus的外框<br><img src="https://i.imgur.com/jEv9f9o.png" alt=""></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.side-menu</span> <span class="selector-tag">form</span> <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>,</span><br><span class="line">    <span class="selector-class">.side-menu</span> <span class="selector-tag">form</span> <span class="selector-tag">button</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">      <span class="attribute">outline</span>: none;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/NrGoGVN.png" alt=""></p><h3 id="動畫"><a href="#動畫" class="headerlink" title="動畫"></a>動畫</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 動畫：讓icon消失，文字左縮 */</span></span><br><span class="line">   <span class="selector-tag">nav</span> <span class="selector-tag">a</span> <span class="selector-class">.fa</span> &#123;</span><br><span class="line">     <span class="attribute">margin-right</span>: -<span class="number">1.1em</span>;</span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0</span>);</span><br><span class="line">     <span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-tag">nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.fa</span> &#123;</span><br><span class="line">     <span class="attribute">margin-right</span>: <span class="number">0em</span>;</span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">   &#125;`</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> icon </tag>
            
            <tag> box-sizing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Amos金魚都能懂的切版教學影片-csscoke NO006</title>
      <link href="/2020/11/28/csscoke-NO006/"/>
      <url>/2020/11/28/csscoke-NO006/</url>
      
        <content type="html"><![CDATA[<p><a href="https://eva813.github.io/my-projects/coke-NO006(v1).html">my_page</a><br><img src="https://i.imgur.com/tYapgm2.png" alt=""></p><p>此切版主要是針對footer區域的切版練習，有四個欄位，最下方有copy right區域。</p><h2 id="我製作時遇到的問題："><a href="#我製作時遇到的問題：" class="headerlink" title="我製作時遇到的問題："></a>我製作時遇到的問題：</h2><ul><li>copyright一直跟左邊的item並行，是因為container的範圍應該只要涵蓋四個item就好</li></ul><p><img src="https://i.imgur.com/sU1bBXb.png" alt=""></p><ul><li>設定nav的display:flex;並讓設定方向為colum</li></ul><p><img src="https://i.imgur.com/CYzhwHq.png" alt=""></p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main-footer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>關於暴力課程<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 課程目標<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 辦學理念<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 課程宗旨<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>課程列表<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 暴力網頁入門班<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> RWD網頁深入理解<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> CSS3互動動畫設計<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Bootstrap框架實務<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-item&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>服務項目<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 網站建置顧問<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 網站設計建置<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 網站規劃<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-angle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 企業教育訓練<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-item footer-subs&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>訂閱電子報<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;訂閱&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;copyright&quot;</span>&gt;</span></span><br><span class="line">      Copyright <span class="symbol">&amp;copy;</span> 2019 金魚都能懂得這個網頁畫面怎麼切</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在大區塊先訂出寬度，並讓他們橫向排列</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main-footer</span> &#123;</span><br><span class="line">     <span class="comment">/* 讓上面有距離出來 */</span></span><br><span class="line">     <span class="attribute">padding</span>: <span class="number">150px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(-<span class="number">20deg</span>, <span class="number">#3f5494</span>, <span class="number">#08c7a5</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.main-footer</span> <span class="selector-class">.container</span> &#123;</span><br><span class="line">     <span class="attribute">display</span>: flex;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">     <span class="attribute">margin</span>: auto;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/jVPxmCS.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer-item</span> &#123;</span><br><span class="line">  <span class="comment">/* 使用flex的排版特性，來進行欄位大小的配置 */</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">flex-grow</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/vpFKfJ8.png" alt=""></p><h2 id="copyright"><a href="#copyright" class="headerlink" title="copyright"></a>copyright</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.copyright</span> &#123;</span><br><span class="line">      <span class="attribute">text-align</span>: center;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* 這裡也加距離 */</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">150px</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#3e5293</span>;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#70f6df</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="comment">/* 左方有一個空格，沒有填滿 */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/vhMFqSF.png" alt=""></p><h2 id="nav區"><a href="#nav區" class="headerlink" title="nav區"></a>nav區</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.footer-item</span> <span class="selector-tag">nav</span> &#123;</span><br><span class="line">     <span class="comment">/* 設定直向排列之後，裡面的小項目就會排列整齊 */</span></span><br><span class="line">     <span class="attribute">display</span>: flex;</span><br><span class="line">     <span class="attribute">flex-direction</span>: column;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/8joRYrl.png" alt=""></p><h4 id="訂閱電子報的區域"><a href="#訂閱電子報的區域" class="headerlink" title="訂閱電子報的區域"></a>訂閱電子報的區域</h4><ul><li>再給予一個class名稱，在設定css時比較有指向性</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;footer-item footer-subs&quot;&gt;</span><br><span class="line">        &lt;h4&gt;訂閱電子報&lt;/h4&gt;</span><br><span class="line">        &lt;form&gt;</span><br><span class="line">          &lt;input type=&quot;text&quot; name=&quot;&quot;&gt;</span><br><span class="line">          &lt;input type=&quot;submit&quot; value=&quot;訂閱&quot;&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">      &lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="訂閱電子報的居中"><a href="#訂閱電子報的居中" class="headerlink" title="訂閱電子報的居中"></a>訂閱電子報的居中</h2><p><img src="https://i.imgur.com/2PBp5rH.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* footer-item是flex的項目，所以他的高度和其他地方等高，但這個訂閱電子報欄位內容，並沒有等高&lt;所以讓footer-item設定flex，設定直排，讓表單上下的距離能夠撐開 */</span></span><br><span class="line"><span class="selector-class">.footer-subs</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer-subs</span> <span class="selector-tag">form</span> &#123;</span><br><span class="line">  <span class="comment">/* 這裏的flex是為了讓輸入框與訂閱紐能夠並排 */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="comment">/* 這裏的margin與寬度的設定是為了讓輸入框能夠整個居中   */</span></span><br><span class="line">  <span class="attribute">margin</span>: auto <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/NCJMKxk.png" alt=""></p><h2 id="最後的調整"><a href="#最後的調整" class="headerlink" title="最後的調整"></a>最後的調整</h2><p><img src="https://i.imgur.com/YRqfCso.png" alt=""></p><ul><li>因為copyright的margin:150px; &gt; 應該修改為margin: 150px 0 0 ;(只有上面有margin)</li></ul><p><img src="https://i.imgur.com/Rn0pOpz.png" alt=""></p><p><a href="https://eva813.github.io/my-projects/coke-NO006(v2).html">t_page</a></p><hr><p><a href="https://ithelp.ithome.com.tw/articles/10208741">Day24 Flex 空間分配 flex-grow / flex-shrink / flex-basis</a><br><a href="https://www.itread01.com/content/1511769483.html">HTML中button和input button的區別</a></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> flex </tag>
            
            <tag> footer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Amos金魚都能懂的切版教學影片-csscoke NO017</title>
      <link href="/2020/11/27/csscoke-NO017/"/>
      <url>/2020/11/27/csscoke-NO017/</url>
      
        <content type="html"><![CDATA[<p><a href="https://eva813.github.io/my-projects/coke-NO017(v1).html">成品</a><br><img src="https://i.imgur.com/h8XYPgY.png" alt=""></p><h2 id="會員登入"><a href="#會員登入" class="headerlink" title="會員登入"></a>會員登入</h2><p>製作會員登入頁面，使用form表單，製作標籤、輸入框，以及登入按鈕。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>會員登入<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 用群組來分帳號與密碼 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;user_id&quot;</span>&gt;</span>帳號<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;user_id&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- for,與input的名字設一樣，才能在點到label時，會直接把插入點帶進去 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;grop&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;user_password&quot;</span>&gt;</span>密碼<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;user_password&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gtn-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>登入<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/VtS2Juk.png" alt=""></p><h2 id="HTML-body-背景照片"><a href="#HTML-body-背景照片" class="headerlink" title="HTML,body 背景照片"></a>HTML,body 背景照片</h2><p>要讓畫面整個垂直置中，首先需要讓畫面高度是夠高的！（預設的body,html是由內容所撐開，所以預設不是100%的高）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line">   <span class="selector-tag">body</span> &#123;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">     <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;/img/office.jpg&#x27;</span>) no-repeat</span><br><span class="line">center center/cover;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/2u1BBDa.jpg" alt=""></p><h2 id="登入區"><a href="#登入區" class="headerlink" title="登入區"></a>登入區</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.login</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#fff</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/IsNlLK5.jpg" alt=""></p><ul><li>讓此login區置中於版面<ul><li>在body設display:flex</li></ul></li></ul><p><img src="https://i.imgur.com/YdGWpUZ.jpg" alt=""></p><h4 id="陰影、模糊"><a href="#陰影、模糊" class="headerlink" title="陰影、模糊"></a>陰影、模糊</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">box-shadow: x y blur spread color inset;</span><br><span class="line">常用box-shadow多半用在區塊的光暈，來達成陰影的效果</span><br></pre></td></tr></table></figure><p>補充</p><ul><li>x：水平位移</li><li>y：垂直位移</li><li>blur：模糊程度，預設為0</li><li>spread：擴散程度，預設為0</li><li>color：顏色</li><li>inset：內陰影</li></ul><h5 id="毛玻璃特效-注意：這是透過瀏覽器在處理特效，會比較耗效能"><a href="#毛玻璃特效-注意：這是透過瀏覽器在處理特效，會比較耗效能" class="headerlink" title="毛玻璃特效 (注意：這是透過瀏覽器在處理特效，會比較耗效能)"></a>毛玻璃特效 (注意：這是透過瀏覽器在處理特效，會比較耗效能)</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">backdrop-filter: blur(5px);</span><br></pre></td></tr></table></figure><p>更多相關…<a href="https://wcc723.github.io/development/2020/10/12/frosted-glass/">純 CSS 毛玻璃特效 - backdrop-filter 屬性介紹</a>,<a href="https://ithelp.ithome.com.tw/articles/10208692">Secret 18: 毛玻璃效果</a></p><p><img src="https://i.imgur.com/tzdNwg3.png" alt=""></p><h2 id="調整文字、排版細節"><a href="#調整文字、排版細節" class="headerlink" title="調整文字、排版細節"></a>調整文字、排版細節</h2><p><img src="https://i.imgur.com/yYg2Oga.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.form</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="comment">/* 讓輸入框設定100%，就會撐開 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/hyKUW8d.png" alt=""></p><ul><li>使用line-height，讓輸入框的高度撐開</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.form</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">      <span class="comment">/* 讓輸入框設定100%，就會撐開 */</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#aaa</span>;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/HSsKhS5.png" alt=""></p><ul><li>將帳號、密碼的間距拉開，以及h2的調整</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.form</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">      <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">      <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span><br><span class="line">      <span class="attribute">padding-bottom</span>: <span class="number">10px</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.form</span> <span class="selector-class">.group</span> &#123;</span><br><span class="line">      <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.form</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.form</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">      <span class="comment">/* 讓輸入框設定100%，就會撐開 */</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#aaa</span>;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">3</span>;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/0621fhk.png" alt=""></p><h2 id="按鈕的調整"><a href="#按鈕的調整" class="headerlink" title="按鈕的調整"></a>按鈕的調整</h2><ul><li>btn並排中建出現空隙，在父元素div上加上 font-size:0;</li><li>.form .btn+.btn，選取到『緊跟在對象 A 同層後方的 B』</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.form</span> <span class="selector-class">.btn-group</span> &#123;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">0px</span>;</span><br><span class="line">      <span class="comment">/* 讓按鈕區塊與上方有些距離，首先將原本wrap，height: 400px;改為500px ，再調整按鈕的margin*/</span></span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.form</span> <span class="selector-class">.btn</span> &#123;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">      <span class="attribute">border</span>: none;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#6ab4fe</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">190px</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.form</span> <span class="selector-class">.btn</span>+<span class="selector-class">.btn</span> &#123;</span><br><span class="line">      <span class="attribute">margin-left</span>: <span class="number">15px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><a href="https://eva813.github.io/my-projects/coke-NO017(v2).html">Tutoria page</a></p><hr><p><a href="https://www.w3schools.com/css/css_form.asp">w3schools</a><br><a href="https://www.itread01.com/p/681002.html">CSS 實現背景圖尺寸不隨瀏覽器縮放而變化</a><br><a href="https://medium.com/@savemuse/%E5%88%A9%E7%94%A8css-box-shadow%E8%A4%87%E8%A3%BD%E5%9C%96%E5%9E%8B-51e3da4431cf">應用CSS3 box-shadow複製圖型</a><br><a href="https://www.w3schools.com/css/css3_buttons.asp">css3_buttons</a><br><a href="https://www.itread01.com/p/647911.html">input標籤和button放在一行寫:inline元素的空白間隙問題</a><br><a href="https://ithelp.ithome.com.tw/articles/10220656">親代選取器之妹妹選取器與鞭炮串選取器</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 切版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Amos金魚都能懂的切版教學影片-csscoke NO010</title>
      <link href="/2020/11/27/csscoke-NO010/"/>
      <url>/2020/11/27/csscoke-NO010/</url>
      
        <content type="html"><![CDATA[<h2 id="練習使用float排版"><a href="#練習使用float排版" class="headerlink" title="練習使用float排版"></a>練習使用float排版</h2><p><a href="https://eva813.github.io/my-projects/coke-NO010(v2).html">成品</a><br><img src="https://i.imgur.com/HSxrHVY.jpg" alt=""></p><h2 id="HTML架構"><a href="#HTML架構" class="headerlink" title="HTML架構"></a>HTML架構</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://picsum.photos/500/500?random=10&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;txt&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>金魚都懂切版<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>金魚都懂的這個網頁怎麼切，是 IThome 鐵人賽的主題，主要訴求在簡。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://picsum.photos/500/500?random=20&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;txt&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>金魚也懂CSS<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>金魚都能懂的 CSS 選取器，是 IThome 鐵人賽的主題之一，<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://picsum.photos/500/500?random=30&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;txt&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>金魚還會HTML<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://picsum.photos/500/500?random=40&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;txt&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>阿你會甚麼?<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://picsum.photos/500/500?random=66&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;txt&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>對不起我又嗆人了<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> CSScoke 的直播，趁現在趕快去定閱一波阿!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="調整版面"><a href="#調整版面" class="headerlink" title="調整版面"></a>調整版面</h2><ul><li>1.在wrap來訂出畫面尺寸大小</li><li>2.使用float</li><li>3.在第一個的item去設定，佔畫面的50%;而另外四個則是以25％去放置在畫面中</li><li>4.蚯蚓選取器：『對象 A 同層後方的所有 B』</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 先將畫面尺寸定出來 */</span></span><br><span class="line">    <span class="selector-class">.wrap</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line">      <span class="attribute">margin</span>: auto;</span><br><span class="line">      <span class="comment">/* 在父層設置這個，就可以讓父層抓到所有子層的高度 */</span></span><br><span class="line">      <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.item</span> &#123;</span><br><span class="line">      <span class="attribute">float</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.item</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.item</span><span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.item</span><span class="selector-pseudo">:first</span>-child~<span class="selector-class">.item</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>設定.item .txt區塊的寬為100%，以及paddimg:15px，這會使得文字區塊超出div。</li><li>要使用 <code>box-sizing: border-box;</code></li></ul><p><img src="https://i.imgur.com/iaIicVC.jpg" alt=""></p><p><img src="https://i.imgur.com/c5BGt1E.jpg" alt=""></p><h2 id="互動效果的設定"><a href="#互動效果的設定" class="headerlink" title="互動效果的設定"></a>互動效果的設定</h2><ul><li><p>設定文字被摸到出現或消失</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> <span class="selector-class">.txt</span> &#123;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/* 調整兩個段落的垂直居中 */</span></span><br><span class="line">      <span class="comment">/* display: flex; */</span></span><br><span class="line">      <span class="attribute">flex-direction</span>: column;</span><br><span class="line">      <span class="attribute">justify-content</span>: center;</span><br><span class="line">      <span class="attribute">align-items</span>: center;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* 要設定互動，display: flex;要去掉 */</span></span><br><span class="line">      <span class="attribute">display</span>: none;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.item</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.txt</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">/* ******************************/</span></span><br><span class="line">    <span class="comment">/* ***或是以透明度的方式來做顯示互動的效果*** */</span></span><br><span class="line">  <span class="selector-class">.item</span> <span class="selector-class">.txt</span> &#123;  </span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">transition</span>: .<span class="number">5s</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.item</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.txt</span> &#123;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure></li><li><p>也可將互動改唯有縮放效果的方式</p></li><li><p><code>scale()</code>用於修改元素大小</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> <span class="selector-class">.txt</span> &#123;  </span><br><span class="line">     <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0</span>);</span><br><span class="line">     <span class="attribute">transition</span>: .<span class="number">5s</span>;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.item</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.txt</span> &#123;</span><br><span class="line">     <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">     <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="補充教學-float-浮動"><a href="#補充教學-float-浮動" class="headerlink" title="補充教學-float 浮動"></a>補充教學-float 浮動</h2><ul><li>以圖片與段落文字為例<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://picsum.photos/500/500?random=6&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/VkWWZpD.png" alt=""></p><p><img src="https://i.imgur.com/jIi69In.png" alt=""></p><ul><li>當將img設定浮動之後，他會浮上來一層，在p之上，與裡面的文字同一層（所以會擠壓到文字）</li><li><code>float:left;</code> <code>float:right;</code> 沒有center</li></ul><p>示意圖：<br><img src="https://i.imgur.com/lUTqlRy.png" alt=""></p><p>形成文繞圖：<br><img src="https://i.imgur.com/6NuHHch.png" alt=""></p><p><img src="https://i.imgur.com/a8d7ERZ.png" alt=""></p><ul><li>讓圖片與文字有些距離，可以在img設定margin</li></ul><p><img src="https://i.imgur.com/4vzaQnJ.png" alt=""></p><h2 id="float排版"><a href="#float排版" class="headerlink" title="float排版"></a>float排版</h2><ul><li><p>設定三個欄位</p></li><li><p>子物件設定為浮動之後，父層就會抓不到子物件的高度</p></li></ul><p><img src="https://i.imgur.com/LcieUW2.png" alt=""></p><ul><li>物件設定float之後，物件會排排站</li></ul><ul><li>再將三個欄位設定margin，且增加ooxx的div</li><li>並將ooxx，設定<code>clear：both;</code> 讓父層抓到高度</li></ul><blockquote><p>父層其實是被ooxx所拉開高度，而不是被內容的float物件所撐開<br>clear作用是散開浮動物件，跑到所有浮動物件後方(最下方) 圖二，紅色。</p></blockquote><p><img src="https://i.imgur.com/9kLyaNW.png" alt=""></p><p><img src="https://i.imgur.com/dsqmPw6.png" alt=""></p><hr><p><a href="https://ithelp.ithome.com.tw/articles/10248813">Day 19 | 我比較喜歡脆笛酥 - 方塊酥版面 Part 1</a><br><a href="https://ithelp.ithome.com.tw/articles/10220656">親代選取器之妹妹選取器與鞭炮串選取器</a><br><a href="https://ithelp.ithome.com.tw/articles/10196979">【DAY24】transform，進入視覺系的CSS第一步，網頁要動起來了！（一）</a><br><a href="https://ithelp.ithome.com.tw/articles/10194395">Transform變形</a><br><a href="https://medium.com/%E9%A6%AC%E6%A0%BC%E8%95%BE%E7%89%B9%E7%9A%84%E5%86%92%E9%9A%AA%E8%80%85%E6%97%A5%E8%AA%8C/css-%E6%B5%AE%E5%8B%95%E8%88%87%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8B%95-34d3f49ef817">[CSS] 浮動 (float) 與清除浮動 (clear)</a></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 切版 </tag>
            
            <tag> float </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Amos金魚都能懂的切版教學影片-csscoke NO011</title>
      <link href="/2020/11/27/csscoke-NO011/"/>
      <url>/2020/11/27/csscoke-NO011/</url>
      
        <content type="html"><![CDATA[<p><a href="https://eva813.github.io/my-projects/coke-NO011(v1).html">成品</a><br><img src="https://i.imgur.com/4oCdMgG.png" alt=""></p><ul><li>基本網頁的架構<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 大區塊 wrap --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 區塊一 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;txt&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 區塊二 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;txt&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 區塊三 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;txt&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="wrap-的處理"><a href="#wrap-的處理" class="headerlink" title="wrap 的處理"></a><code>wrap</code> 的處理</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrap</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">max-width</span>: <span class="number">1200px</span>;</span><br><span class="line">      <span class="attribute">margin</span>: auto;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/5PBCM6c.png" alt=""></p><h3 id="三個item的處理"><a href="#三個item的處理" class="headerlink" title="三個item的處理"></a>三個item的處理</h3><ul><li>方框的角是圓弧<code>border-radius: 5px;</code>，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-radius">參考</a></li><li>方框背後有陰影<code>box-shadow</code>，<a href="https://developer.mozilla.org/zh-TW/docs/Web/CSS/box-shadow">參考</a></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line"></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">340px</span>;</span><br><span class="line">      <span class="attribute">align-items</span>: center;</span><br><span class="line">      <span class="attribute">text-align</span>: center;</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">5px</span> solid <span class="number">#F8D0CD</span>;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">      <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">10px</span> <span class="number">1px</span> <span class="number">#F8D0CD</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="破格"><a href="#破格" class="headerlink" title="破格"></a>破格</h3><ul><li>設置margin凸出去，就設置負的</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> <span class="selector-class">.icon</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">      <span class="comment">/* 將整個div放中間，不是用text-align */</span></span><br><span class="line">      <span class="attribute">margin</span>: -<span class="number">75px</span> auto <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: blue;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">85px</span>;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#f5afac</span>;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">150px</span>;</span><br><span class="line">      <span class="comment">/* line-height可以用來做單航文字的垂直居中 */</span></span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">150px</span>;</span><br><span class="line">      <span class="comment">/* **** */</span></span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>先是方形的，後來加了radious</li></ul><p><img src="https://i.imgur.com/vXjT2NR.png" alt=""></p><p><img src="https://i.imgur.com/joOrRwU.png" alt=""></p><h4 id="在icon前加一個物件，"><a href="#在icon前加一個物件，" class="headerlink" title="在icon前加一個物件，"></a>在icon前加一個物件，</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> <span class="selector-class">.icon</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#f5afac</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="comment">/* left: 0; right: 0;  要注意有border*/</span></span><br><span class="line">      <span class="attribute">left</span>: -<span class="number">10px</span>;</span><br><span class="line">      <span class="attribute">right</span>: -<span class="number">10px</span>;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">margin</span>: -<span class="number">15px</span> auto <span class="number">0</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/*下一張圖，加上框線的處理*/</span></span><br><span class="line">      <span class="attribute">border-top</span>: <span class="number">10px</span> solid <span class="number">#f9cec2</span>;</span><br><span class="line">      <span class="attribute">border-right</span>: <span class="number">10px</span> solid <span class="number">#f9cec2</span>;</span><br><span class="line">      <span class="attribute">border-bottom</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">      <span class="attribute">border-left</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span><br><span class="line">      <span class="attribute">margin</span>: -<span class="number">10px</span> auto <span class="number">0</span>;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>先讓外框變原形，給予線條</li><li>設計線的上下左右，顏色與透明度（是以原本正方形的上下左右去看）</li><li>接著選轉，讓它到正上方</li></ul><p><img src="https://i.imgur.com/Vg4Rhg5.png" alt=""></p><p><img src="https://i.imgur.com/9NuBZmd.png" alt=""></p><p><img src="https://i.imgur.com/9UdygSn.png" alt=""></p><ul><li><h4 id="要注意突出去的部分已經超過wrap的範圍，會影響專案後續的呈現"><a href="#要注意突出去的部分已經超過wrap的範圍，會影響專案後續的呈現" class="headerlink" title="要注意突出去的部分已經超過wrap的範圍，會影響專案後續的呈現"></a>要注意突出去的部分已經超過wrap的範圍，會影響專案後續的呈現</h4><img src="https://i.imgur.com/31dbEZZ.png" alt=""></li></ul><ul><li><h4 id="wrap要做調整"><a href="#wrap要做調整" class="headerlink" title="wrap要做調整"></a>wrap要做調整</h4></li></ul><p><img src="https://i.imgur.com/mwELszb.png" alt=""></p><p><img src="https://i.imgur.com/FeeKHp9.png" alt=""></p><h2 id="icon的動畫"><a href="#icon的動畫" class="headerlink" title="icon的動畫"></a>icon的動畫</h2><ul><li><code>@keyframes ＋ 動畫名稱</code> 動畫內容（劇本） 關鍵影格的設定(0-100%(結束) or from-to )一段動畫在一個連續時間軸上進行著</li><li><code>animation</code> ＋ 動畫名稱 播放時間  延遲執行的時間（要等多久才播放） 速度 次數 方向 填充模式(起點狀態)  播放狀態（播放\暫停）</li></ul><h4 id="animation-name-duration-timing-function-delay-iteration-count-direction-fill-mode-play-state"><a href="#animation-name-duration-timing-function-delay-iteration-count-direction-fill-mode-play-state" class="headerlink" title="animation:name duration | timing-function | delay | iteration-count | direction | fill-mode | play-state;"></a><code>animation:name duration | timing-function | delay | iteration-count | direction | fill-mode | play-state;</code></h4><p><a href="https://www.oxxostudio.tw/articles/201803/css-animation.html">完整解析 CSS 動畫 ( CSS Animation )</a><br><a href="https://www.youtube.com/watch?v=H9xZ9mExrZk&feature=youtu.be">金魚都能懂網頁設計入門 : Animation 網頁動畫 - 鐵人賽第十九天</a><br><a href="https://dotblogs.com.tw/gra/2018/03/20/222028">動畫效果</a></p><hr><ul><li>animation-duration:5s;指的是「播放一次」動畫需要的時間</li><li>animation-iteration-count:infinite;表示動畫播放的次數，預設值為 1 次，如果設定為 infinite 動畫就會無止盡的播放下去。</li><li>animation-timing-function 動畫加速度函式:<ul><li>linear:線性，沒有任何加速減速</li><li>ease、ease-in、ease-out、ease-in-out:具有加速減速的動畫   </li></ul></li><li>animation-direction 動畫播放方向<ul><li>normal：正常播放，從 0% 到 100% ( 預設值 )。</li><li>reverse：反轉播放，從 100% 到 0%。</li><li>alternate：正反轉輪流播放，奇數次為 0% 到 100%，偶數次為 100% 到 0%，若動畫播放次數只有一次就只會正常播放。</li><li>alternate-reverse：alternate 的相反，奇數次為 100% 到 0%，偶數次為 0% 到 100%，若動畫播放次數只有一次就只會反轉播放。<br><img src="https://i.imgur.com/X8LBQPn.png" alt=""></li></ul></li></ul><hr><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* item被摸到，然後搖裡面的icon */</span></span><br><span class="line">    <span class="selector-class">.item</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.fas</span> &#123;</span><br><span class="line">      <span class="attribute">animation</span>: shake .<span class="number">2s</span> linear infinite alternate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@keyframes</span> shake &#123;</span><br><span class="line">      <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">10deg</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">10deg</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Font-Awesome"><a href="#Font-Awesome" class="headerlink" title="Font Awesome"></a>Font Awesome</h2><ul><li>使用前可以在官網創造帳戶</li><li>點選右上角的 ” Copy Kit Code ”</li><li>將剛剛複製的這串程式碼放入我們網站 HTML 程式碼中的 <code>&lt;head&gt;</code> 之中。</li><li>接下來就可以找自己享用的icon</li></ul><p><img src="https://i.imgur.com/ZZZ5mYn.png" alt=""></p><h2 id="import-“URI”-插入到-CSS-檔中"><a href="#import-“URI”-插入到-CSS-檔中" class="headerlink" title="@import “URI” 插入到 CSS 檔中"></a>@import “URI” 插入到 CSS 檔中</h2><p><a href="https://ithelp.ithome.com.tw/articles/10195612">@import 開心的結構化 CSS</a></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 切版 </tag>
            
            <tag> animation </tag>
            
            <tag> icon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Amos金魚都能懂的切版教學影片- csscoke NO001</title>
      <link href="/2020/11/27/csscoke-NO001/"/>
      <url>/2020/11/27/csscoke-NO001/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/v5d6H4B.jpg" alt=""></p><h2 id="一開始我的製作方式是"><a href="#一開始我的製作方式是" class="headerlink" title="一開始我的製作方式是"></a>一開始我的製作方式是</h2><ul><li>一個區塊放圖片</li><li>一個區塊放h1,下標</li><li>最後在一個區塊h2,p</li><li>想讓文字與圖的區塊疊住再去做調整，不過失敗…</li></ul><h2 id="Amos老師製作方式"><a href="#Amos老師製作方式" class="headerlink" title="Amos老師製作方式"></a>Amos老師製作方式</h2><ul><li>用一個取名為banner的區塊</li><li>裡面放一個container的容器，作為來設定裝下裡面文字的容器</li><li>此container中，再放一個banner-txt，用來放置文字區塊</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 設定固定寬度的容器 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner-txt&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>金魚都能懂的</span><br><span class="line">          <span class="tag">&lt;<span class="name">small</span>&gt;</span>這個網頁畫面怎麼切<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>圖文滿版區塊<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>這畫面實在常見，在各種樣版網站可說是設計常客</span><br><span class="line">          金魚切不出來實在說不過去阿<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-css的簡單解析"><a href="#1-css的簡單解析" class="headerlink" title="1.css的簡單解析"></a>1.css的簡單解析</h3><ul><li>在banner的地方會去設定填滿整個視窗</li><li>container用來設定所放入文字的容器，他的寬與高，並讓他置中</li><li>banner-txt的地方，將高度設定和container一樣，並設定flex讓內容文字能夠依照想要的方式來進行排列</li></ul><hr><h2 id="將幾個大重點放於下方說明："><a href="#將幾個大重點放於下方說明：" class="headerlink" title="將幾個大重點放於下方說明："></a>將幾個大重點放於下方說明：</h2><h3 id="2-CSS-Reset"><a href="#2-CSS-Reset" class="headerlink" title="2.CSS Reset"></a>2.CSS Reset</h3><p><a href="https://www.youtube.com/watch?v=WtjXBIyxhw8">金魚都能懂網頁設計入門 : CSS Reset </a><br>meyerweb.com<br>計網頁時重要的起手式，主要是為了讓各家瀏覽器的網頁外觀維持一致。<br>不同瀏覽器，在一開始，會有預設的部分，會導致在做css時和預想的設置會有差異，所以要記得reset。</p><hr><h3 id="3-flex-的使用"><a href="#3-flex-的使用" class="headerlink" title="3.flex 的使用"></a>3.flex 的使用</h3><p><a href="https://www.youtube.com/watch?v=_nCBQ6AIzDU">玩轉CSS </a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">display: flex;</span><br><span class="line">flex-direction: column; 垂直</span><br><span class="line">justify-content: center; </span><br><span class="line">align-items:flex-start</span><br></pre></td></tr></table></figure><h3 id="此網頁flex排列的過程"><a href="#此網頁flex排列的過程" class="headerlink" title="此網頁flex排列的過程"></a>此網頁flex排列的過程</h3><p><img src="https://i.imgur.com/eMWlawn.png" alt=""></p><ul><li>display: flex;</li></ul><p><img src="https://i.imgur.com/0cDI8Nq.png" alt=""></p><ul><li>.banner-txt small {  display: block;}</li></ul><p><img src="https://i.imgur.com/lWwcqSe.png" alt=""></p><ul><li>.banner-txt {  flex-direction: column;}</li></ul><p><img src="https://i.imgur.com/xHmKCi0.png" alt=""></p><ul><li>.banner-txt {  flex-direction: column;justify-content: center;}</li></ul><p><img src="https://i.imgur.com/ALt0gm2.png" alt=""></p><h3 id="在金魚…此h1下面-加上分隔線"><a href="#在金魚…此h1下面-加上分隔線" class="headerlink" title="在金魚…此h1下面 加上分隔線"></a>在金魚…此h1下面 加上分隔線</h3><ul><li>以邊框來設，線變成滿版一條</li><li>因為我們前面使用了flex的特性，讓他們的排列變成直排（主軸變直的）</li><li>故’次軸’變成橫的，所以在預設情形下，次軸會填滿主軸的寬或高<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.banner-txt h1 &#123;</span><br><span class="line">      font-size: 80px;</span><br><span class="line">      border-bottom: 1px solid #333;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://i.imgur.com/VVDVFKG.png" alt=""></p><ul><li>在剛剛設置flex的那邊設置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.banner-txt&#123; align-items: flex-start;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/eRE9dBP.png" alt=""></p><hr><h2 id="多重背景"><a href="#多重背景" class="headerlink" title="多重背景"></a>多重背景</h2><ul><li>整個版面是將此背景圖放在banner區塊</li><li>用線性方式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 多重背景的使用 */</span></span><br><span class="line">      <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">115deg</span>, darksalmon <span class="number">50%</span>, transparent <span class="number">50%</span>)center center /<span class="number">100%</span> <span class="number">100%</span>, <span class="built_in">url</span>(<span class="string">https://picsum.photos/seed/picsum/1200/600</span>)right center /auto <span class="number">100%</span>;</span><br></pre></td></tr></table></figure><p>linear gradient(顏色漸變方向 &lt;開始方向 結束方向&gt;, 色碼1 位置1 ,色碼 2 位置2,….)    fixed (位置：固定)  center center(背景：位置，x軸 y軸) / 100% 100% (背景：尺寸，寬、高)</p><p><a href="https://ithelp.ithome.com.tw/articles/10197136">Day26：小事之 多重背景與漸層背景 CSS3 Gradients</a><br><a href="https://www.w3cplus.com/css3/do-you-really-understand-css-linear-gradients.html">你真的理解CSS的linear-gradient？</a></p><hr><h3 id="margin-與-padding"><a href="#margin-與-padding" class="headerlink" title="margin 與 padding"></a>margin 與 padding</h3><p><img src="https://i.imgur.com/HmMAKt5.png" alt=""></p><hr><p>可用假圖產生圖片，尺寸大小或是隨機出圖都可以在網址上設定。<br>假圖產生網址 1：<a href="https://fakeimg.pl/">https://fakeimg.pl/</a><br>假圖產生網址 2：<a href="https://picsum.photos/">https://picsum.photos/</a></p><p>參考資料<br><a href="https://medium.com/chloelo925/%E9%87%91%E9%AD%9A%E9%83%BD%E8%83%BD%E6%87%82%E7%9A%84%E7%B6%B2%E9%A0%81%E8%A8%AD%E8%A8%88-%E9%9B%9C%E8%A8%98-1e6068054e4a">金魚都能懂的網頁設計-雜記</a></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> 切版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tribute-page 切版練習</title>
      <link href="/2020/11/27/tribute-page/"/>
      <url>/2020/11/27/tribute-page/</url>
      
        <content type="html"><![CDATA[<p>在freeCodeCamp上，可以免費學習到程式語言的課程，除了提供基礎的介紹外，也有一些實作範本可以練習，此次，主要練習css切版的基礎，製作一個一頁的頁面</p><h2 id="頁面分析"><a href="#頁面分析" class="headerlink" title="頁面分析"></a>頁面分析</h2><p><img src="https://i.imgur.com/HfmFPC0.png" alt=""></p><p><img src="https://i.imgur.com/hGHbOHb.png" alt=""></p><h4 id="先試著自己動手做"><a href="#先試著自己動手做" class="headerlink" title="先試著自己動手做"></a>先試著自己動手做</h4><h3 id="我區分的："><a href="#我區分的：" class="headerlink" title="我區分的："></a>我區分的：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;header&quot;&gt;</span><br><span class="line">    &lt;h1&gt;Dr. Norman Borlaug&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;The man who saved a billion lives&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">   &lt;img src=&quot;https://picsum.photos/500/400?random=1&quot; alt=&quot;&quot;&gt;</span><br><span class="line">   &lt;p&gt;Dr. Norman Borease wheat yields - part of his</span><br><span class="line">     life-long war on hunger.&lt;/p&gt;</span><br><span class="line">     &lt;/div&gt;</span><br><span class="line">   &lt;div class=&quot;list&quot;&gt;</span><br><span class="line">     &lt;h2&gt;Here&#x27;s a time line of Dr. Borlaug&#x27;s life:&lt;/h2&gt;</span><br><span class="line">     &lt;ul&gt;</span><br><span class="line">      li*16--</span><br><span class="line">     &lt;/ul&gt;</span><br><span class="line">     &lt;p&gt;&quot;Borlaug&#x27;s life and achievement are testimony to the far-reaching contribution that one man&#x27;s towering</span><br><span class="line">       intellect,</span><br><span class="line">       persistence and scientific vision can make to human peace and progress.&quot;</span><br><span class="line">       &lt;br&gt;</span><br><span class="line">       -- Indian Prime Minister Manmohan Singh&lt;/p&gt;</span><br><span class="line">     &lt;h3&gt;&lt;strong&gt;If you have time, you should read more about this incredible human being on his a</span><br><span class="line">         &lt;a href=&quot;https://en.wikipedia.org/wiki/Norman_Borlaug&quot;&gt;Wikipedia entry&lt;/a&gt; .&lt;/strong&gt;&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="自己切的時候，遇到的問題"><a href="#自己切的時候，遇到的問題" class="headerlink" title="自己切的時候，遇到的問題"></a>自己切的時候，遇到的問題</h2><ul><li>img 在網頁縮放時，沒有好好的跟著容器變化大小，會凸出去。<ul><li>一開始，是設定固定寬度、高度去調整</li><li>解決：使用<code>max-width</code></li><li>另外img的display也要調整為block或inline-block，比較好調整置中<ul><li>在中間很多列表的表頭，上下空間與置中一直沒有調整好</li><li>發現區段沒有設置h3，讓他形成一個區塊</li><li>解決：使用開發者工作，去看margin、padding產生空間</li></ul></li></ul></li></ul><hr><h3 id="解法："><a href="#解法：" class="headerlink" title="解法："></a>解法：</h3><h2 id="1-在最上面的區塊，使用main去包"><a href="#1-在最上面的區塊，使用main去包" class="headerlink" title="1.在最上面的區塊，使用main去包"></a>1.在最上面的區塊，使用main去包</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;main id=&quot;main&quot;&gt;</span><br><span class="line"> &lt;h1&gt;..&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;Ts&lt;/p&gt;</span><br><span class="line">  &lt;/main&gt;</span><br></pre></td></tr></table></figure><h3 id="style的部分要注意置中-字的大小"><a href="#style的部分要注意置中-字的大小" class="headerlink" title="style的部分要注意置中\字的大小"></a>style的部分要注意置中\字的大小</h3><ul><li>margin,padding 做了些調整<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">2.5em</span>;</span><br><span class="line"> &#125;</span><br><span class="line">  <span class="selector-id">#main</span> &#123;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">30px</span> <span class="number">8px</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-圖片區塊"><a href="#2-圖片區塊" class="headerlink" title="2.圖片區塊"></a>2.圖片區塊</h2><p>使用<code>&lt;figure&gt;</code>用來引用任何內容像是文字段落、圖片、圖表或程式碼片段。<code>&lt;figure&gt;</code> 中還可以有一個 <code>&lt;figcaption&gt;</code> 標籤用來說明該 figure 區塊的標題。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;figure id=&quot;img-div&quot;&gt;&lt;img src=&quot;/img/tribute-cover.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;figcaption id=&quot;imd-cap&quot;&gt;</span><br><span class="line">      ar on hunger.</span><br><span class="line">    &lt;/figcaption&gt;</span><br><span class="line">  &lt;/figure&gt;</span><br></pre></td></tr></table></figure><h3 id="style的部分"><a href="#style的部分" class="headerlink" title="style的部分"></a>style的部分</h3><ul><li>img要記得設最大寬度，讓他置中</li><li>#img-div，是包含照片的容器，注意原本版面左右是有留白,以及灰色，所以設定padding:10px<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">   <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">   <span class="attribute">display</span>: inline-block;</span><br><span class="line">   <span class="attribute">height</span>: auto;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="selector-id">#img-div</span> &#123;</span><br><span class="line">   <span class="attribute">background</span>: white;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="3-u1資訊的部分"><a href="#3-u1資訊的部分" class="headerlink" title="3.u1資訊的部分"></a>3.u1資訊的部分</h2></li><li>以section做區塊</li><li>使用blockquote，用來引用段落文字，如果引用的內容來自於網路，還可以用 cite 屬性指定引用來源 (URL)。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;section id=&quot;tribute-info&quot;&gt;</span><br><span class="line">&lt;h3 id=&quot;headline&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/h3&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;blockquote&gt;</span><br><span class="line">  &lt;p&gt;&lt;/p&gt;</span><br><span class="line">  &lt;cite&gt;&lt;/cite&gt;</span><br><span class="line">&lt;/blockquote&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#headline</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">550px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.6</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">16px</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="4-最下面一段"><a href="#4-最下面一段" class="headerlink" title="4.最下面一段"></a>4.最下面一段</h2><ul><li>以h3作為最後一段文字的區塊</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;h3&gt;</span><br><span class="line">&lt;a&gt;&lt;/a&gt;</span><br><span class="line">&lt;/h3&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#477ca7</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#74638f</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-tag">blockquote</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">545px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="完成的網址"><a href="#完成的網址" class="headerlink" title="完成的網址"></a>完成的網址</h2><p><a href="https://eva813.github.io/my-projects/tribute-page.html">我製作的網頁</a><br><a href="https://eva813.github.io/my-projects/tribute-page(v2).html">codpen的解法</a></p><hr><p>參考資料：</p><p><a href="https://chupainotebook.blogspot.com/2019/02/blog-post.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed:+blogspot/SMcpvm+(+%E7%AB%B9%E7%99%BD%E8%A8%98%E4%BA%8B%E6%9C%AC)&m=1">假圖</a><br><a href="https://medium.com/chloelo925/%E9%87%91%E9%AD%9A%E9%83%BD%E8%83%BD%E6%87%82%E7%9A%84%E7%B6%B2%E9%A0%81%E8%A8%AD%E8%A8%88-%E9%9B%9C%E8%A8%98-1e6068054e4a">金魚都能懂的網頁設計-雜記</a><br><a href="http://csscoke.com/2018/08/21/css-vertical-align/">CSS垂直置中技巧，我只會23個，你會幾個</a></p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推送靜態網頁到 GitHub</title>
      <link href="/2020/11/24/push-github-page/"/>
      <url>/2020/11/24/push-github-page/</url>
      
        <content type="html"><![CDATA[<h2 id="1-本地端創建資料夾"><a href="#1-本地端創建資料夾" class="headerlink" title="1.本地端創建資料夾"></a>1.本地端創建資料夾</h2><p>在自己的user底下，mkdir my_projects</p><h2 id="2-GitHub上創建專案-repo"><a href="#2-GitHub上創建專案-repo" class="headerlink" title="2.GitHub上創建專案(repo)"></a>2.GitHub上創建專案(repo)</h2><p><img src="https://i.imgur.com/4uIw6uY.png" alt=""></p><ul><li><h3 id="因為本地端的專案沒有下過git-init，所以選用-…-…or-create-a-new-repository-on-the-command-line-但如果本地端的資料夾已經-git-init過之後，…or-push-an-existing-repository-from-the-command-line"><a href="#因為本地端的專案沒有下過git-init，所以選用-…-…or-create-a-new-repository-on-the-command-line-但如果本地端的資料夾已經-git-init過之後，…or-push-an-existing-repository-from-the-command-line" class="headerlink" title="因為本地端的專案沒有下過git init，所以選用 ….…or create a new repository on the command line;但如果本地端的資料夾已經 git init過之後，…or push an existing repository from the command line"></a>因為本地端的專案沒有下過<code>git init</code>，所以選用 ….…or create a new repository on the command line;但如果本地端的資料夾已經 git init過之後，…or push an existing repository from the command line</h3></li></ul><p><img src="https://i.imgur.com/BINSuXP.png" alt=""></p><h2 id="3-本地端-gt-照著GitHub上的建議複製過去終端機"><a href="#3-本地端-gt-照著GitHub上的建議複製過去終端機" class="headerlink" title="3.本地端&gt;照著GitHub上的建議複製過去終端機"></a>3.本地端&gt;照著GitHub上的建議複製過去終端機</h2><p><img src="https://i.imgur.com/H1N0l14.png" alt=""></p><h2 id="4-GitHub重新整理，出現專案資料夾"><a href="#4-GitHub重新整理，出現專案資料夾" class="headerlink" title="4.GitHub重新整理，出現專案資料夾"></a>4.GitHub重新整理，出現專案資料夾</h2><p><img src="https://i.imgur.com/4mZXgOJ.png" alt=""></p><h2 id="5-建立分支，來存放之後上傳的網頁"><a href="#5-建立分支，來存放之後上傳的網頁" class="headerlink" title="5.建立分支，來存放之後上傳的網頁"></a>5.建立分支，來存放之後上傳的網頁</h2><p><code>git checkout -b gh-pages</code>：創建新分支(gh-pages)並同時移到此新分支上</p><p><code>git branch gh-pages</code>:創建新分支(gh-pages)<br><code>git checkout gh-pages</code>:移到(gh-pages)分支上</p><p><img src="https://i.imgur.com/85Z04Hv.png" alt=""></p><h2 id="6-測試檔案上傳"><a href="#6-測試檔案上傳" class="headerlink" title="6.測試檔案上傳"></a>6.測試檔案上傳</h2><p>開啟Visual Studio Code內建的終端機(Terminal)快速鍵為Ctrl + ~（鍵盤左上角的那顆，在 Esc 下面），或 功能選單-&gt; View -&gt; Integrated Terminal 。</p><ul><li>終端機 <code>git push</code></li><li>第一次push失敗，意指遠端還沒有建立這個branch，所以就依照它的指令操作</li></ul><p><img src="https://i.imgur.com/rmwYC1e.png" alt=""></p><ul><li>重新整理之後～就會看到本地端的檔案傳上去了</li></ul><p><img src="https://i.imgur.com/yOEEHtV.png" alt=""></p><ul><li>並且可以查看網址<br><a href="https://eva813.github.io/my-projects/test-index.html">https://eva813.github.io/my-projects/test-index.html</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git基本介紹-1</title>
      <link href="/2020/11/21/gitIntro-1/"/>
      <url>/2020/11/21/gitIntro-1/</url>
      
        <content type="html"><![CDATA[<p>Ｇit是用來，讓大家對於自己的程式碼做版本控制「Version Control System」</p><blockquote><blockquote><p>也如同：save load 大法<br> S是Save 存檔，L是Load 讀取;如：每天的工作可能都是每天新增、編輯、修改許多檔案，而git會紀錄每次檔案的修改資料</p></blockquote></blockquote><p>另外也是分散式控制系統「Distributed Version Control Systems」</p><blockquote><blockquote><p>可以和不同群組的人使用不同的方式，在同一個專案內協同合作。可讓專案主導者更精準的控制大專案內的小專案。</p></blockquote></blockquote><h2 id="安裝Git圖形介面工具"><a href="#安裝Git圖形介面工具" class="headerlink" title="安裝Git圖形介面工具"></a>安裝Git圖形介面工具</h2><p>透過圖形介面工具（GUI, Graphic User Interface）可以幫助使用者熟悉Git的操作指令。常見的有SourceTree 以及 GitHub Desktop 這兩款。<br>這裏以SourceTree作為範例：<br><a href="https://www.sourcetreeapp.com/">下載點</a><br><a href="https://ithelp.ithome.com.tw/articles/10206852">Sourcetree的下載與操作</a><br>  <strong><em>載完後的介面</em></strong><br><img src="https://i.imgur.com/04TzJ0s.png" alt=""></p><h2 id="創建第一個-Git-Repository"><a href="#創建第一個-Git-Repository" class="headerlink" title="創建第一個 Git Repository"></a>創建第一個 Git Repository</h2><p> <strong><em>先呈現終端機的指令</em></strong></p><ul><li>先確認狀態 <code>git status</code>(表示還沒有git)</li><li>創建資料夾 <code>mkdir hello_git</code></li><li>進入資料夾(hello_git)，並初始化 <code>git init</code></li><li>初始完成囉，出現 master標籤</li><li>再次確認狀態</li></ul><p><img src="https://i.imgur.com/kneVHZx.png" alt=""><br><img src="https://i.imgur.com/URJ3bOu.png" alt=""></p><h3 id="可以詳細看一下資料夾內部"><a href="#可以詳細看一下資料夾內部" class="headerlink" title="可以詳細看一下資料夾內部"></a><strong><em>可以詳細看一下資料夾內部</em></strong></h3><p><img src="https://i.imgur.com/hT0CUMo.png" alt=""></p><ul><li>透過<code>ls -a</code>可以看到git的隱藏檔</li></ul><h3 id="創建完成的同時，SourceTree也會有圖形介面可以看喔"><a href="#創建完成的同時，SourceTree也會有圖形介面可以看喔" class="headerlink" title="創建完成的同時，SourceTree也會有圖形介面可以看喔"></a>創建完成的同時，SourceTree也會有圖形介面可以看喔</h3><p><img src="https://i.imgur.com/59As6HT.png" alt=""></p><p>以上就是創建Git Repository 的最初步驟</p><hr><h2 id="熟悉-Git-基本指令"><a href="#熟悉-Git-基本指令" class="headerlink" title="熟悉 Git 基本指令"></a>熟悉 Git 基本指令</h2><h4 id="創建hello-git資料夾後，在裡面建立hello-txt"><a href="#創建hello-git資料夾後，在裡面建立hello-txt" class="headerlink" title="創建hello_git資料夾後，在裡面建立hello.txt"></a>創建hello_git資料夾後，在裡面建立hello.txt</h4><p><img src="https://i.imgur.com/SD39uTZ.png" alt=""></p><h4 id="進入vs-code，輸入hello-world"><a href="#進入vs-code，輸入hello-world" class="headerlink" title="進入vs code，輸入hello world"></a>進入vs code，輸入hello world</h4><p>  <strong><em>注意檔案變綠色</em></strong><br><img src="https://i.imgur.com/bdKBKX3.png" alt=""><br> <strong><em>查看git status,會是紅色</em></strong><br> <img src="https://i.imgur.com/vjDWNJh.png" alt=""></p><h3 id="接下來-git-add"><a href="#接下來-git-add" class="headerlink" title="接下來 git add"></a>接下來 <code>git add</code></h3><p> <img src="https://i.imgur.com/PSUh7Zc.png" alt=""></p><ul><li>使用git add ＋檔案，並看狀態後會發現變成綠色</li><li>或git add. 加入資料夾內所有的檔案<br><img src="https://i.imgur.com/dtVWtYp.png" alt=""></li></ul><h3 id="接下來-git-commit"><a href="#接下來-git-commit" class="headerlink" title="接下來 git commit"></a>接下來 <code>git commit</code></h3><p>git commit -m “add new file hello.txt”</p><ul><li>要注意 -m，以免進入vim</li><li>“ “引號內輸入這次要儲存的動作說明，如新增檔案、修改資料等說明</li><li><strong>有一個檔案改變,一行的資料修正*</strong><br><img src="https://i.imgur.com/8O82KJE.png" alt=""></li></ul><p>查看狀態<br> nothing to commit, working tree clean，表示已把檔案加入完成<br><img src="https://i.imgur.com/V8fUljG.png" alt=""></p><h3 id="Sourcetree"><a href="#Sourcetree" class="headerlink" title="Sourcetree"></a>Sourcetree</h3><p> <strong><em>可以看到歷史紀錄</em></strong><br><img src="https://i.imgur.com/OUFvghP.png" alt=""></p><hr><h2 id="再來練習一次"><a href="#再來練習一次" class="headerlink" title="再來練習一次"></a>再來練習一次</h2><h4 id="在vs-code裡，輸入hello-linda"><a href="#在vs-code裡，輸入hello-linda" class="headerlink" title="在vs code裡，輸入hello,linda"></a>在vs code裡，輸入hello,linda</h4><p><img src="https://i.imgur.com/IA3JOLy.png" alt=""><br><img src="https://i.imgur.com/Emcv1oF.png" alt=""><br><img src="https://i.imgur.com/gH1cFEV.png" alt=""></p><p><strong><em>同樣sourcetree 也會有紀錄</em></strong><br><img src="https://i.imgur.com/57n8uaP.png" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基本介紹-1</title>
      <link href="/2020/11/20/html-1/"/>
      <url>/2020/11/20/html-1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/JDE6QZb.png" alt=""></p><ul><li>標記式語言，也就是透過標籤來建立</li><li>目前的規範版本為 HTML 5<h1 id="建立第一個網頁"><a href="#建立第一個網頁" class="headerlink" title="建立第一個網頁"></a>建立第一個網頁</h1></li></ul><p><code>html:5</code>,<code>!</code> 建立HTML雛形</p><ul><li><p>輸入標題</p><p><img src="https://i.imgur.com/rNdXzJ4.png" alt=""></p></li><li><p>將建立的html放到瀏覽器</p></li></ul><p><img src="https://i.imgur.com/rrnJ0Kf.png" alt=""></p><h1 id="HTML的文件架構"><a href="#HTML的文件架構" class="headerlink" title="HTML的文件架構"></a>HTML的文件架構</h1><!DOCTYPE html><blockquote><p>Luka 程式柴教學<br><img src="https://i.imgur.com/eQmD5Qk.png" alt=""></p></blockquote><ul><li>字元集(charset)：UTF-8,Big5<blockquote><p><img src="https://i.imgur.com/BP4V514.png" alt=""></p></blockquote></li></ul><blockquote><p><img src="https://i.imgur.com/W9rljFi.png" alt=""></p></blockquote><h1 id="HTML的元素"><a href="#HTML的元素" class="headerlink" title="HTML的元素"></a>HTML的元素</h1><h2 id="1-h1"><a href="#1-h1" class="headerlink" title="1.h1"></a>1.<code>h1</code></h2><p><img src="https://i.imgur.com/0fymVOx.png" alt=""></p><p><code>&lt;head&gt; &lt;/head&gt;</code>網頁中的頭，它的任務是要容納文件的 metadata</p><p><code>&lt;h1&gt;Heading 1 &lt;/h1&gt;</code>網頁中的標題 headings</p><h2 id="2-lt-p-gt"><a href="#2-lt-p-gt" class="headerlink" title="2.&lt;p&gt;"></a>2.<code>&lt;p&gt;</code></h2><p>一個段落是一個block元素，段落與段落間有距離<br>例如：<br>html有block(<code>&lt;p&gt;</code>,<code>&lt;div&gt;</code>),inline(<code>&lt;span&gt;</code>)元素<br><code>&lt;br&gt;</code>換行，可與文內進行段落的區分</p><p>如圖：<br><img src="https://i.imgur.com/QNi6OuM.png" alt=""></p><h2 id="3-圖片-lt-img-gt"><a href="#3-圖片-lt-img-gt" class="headerlink" title="3.圖片 &lt;img&gt;"></a>3.圖片 <code>&lt;img&gt;</code></h2><p><code>&lt;img src=&quot;pic_trulli.jpg&quot; alt=&quot;Italian Trulli&quot;&gt;</code></p><p><code>src=</code>圖片的網址<br><code>alt</code> 圖片代表的意思，特別對SEO優化有幫助，且在圖片無法顯示時，能呈  現基本資訊</p><p><img src="https://i.imgur.com/NAkLq9P.png" alt=""></p><h2 id="4-連結標籤-lt-a-gt"><a href="#4-連結標籤-lt-a-gt" class="headerlink" title="4.連結標籤 &lt;a&gt;"></a>4.連結標籤 <code>&lt;a&gt;</code></h2><p><code>&lt;a href=&quot;https://www.w3schools.com/&quot;&gt;Visit W3Schools.com!&lt;/a&gt;</code></p><ul><li><code>href=</code> 連結要去的網址位置</li><li><code>&lt;a href=&quot;/html/default.asp&quot;&gt;HTML tutorial&lt;/a&gt;</code><br>-&gt; 也可以連結同一個檔案、目錄下的資料</li><li><code>&lt;a href=&quot;https://www.w3schools.com/&quot; target=&quot;_blank&quot;&gt;Visit W3Schools!&lt;/a&gt;</code></li><li><code>Target=&quot;_blank&quot;</code>開啟一個新的視窗，不會蓋掉前面已開啟的舊視窗，但要注意的是當開了新的視窗後，可能會影響原本視窗的運作<br>建議你要加上 rel=”noreferrer noopener”</li></ul><p><img src="https://i.imgur.com/1sTR3Fv.png" alt=""></p><h2 id="5-表格-lt-table-gt"><a href="#5-表格-lt-table-gt" class="headerlink" title="5.表格 &lt;table&gt;"></a>5.表格 <code>&lt;table&gt;</code></h2><p>使用的標籤有<code>table</code>,<code>th</code>,<code>td</code>，要使用時再去複製<a href="https://www.w3schools.com/html/html_tables.asp">語法</a>修改比較快～</p><p>簡易示意圖，清楚標籤所對應的表格位置：<br><img src="https://i.imgur.com/o8WwMSE.png" alt=""></p><h2 id="6-lt-form-gt-如：登入-會員註冊"><a href="#6-lt-form-gt-如：登入-會員註冊" class="headerlink" title="6.&lt;form&gt; 如：登入,會員註冊"></a>6.<code>&lt;form&gt;</code> 如：登入,會員註冊</h2><p>1) <code>action</code> 定義數據的發送位置<br>範例：沒有action 屬性，數據將發送到和表單所在的同一頁面<code>&lt;form&gt;&lt;/form&gt;</code><br>範例：數據將發送到指定的URL位置(也就是web server位置)<code>&lt;form action=&quot;http://foo.com&quot;&gt;&lt;/form&gt;</code></p><p>2) <code>&lt;input&gt; &lt;/input&gt;</code>表單輸入的設定<br>其中：<br><code>name</code> 屬性用來指定送出去的該筆資料要用什麼名稱<br><code>type</code> 建立表單元件，”text”文字,”password”密碼輸入,”checkbox”核取方塊,”submit” 表單的送出按鈕<br><code>placeholder</code>  輸入的提示訊息<br><code>value</code> 指定初始值 (default value)</p><p><img src="https://i.imgur.com/Zr7IFsA.png" alt=""></p><hr><p>參考資料<br><a href="https://www.w3schools.com/html/default.asp">W3SCHOOL</a><br><a href="https://pjchender.blogspot.com/2020/05/relnoreferrer-targetblank.html">Target=”_blank”的安全性風險</a><br><a href="https://www.itread01.com/iieq.html">你不曾察覺的隱患：危險的 target=”_blank” 與 “opener”</a><br><a href="https://ithelp.ithome.com.tw/articles/10206661"> JS - <code>&lt;form&gt;</code> 表單</a><br><a href="https://www.fooish.com/html/input-tag.html">HTML 表單元件 - <code>&lt;input&gt;</code> 標籤 (tag)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基本介紹-2</title>
      <link href="/2020/11/18/html-2/"/>
      <url>/2020/11/18/html-2/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/JDE6QZb.png" alt=""></p><p> 此篇文章主要再介紹HTML的元素、屬性，以及簡介在前端開發中常使用的css和javascript是如何和HTML搭配使用。</p><h2 id="HTML-元素-Element"><a href="#HTML-元素-Element" class="headerlink" title="HTML 元素 (Element)"></a>HTML 元素 (Element)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>完整的標籤會有開始、結尾：<code>&lt;p&gt;</code>,<code>&lt;/p&gt;</code>:分別為opening tag以及closing tag</li><li>標籤中間包圍的This is paragraph.是內容</li><li>起始標籤 + 內容 + 結束標籤:表示一個 HTML元素。</li></ul><h2 id="HTML-標籤屬性-Attribute"><a href="#HTML-標籤屬性-Attribute" class="headerlink" title="HTML 標籤屬性 (Attribute)"></a>HTML 標籤屬性 (Attribute)</h2><ul><li><code>&lt;p class=&quot;myP&quot;&gt;This is paragraph.&lt;/p&gt;</code></li><li>有些Attribute是HTML內建，如：<code>&lt;a href=&quot;./first.html&quot;&gt;</code></li><li>有些是為了用於css或是javascript的部分所加上去。如：class與id的使用。<ul><li>補充： <code>class</code>與<code>id</code><br>是在於 ID 選擇器在一個 HTML 文件中只能被使用一次，而 Class 選擇器在一個 HTML 文件中可以被使用多次;ID 選擇器可以被 Javascript 中的 GetElementByID 函數所運用，而 Class 選擇器無法被 Javascript 運用到。</li></ul></li></ul><h2 id="css-javascript與HTML-搭配"><a href="#css-javascript與HTML-搭配" class="headerlink" title="css, javascript與HTML 搭配"></a>css, javascript與HTML 搭配</h2><h3 id="1-css如何跟-HTML-搭配使用"><a href="#1-css如何跟-HTML-搭配使用" class="headerlink" title="1.css如何跟 HTML 搭配使用"></a>1.css如何跟 HTML 搭配使用</h3><h4 id="1-inline-CSS"><a href="#1-inline-CSS" class="headerlink" title="(1).inline CSS"></a>(1).inline CSS</h4><ul><li>在html中加入style屬性，來撰寫CSS<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color:blue;&quot;</span>&gt;</span>A Blue Heading<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color:red;&quot;</span>&gt;</span>A red paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>ps:此方式不建議使用，會造成維護的困難</li></ul><h4 id="2-internal-CSS"><a href="#2-internal-CSS" class="headerlink" title="(2).internal CSS"></a>(2).internal CSS</h4><p>在html檔案中，建立<code>&lt;style&gt; &lt;/style&gt;</code>區塊</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span> &#123;<span class="attribute">background-color</span>: powderblue;&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">h1</span>   &#123;<span class="attribute">color</span>: blue;&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">p</span>    &#123;<span class="attribute">color</span>: red;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-external-CSS"><a href="#3-external-CSS" class="headerlink" title="(3).external CSS"></a>(3).external CSS</h4><h5 id="用link的方式，連結到另一個css檔案"><a href="#用link的方式，連結到另一個css檔案" class="headerlink" title="用link的方式，連結到另一個css檔案"></a>用link的方式，連結到另一個css檔案</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span>&gt;</span></span><br><span class="line">  /*This example links to a</span><br><span class="line">  style sheet located in the same folder as the current page*/</span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is a heading<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><code>&lt;link rel=&quot;value&quot;&gt;</code>,”stylesheet”文檔的外部樣式表</strong></p><h3 id="2-HTML-中使用-javascript"><a href="#2-HTML-中使用-javascript" class="headerlink" title="2.HTML 中使用 javascript"></a>2.HTML 中使用 javascript</h3><h4 id="在html的body尾端"><a href="#在html的body尾端" class="headerlink" title="在html的body尾端"></a>在html的body尾端</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">document.getElementById(&quot;demo&quot;).innerHTML = &quot;Hello JavaScript!&quot;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="創立-js檔案，並引入"><a href="#創立-js檔案，並引入" class="headerlink" title="創立.js檔案，並引入"></a>創立.js檔案，並引入</h4><ul><li><strong>放在<code>&lt;head&gt;</code> 前面</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//HTML4 與 （x）HTML</span></span><br><span class="line">&lt;script type=<span class="string">&quot;javascript.js&quot;</span>&gt; &lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//HTML5</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;javascript.js&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>參考資料:<br><a href="https://www.w3schools.com/html/html_css.asp">W3school</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/link">MDN</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新手入門必學Command Line</title>
      <link href="/2020/11/17/Line/"/>
      <url>/2020/11/17/Line/</url>
      
        <content type="html"><![CDATA[<p>學習Command Line可以幫助我們呼叫檔案、刪除檔案更加快速，此外也可以很快的查看資料夾內的所有檔案，不用透過電腦圖示一個個點選。透過指令的使用，可以更有效率，操作也可以更加廣泛<br>當然，除了上述的便利性之外，它還能夠有許多操作，下面會介紹一些基本指令。</p><h2 id="Command-Line-常用指令介紹"><a href="#Command-Line-常用指令介紹" class="headerlink" title="Command Line 常用指令介紹"></a>Command Line 常用指令介紹</h2><p>tip: 搜尋：linux cheat sheet，就可以查詢到指令的使用方法。(如：cd:change director (移動到…資料夾))</p><ol><li><p><code>pwd</code> 現在位置<br> pwd –help 會提供詳細使用資訊<br> <img src="https://i.imgur.com/VQgzyhw.png" alt=""></p></li><li><p><code>ls</code> 列出資料夾內的東西<br> <code>ls -l</code> 列出詳細資料<br> <code>ls -s</code><br> <code>ll</code> 列出檔案權限的使用者<br> <img src="https://i.imgur.com/39J68tH.png" alt=""></p></li></ol><ol start="4"><li><p><code>touch</code> 創建檔案<br> <img src="https://i.imgur.com/1WbeaVG.png" alt=""></p></li><li><p><code>cd</code> 移動到..地方</p></li><li><p><code>cd..</code> 回到上個資料夾</p></li><li><p><code>q</code> 離開</p></li><li><p><code>ctrl +c</code> 跳出進行的程序</p></li><li><p><code>mkdir</code>  hello (make dir) 建立目錄(資料夾) 名稱為hello<br> <strong><em>創建好的資料夾會放在..</em></strong><br> <img src="https://i.imgur.com/ZUFmHQs.png" alt=""></p><p><img src="https://i.imgur.com/Jqscc2A.png" alt=""></p><h3 id="刪除"><a href="#刪除" class="headerlink" title="刪除"></a>刪除</h3></li><li><p><code>rm</code> index.html (指將整個檔案砍掉 不指是到垃圾桶)</p></li><li><p><code>rmdir</code> 刪除目錄</p></li><li><p><code>rm -rf</code>  強制刪除<br> <img src="https://i.imgur.com/HJeovVl.png" alt=""></p></li></ol><h3 id="複製、命名與移動"><a href="#複製、命名與移動" class="headerlink" title="複製、命名與移動"></a>複製、命名與移動</h3><ol><li><code>cp</code> hello.txt(複製檔案)  </li><li><code>mv</code> hello.txt I_am_dir/  （將hello.txt 移到I_am_dir）<br>也可以用來改名 mv hello_word.txt hello_luka.txt (將hello_word.txt改名為hello_luka.txt)<br><img src="https://i.imgur.com/Wx6oGkI.png" alt=""></li></ol><h3 id="系統管理相關指令"><a href="#系統管理相關指令" class="headerlink" title="系統管理相關指令"></a>系統管理相關指令</h3><ol><li>sudo:使用最高權限（superuser）執行指令</li><li>kill：根據 Process ID 指定要終止程式</li><li><code>open .</code> 可開啟檔案總管</li><li>code.  開啟 vs code<h3 id="其他補充"><a href="#其他補充" class="headerlink" title="其他補充"></a>其他補充</h3></li><li><code>cat</code> 列出檔案內的內容</li><li><code>who</code> 顯示電腦user的名稱</li><li><code>clear</code> 清除終端機畫面的指令</li></ol><h2 id="TLDR"><a href="#TLDR" class="headerlink" title="TLDR"></a>TLDR</h2><p> 安裝 <code>npm install -g tldr</code><br> 安裝之後，輸入 <code>tldr  ls</code> 就會說明指令的使用</p><p> 參考資料：<br> <a href="https://blog.techbridge.cc/2017/12/23/linux-commnd-line-tutorial/">https://blog.techbridge.cc/2017/12/23/linux-commnd-line-tutorial/</a><br> <a href="https://medium.com/starbugs/linux-%E6%96%B0%E6%89%8B%E5%85%A5%E9%96%80%E5%BF%85%E8%A3%9D-tldr-%E5%91%BD%E4%BB%A4%E5%88%97%E7%A5%9E%E5%85%B5-9fbba0d4f028">https://medium.com/starbugs/linux-%E6%96%B0%E6%89%8B%E5%85%A5%E9%96%80%E5%BF%85%E8%A3%9D-tldr-%E5%91%BD%E4%BB%A4%E5%88%97%E7%A5%9E%E5%85%B5-9fbba0d4f028</a><br><a href="https://yakimhsu.com/project/project_w1_CommandLine.html">Command Line - Terminal、基本指令介紹 | Yakim shu</a><br><a href="https://www.minwt.com/mac/14653.html">Mac OS X Terminal 終端機常用語法教學 | 梅問題．教學網</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Command Line </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>將win7 更新到win10</title>
      <link href="/2020/04/20/%E5%B0%87w%E5%B0%87win7-%E6%9B%B4%E6%96%B0%E5%88%B0win10/"/>
      <url>/2020/04/20/%E5%B0%87w%E5%B0%87win7-%E6%9B%B4%E6%96%B0%E5%88%B0win10/</url>
      
        <content type="html"><![CDATA[<p>由於之前電腦是window7,但實在有好多更新無法跑 </p><p>所以！ </p><p>我決定自己嘗試將電腦從window7更新到window10 </p><p>第一步：勾選查看副檔名、顯示隱藏檔案 </p><p>控制台&gt;資料夾選項&gt;將隱藏取消  </p><p>第二步：下載window10 系統安裝光碟之iso映像檔  </p><p>1.至微軟的官方網站下載 windows 10 系統安裝光碟之ISO映像檔&gt;至下載到電腦的exe檔&gt; 點選安裝&gt; 選擇 建立另一部電腦的安裝媒體  </p><p>2.將载好的iso存入usb隨身碟，開機安裝，或燒入光碟  </p><p>USB 開機製作軟體， 教你該如何使用 Rufus 魯弗斯 製作［ Windows 10 作業系統 ］安裝 USB 隨身碟  </p><p>3.到安裝碟內的sources資料夾，將gatherossate.exe複製到win7桌面，點擊，出現Genuine Ticket.xml 文件，此文件需好好保存，未來重灌時需要用到  </p><p>4.成功放入 USB後，就插著電腦上 用BIOS 開啟方式 ACER(關機&gt;開機時 按F2+電源紐)&gt;BOOST&gt;將你的隨身碟 案F5往上移到第一順位，在按F10 儲存/啟動  </p><p>接著就會開始安裝，選擇完中文…等資料&gt;選擇 自訂&gt;下一步&gt; 接著就讓它安裝  </p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
